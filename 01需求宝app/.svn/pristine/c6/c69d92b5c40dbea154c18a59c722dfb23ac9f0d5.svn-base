<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport"
          content="maximum-scale=1.0,minimum-scale=1.0,user-scalable=0,width=device-width,initial-scale=1.0"/>
    <meta name="format-detection" content="telephone=no,email=no,date=no,address=no">
    <title>title</title>
    <link rel="stylesheet" type="text/css" href="../../css/api.css"/>
    <link rel="stylesheet" type="text/css" href="../../css/aui.css"/>
    <link rel="stylesheet" type="text/css" href="../../script/swiper/swiper-4.2.2.min.css"/>
    <style type="text/css">
        html, body {
            height: 100%;
            background: #F4F4F4;
        }

        .list_wrap {
            height: 100%;
            /*overflow: auto;*/
            -webkit-overflow-scrolling: touch;
        }

        .refresh_header {
            height: 1.6rem;
            line-height: 1.7rem;
            text-align: center;
            color: #FFF;
            background: #EEEEEE;
            display: none;
        }

        .network_error {
            display: none;
            width: 100%;
            color: #666;
        }

        .network_error img {
            display: inline-block;
            height: .9rem;
            width: .9rem;
            margin-right: .3rem;
            transform: translateY(.2rem);
            -webkit-transform: translateY(.2rem);
        }

        .aui-list-item {
            background: #fff;
            position: relative;
        }

        .item-top {
            display: flex;
            display: -webkit-box;
            display: -webkit-flex;
        }

        .header-wrap {
            width: 2rem;
            position: relative;
            margin-right: .4rem;
        }

        .user-header {
            border-radius: 50%;
            height: 2rem;
            width: 2rem;
        }

        .red_vip, .yellow_vip, .purple_vip {
            position: absolute;
            top: 1.2rem;
            left: 1.2rem;
            height: .75rem;
            width: .75rem;
        }

        .item-title {
            flex: 1;
            -webkit-box-flex: 1;
            -webkit-flex: 1;
            color: #333;
        }

        .aui-font-size-15{
            font-size: .75rem;
            line-height: .85rem;
            padding-top: .25rem;
            font-weight: bold;
            display: block;
            max-width: calc(100% - 2rem)
        }

        .publishTime {
            color: rgb(126,126,126);
            display: block;
        }


        .item-more {
            width: 1.2rem;
        }

        .item-more img {
            width: 1.2rem;
            margin-top: .4rem;
        }

        .item-middle {
            color: rgb(54,54,54);
        }

        .detail-img-wrap {
            overflow: hidden;
        }

        .aui-flex-3 {
            display: inline-block;
            float: left;
            width: calc(100% / 3 - 5px);
        }

        .detail-imgO {
            max-height: 9rem;
            max-width: 9rem;
        }

        .detail-imgM {
            background: url("../../image/test/test-img3.JPG");
            background-size: cover;
            background-repeat: no-repeat;
            background-position: center;
            margin-right: 5px;
            margin-bottom: 6px;
        }

        .video-wrap {
            height: 9.7rem;
            width: calc(100% - 5px);
            background-color: #000;
            overflow: hidden;
            position: relative;
            background-repeat: no-repeat;
            background-size: cover;
            background-position: center;
        }

        .play-video {
            position: absolute;
            width: 2.2rem;
            height: 2.2rem;
            left: 50%;
            top: 50%;
            -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
        }

        .video-time {
            position: absolute;
            opacity: 0.3;
            background: #000000;
            border-radius: 1rem;
            color: #fff;
            font-size: .6rem;
            text-align: right;
            bottom: .5rem;
            right: .5rem;
        }

        .browserNumber, .commentNumber, .praiseNumber, .isPraiseNumber {
            display: inline-block;
            padding-left: 1.2rem;
            color: #999;
            background-size: 1.2rem;
            background-repeat: no-repeat;
            background-position: left;
            margin-left: .7rem;
        }

        .browserNumber {
            background-image: url("../../image/community/gk@3x.png");
        }

        .commentNumber {
            background-image: url("../../image/community/Message@3x.png");
        }

        .praiseNumber {
            background-image: url("../../image/community/zan@3x.png");
        }

        .isPraiseNumber {
            background-image: url("../../image/mine/zans.png");
        }

        .aui-break {
            word-break: break-all;
        }
        .all{
            color: rgb(49,131,255);
        }
        .allSummary{
            display: inline;
        }

        .no-data {
            background: #fff;
            text-align: center;
            overflow: hidden;
            height: 100%;
        }

        .no-data img {
            height: 5rem;
            width: 6.2rem;
            margin: 4rem auto .6rem auto;
        }

        .no-data p {
            font-size: .75rem;
            color: #999;
        }

        .blank-bottom{
            height: 54px;
        }
        .status_wrap{
            position: absolute;
            bottom: .55rem;
            left: .8rem;
        }

        .fine-label {
            width: 0.8rem;
            height: 0.8rem;
            background: url(../../image/rank/jx@3x.png) no-repeat;
            background-size: contain;
            vertical-align: sub;
        }
        .floatL{
            float: left;
            margin-left:0
        }
        [v-cloak] {
            display: none;
        }
    </style>
</head>
<body>
<div class="refresh_header aui-font-size-14">
    <div class="network_error">
        <img src="../../image/home/icon_th.png" alt="">网络不给力，请检查你的网络设置。
    </div>
</div>
<div class="list_wrap" v-cloak>
    <div v-if="list.length == 0" class="no-data aui-margin-t-5">
        <img src="../../image/empty/nojz@2x.png" alt="">
        <p>暂无动态</p>
    </div>
    <div v-for="(item,currentIndex) in list" v-if="list.length != 0 && refresh"
         class="aui-list-item aui-padded-10 aui-padded-b-10 aui-margin-t-5" tapmode
         @click="fnOpenDetails(item.dataTypeNew,item.id)">
        <div class="item-top aui-padded-r-5 aui-padded-l-5">
            <div class="header-wrap" tapmode @click.stop="fnOpenUser(item)">
                <img class="user-header" src="../../image/home/tmp_default_header.png" :src="item.userHead"/>
                <img v-if="item.talentFlag == 1" class="red_vip" src="../../image/mine/red_vip.png" alt=""/>
                <img v-if="item.talentFlag == 2" class="yellow_vip" src="../../image/mine/yellow_vip.png" alt=""/>
                <img v-if="item.talentFlag == 3" class="purple_vip" src="../../image/mine/purple_vip.png" alt=""/>
            </div>
            <div class="item-title aui-ellipsis-1">
                <span class="aui-font-size-15 aui-ellipsis-1" tapmode @click.stop="fnOpenUser(item)">
                    {{item.userName}}</span>
                <span class="aui-font-size-12 publishTime" v-text="formatDateTime(item.publishTime)"></span>
            </div>
            <div class="item-more" tapmode @click.stop="fnShare(item)">
                <img src="../../image/mine/more@2x.png" alt="">
            </div>
        </div>
        <div class="item-middle aui-margin-t-10 aui-font-size-16 aui-padded-l-5">
            <div class="aui-padded-r-5 aui-break" v-text="item.title"></div>
            <div class="aui-margin-b-10 aui-padded-r-5 aui-break summary" v-if="item.summary.length < 80"  v-text="item.summary"></div>
            <div class="aui-margin-b-10 aui-padded-r-5 aui-break summary" v-else><span class="allSummary" v-text="item.summary.substring(0,80) + '...'"></span><span class="all">全文</span></div>
            <div v-if="item.dataTypeNew == 3" class="video-wrap"
                 :style="{'background-image':'url('+item.storyMediaList[0].url+'?x-oss-process=video/snapshot,t_3000,f_jpg)'}">
                <img class="play-video" src="../../image/edit_topic/play.png" alt="">
                <div class="video-time aui-padded-l-10 aui-padded-r-10" v-text="item.duration"></div>
            </div>
            <div v-if="item.storyImgs && item.storyImgs.length != 0 && item.dataTypeNew != 3" class="detail-img-wrap">
                <div v-if="item.storyImgs.length == 1" class="detail-imgO">
                    <img :src="item.storyImgs[0]" alt="" tapmode @click.stop="fnPreviewPicture(item,0)">
                </div>
                <div v-else-if="item.storyImgs.length != 1 && item.dataTypeNew == 1" class="detail-imgM aui-flex-3"
                     v-for="(image,index) in item.storyImgs"
                     :style="{'background-image':'url('+fnAppendUrl(image)+')','margin-right': item.storyImgs.length == 4 && index == 1?'7px':''}"
                     tapmode @click.stop="fnPreviewPicture(item,index)"></div>
                <div v-else-if="item.storyImgs.length != 1 && item.dataTypeNew == 2" class="detail-imgM aui-flex-3"
                     v-for="(image,index) in item.storyImgs.slice(0,3)"
                     :style="{'background-image':'url('+fnAppendUrl(image)+')'}"
                     tapmode @click.stop="fnPreviewPicture(item,index)"></div>
            </div>
        </div>
        <div class="item-bottom aui-margin-t-10 aui-padded-r-5 aui-font-size-12 aui-text-right">
            <div class="browserNumber" :class="{'floatL':item.isChoice == 0}" v-text="fnShowCount(item.browserNumber)"></div>
            <div class="commentNumber" v-text="fnShowCount(item.commentNumber)"></div>
            <div :class="item.userPraiseFlag == 0 ? 'praiseNumber' : 'isPraiseNumber'"
                 v-text="fnShowCount(item.praiseNumber)"
                 @click.stop="fnPraise(item,currentIndex)"></div>
        </div>
        <div class="status_wrap"><span v-if="item.isChoice != 0" class="fine-label"></span></div>
    </div>
    <div class="blank-bottom"></div>
</div>
</body>
<script type="text/javascript" src="../../script/api.js"></script>
<script type="text/javascript" src="../../script/vue.js"></script>
<script type="text/javascript" src="../../script/fastclick.js"></script>
<script type="text/javascript" src="../../script/common.js"></script>
<script type="text/javascript" src="../../script/service.js"></script>
<script type="text/javascript" src="../../script/signature.js"></script>
<script type="text/javascript" src="../../script/jquery.js"></script>
<script type="text/javascript">
    var commonVue, shareTopicInfo,currentId;
    var pageIndex = 1;
    var isShare = false;
    apiready = function () {
        $app.fnSetRefresh(fnRefresh);
        commonVue.fnGetStoryIndexByCondition(api.pageParam.commonId);
        fnInitListener();
        fnScrollListener();
        fnInitStyle();
    };

    function fnInitStyle() {
        $api.css($api.dom('.list_wrap'), 'padding-bottom:' + (api.safeArea.bottom + 54) + 'px');
    }

    function fnInitListener() {
        $event.addEventListener('select_frame_event_' + 4, function (){
            fnSwitchScrollTopBtn()
        });
        $event.scrollBottomListener(function () {
            $app.showProgress();
            pageIndex++;
            commonVue.fnGetStoryIndexByCondition(currentId, true, false);
        });
        $event.addEventListener('NaviteCallAPICloudMethod', function (ret) {
            $app.hideProgress();
            var ret = ret.value;
            if (ret.type == 3 && ret.tag == api.frameName) {
                $app.hideProgress();
                if (ret.success == 1) {
                    isShare = true;
                    fnSuccess();
                    $app.toast('分享成功');
                } else {
                    $app.toast('分享失败');
                }
            } else if (ret.type == 13) {
                if (ret.tag == 'resume') {
                    fnSuccess();
                }
            }
        });
    }

    function fnRefresh() {
        pageIndex = 1;
        commonVue.fnGetStoryIndexByCondition(currentId, false, true);
    }
    var isOpen = false;
    function fnSwitchScrollTopBtn() {
        var scrollTop = document.documentElement.scrollTop || document.body.scrollTop;
        if (scrollTop > api.winHeight * 3) {
            api.execScript({
                name: 'root',
                script: 'fnOpenScrollTopBtnFrame();'
            });
            api.setPrefs({
                key: 'scroll_frame_name',
                value: api.frameName
            });
            isOpen = true;
        } else {
            api.execScript({
                name: 'root',
                script: 'fnCloseScrollTopBtnFrame();'
            });
            isOpen = false;
        }
    }

    function fnShowRefreshResult(length) {
        api.readFile({
            path: api.boxDir + '/userid.txt'
        }, function (ret, err) {
            if (ret) {
                var _userid = ret.data;
                if (_userid != '') {
                    $api.css($api.dom('.refresh_header'), 'display:block');
                }
            }
        });
    }

    function fnScrollListener() {
        $(document).scroll(function(e) {
            var scrollTop = $(this).scrollTop();
            if (scrollTop > api.winHeight * 3) {
                if (!isOpen) {
                    api.execScript({
                        name : 'root',
                        script : 'fnOpenScrollTopBtnFrame();'
                    });
                    api.setPrefs({
                        key: 'scroll_frame_name',
                        value: api.frameName
                    });
                }
                isOpen = true;
            } else {
                if (isOpen) {
                    api.execScript({
                        name : 'root',
                        script : 'fnCloseScrollTopBtnFrame();'
                    });
                }
                isOpen = false;
            }
        });
    }

    function fnScrollTop() {
        document.body.scrollTop = document.documentElement.scrollTop = 0;
    }

    function fnHideTabBar() {
        $event.isShowHomeTab(false)
    }

    function fnGetShareUrl() {
        var memberId = api.readFile({
            sync: true,
            path: api.boxDir + '/userid.txt'
        });
        if ($app.isEmpty(memberId)) {
            memberId = shareTopicInfo.userCode;
        }
        var params = {
            type: shareTopicInfo.dataTypeNew,
            id: shareTopicInfo.id,
            memberId: memberId
        };
        return new Base64().encode(JSON.stringify(params));
    }

    function fnCopy() {
        var clipBoard = api.require('clipBoard');
        clipBoard.set({
            value: SHARE_HOST + '/topic_details_frame.html?' + fnGetShareUrl()
        }, function (ret, err) {
            if (ret && ret.status) {
                $app.toast('复制成功');
                fnSuccess()
            } else {
                $app.toast('复制失败');
            }
        });
    }

    function fnSuccess() {
        api.setFrameAttr({
            name: 'edit_btn_frame',
            hidden: false
        });
        api.setFrameAttr({
            name: 'scroll_top_btn_frame',
            hidden: false
        });
        api.closeFrame({
            name: 'list_share_frame'
        });
        if(isShare){
            $event.isShowHomeTab(true);
            isShare = false
        }
    }

    function fnShareNative(platformType) {
        var storyContent = commonVue.fnReplaceComment(shareTopicInfo.summary);
        var url = SHARE_HOST + '/topic_details_frame.html?' + fnGetShareUrl();
        var title = shareTopicInfo.title ? shareTopicInfo.title + '-顺逛微社区' : shareTopicInfo.userName + '的话题-顺逛微社区'; //分享标题
        var content = storyContent ? storyContent.substr(0, 30) : '马上进入，参与话题讨论吧...';
        var pic = shareTopicInfo.mainImg && shareTopicInfo.mainImg.indexOf('../') == '-1' ? shareTopicInfo.mainImg : 'http://www.ehaier.com/mstatic/wd/v2/img/sg.png';//分享图片，写绝对路径  是否后台获取
        if ($app.isEmpty(pic)) {
            pic = 'http://www.ehaier.com/mstatic/wd/v2/img/sg.png';
        }
        $app.showProgress();
        $event.callRNEvent(3,1,{
            command : [title, content, pic, url, 0, platformType]
        });
    }

    commonVue = $app.MyVue({
        el: '.list_wrap',
        data: {
            list: [],
            refresh: false
        },
        methods: {
            fnGetStoryIndexByCondition: function (id, isLoadMore, isRefresh) {
                currentId = id;
                $http.GET(UrlRouter.getStoryIndexByCondition, {//获取置顶列表失败
                    values: {
                        pageIndex: pageIndex,
                        pageSize: 20,
                        searchType: 3,
                        tagId: id
                    }
                }, function (ret, err) {
                    $app.hideProgress();
                    api.refreshHeaderLoadDone();
                    if (ret.data.list && ret.data.list.length > 0) {
                        $api.css($api.dom('.no-data'), 'display:none');
                        if (isRefresh) {
                            if (pageIndex == 1) {
                                commonVue.refresh = false;
                            }
                            commonVue.list = [];
                        }
                        commonVue.fnAppendData(commonVue.list, ret.data.list);
                    } else {
                        if (isLoadMore) {
                            fnToast("没有更多");
                        }
                        if (isRefresh) {
                            vue.list = [];
                            $api.css($api.dom('.no-data'), 'display:block');
                        }
                    }
                });
            },
            fnAppendData: function (oldArr, data) {
                for (var i = 0; i < data.length; i++) {
                    if (!$app.isEmpty(data[i].storyImgs)) {
                        data[i].storyImgs = data[i].storyImgs.split(",");
                        var lengths = data[i].storyImgs.length;
                        if (data[i].storyImgs[lengths - 1] == '') {
                            data[i].storyImgs.splice(-1);
                        }
                    }
                    if ($app.isEmpty(data[i].userHead)) {
                        data[i].userHead = '../../image/home/tmp_default_header.png';
                    }else if (data[i].userHead.indexOf('ehaier') !== -1) {
                        data[i].userHead = data[i].userHead + '@120_120';
                    }
                    if ($app.isEmpty(data[i].userName)) {
                        data[i].userName = data[i].userId;
                    }
                    if(data[i].userName.length > 10){
                        data[i].userName = data[i].userName.substring(0,10) + '...';
                    }
                    var ext;
                    if(data[i].storyMediaList){
                        ext = data[i].storyMediaList[0].ext;
                    }
                    var duration = 0;
                    if(ext){
                        duration = JSON.parse(ext).duration;
                    }
                    data[i].durationTime = commonVue.fnDuration(duration);
                    data[i].duration = data[i].durationTime;
                    oldArr.push(data[i]);
                }
                if(pageIndex == 1) {
                    setTimeout(function(){
                        commonVue.refresh = true;
                    },100);
                }
                return oldArr;
            },
            fnShare: function (item) {
                api.readFile({
                    path: api.boxDir + '/userid.txt'
                }, function (ret, err) {
                    if (ret) {
                        var _userid = ret.data;
                        if (_userid === '') {
                            commonVue.fnOpenLogin();
                            return;
                        }
                        api.setFrameAttr({
                            name: 'edit_btn_frame',
                            hidden: true
                        });
                        api.setFrameAttr({
                            name: 'scroll_top_btn_frame',
                            hidden: true
                        });
                        fnHideTabBar();
                        shareTopicInfo = item;
                        $app.openFrame('list_share_frame',null,null,{
                            frameName:api.frameName
                        },{
                            bounces: false
                        })
                    }
                });
            },
            fnReplaceComment: function (comment) {
                if (!$app.isEmpty(comment)) {
                    comment = comment.replace(/<br\s*\/?>/gi, "\r\n");
                    comment = comment.replace(/<br\/>/g, "\r\n");
                    comment = comment.replace(/<br>/g, "\r\n");
                    comment = comment.replace(/<[^>]+>/g, "");
                    return comment;
                }
                return '';
            },
            fnDuration: function (duration) {
                if (duration) {
                    duration = parseInt(duration);
                    var second = parseInt(duration) % 60;
                    var min = parseInt(duration / 60);
                    if (min < 10) {
                        min = '0' + min;
                    }
                    if (second < 10) {
                        second = '0' + second;
                    }
                    return min + ":" + second;
                }
                return '00:00';
            },
            formatDateTime: function (datetime) {
                if (!datetime)
                    return "";
                var tempDate;
                tempDate = datetime.replace(/-/g,':').replace(' ',':');
                tempDate = tempDate.split(':');
                tempDate = new Date(tempDate[0],(tempDate[1]-1),tempDate[2],tempDate[3],tempDate[4],tempDate[5]);
                var current_date = new Date().getTime();
                var mul = current_date - tempDate;
                var time = parseInt(mul / 1000);
                if (time < 60) {
                    return "刚刚";
                } else if (time < 3600) {
                    return parseInt(time / 60) + " 分钟前";
                } else if (time < 86400) {
                    return parseInt(time / 3600) + " 小时前";
                }
                return datetime.split(' ')[0];
            },
            fnOpenDetails: function (dataTypeNew, id) {
                $app.openWin('topic_details', {
                    type: dataTypeNew,
                    id: id
                }, {
                    url: 'widget://html/topic/topic_details.html'
                });
                fnHideTabBar()
            },
            fnOpenUser: function (item) {
                api.readFile({
                    path: api.boxDir + '/userid.txt'
                }, function (ret, err) {
                    if (ret) {
                        var _userid = ret.data;
                        if (_userid === '') {
                            commonVue.fnOpenLogin();
                            return;
                        }
                        fnHideTabBar();
                        if (item.userId == _userid) {
                            $app.openWin('mine', null, {
                                url: 'widget://html/mine/mine.html'
                            })
                        } else {
                            $app.openWin('ta_page', {
                                userId: item.userId
                            }, {
                                url: 'widget://html/ta_page/ta_page.html'
                            })
                        }
                    }
                });
            },
            fnOpenLogin: function () {
                $event.callRNEvent(1, 1, {
                    toPageName: 'Login'
                });
            },
            fnPraise: function (item, index) {
                $http.GET(UrlRouter.getPraiseStory, {
                    values: {
                        storyId: item.id,
                        userCode: item.userId
                    }
                }, function (ret, err) {
                    if (item.userPraiseFlag == 0) {
                        commonVue.$set(commonVue.$data.list[index], 'userPraiseFlag', 1);
                        commonVue.$set(commonVue.$data.list[index], 'praiseNumber', item.praiseNumber + 1);
                    } else {
                        commonVue.$set(commonVue.$data.list[index], 'userPraiseFlag', 0);
                        commonVue.$set(commonVue.$data.list[index], 'praiseNumber', item.praiseNumber - 1);
                    }
                });
            },
            fnPreviewPicture: function (item,index) {
                $event.isShowHomeTab(false);
                var arr = item.storyImgs;
                $app.openWin('preview_picture',{
                    urlArr:arr,
                    activeIndex:index
                },{
                    url:'../topic/preview_picture.html'
                })
            },
            fnShowCount: function (count) {
                if (count >= 10000) {
                    return (count/10000).toFixed(1) + '万';
                }
                return count;
            },
            fnAppendUrl:function (image) {
                if(image.indexOf('ehaier') !== -1){
                    return image + '@300_300';
                }
                return image;
            }
        },
        updated:function () {
            var imgList = $api.domAll('.aui-flex-3');
            var imgW = parseInt(api.frameWidth)/3 - 5;
            for (var i = 0; i < imgList.length; i++) {
                $api.css(imgList[i], 'height:' + imgW + 'px');
            }
        }
    });


</script>
</html>