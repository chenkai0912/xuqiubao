<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport"
          content="maximum-scale=1.0,minimum-scale=1.0,user-scalable=0,width=device-width,initial-scale=1.0"/>
    <meta name="format-detection" content="telephone=no,email=no,date=no,address=no">
    <title>话题详情</title>
    <link rel="stylesheet" type="text/css" href="../../css/api.css"/>
    <link rel="stylesheet" type="text/css" href="../../css/meui.css"/>
    <link rel="stylesheet" type="text/css" href="../../css/swiper.css"/>
    <link rel="stylesheet" type="text/css" href="../../css/aliPlayer.css"/>
    <link rel="stylesheet" type="text/css" href="../../css/recommend_frame.css"/>
    <link rel="stylesheet" type="text/css" href="../../css/edit_topic_frame.css"/>
    <link rel="stylesheet" type="text/css" href="../../css/topic_details.css?v=2"/>
    <link rel="stylesheet" type="text/css" href="../../css/flex-layout.css"/>
    <link rel="stylesheet" href="../../css/normalize3.0.2.min.css"/>
    <link rel="stylesheet" href="../../css/style.css?v=7"/>
    <link href="../../css/mobiscroll.css" rel="stylesheet"/>
    <link href="../../css/mobiscroll_date.css" rel="stylesheet"/>
    <script type="text/javascript" src="../../script/flexible.js"></script>
    <style>
        body, html {
            padding-bottom: 50px;
            -webkit-overflow-scrolling: touch;
        }
        #warp {
            display: none;
        }
        .video_play_div {
            width: 100%;
            height: 214px;
            background: #000;
            position: fixed;
            top: 0;
            z-index: 99;
        }
        .video_inner {
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
            height: 214px;
        }
        .video_no_wifi {
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0);
            display: none;
            z-index: 88;
        }
        .video_corver_img {
            position: absolute;
            width: 100%;
            height: 100%;
            left: 0;
            top: 0;
            z-index: 1;
            background-color: #8FA8CC;
            background-repeat: no-repeat;
            background-size: cover;
            background-position: center;
        }
        .video_play_btn {
            position: absolute;
            width: 52px;
            height: 52px;
            left: 50%;
            top: 50%;
            margin-left : -26px;
            margin-top : -26px;
            background: url(../../image/edit_topic/play.png) no-repeat;
            background-size: 52px 52px;
            z-index: 99;
        }
        .rotate{
            -webkit-animation: run 3s linear 0s infinite;
        }
        @-webkit-keyframes run {
            from {
                -webkit-transform: rotate(0deg);
            }
            to {
                -webkit-transform: rotate(360deg);
            }
        }
        .no_wifi_toast {
            position: absolute;
            left: 50%;
            top: 65px;
            margin-left: -120px;
            width: 240px;
            height: 64px;
            line-height: 22px;
            padding: 9px 23px;
            font-size: 16px;
            color: #FFF;
            text-align: center;
            background: rgba(0, 0, 0, 0.70);
            border-radius: 8px;
            box-sizing: border-box;
        }
        .no_wifi_play {
            position: absolute;
            left: 50%;
            top: 153px;
            margin-left: -47px;
            width: 94px;
            height: 30px;
            line-height: 30px;
            font-size: 14px;
            color: #FF6026;
            text-align: center;
            background: rgba(0, 0, 0, 0.55);
            border-radius: 15px;
            box-sizing: border-box;
        }
        .no_wifi_play_img {
            position: absolute;
            width: 24px;
            height: 24px;
            top: 3px;
            left: 15px;
        }
        .no_wifi_go_on {
            position: absolute;
            width: 40px;
            height: 30px;
            line-height: 30px;
            text-align: center;
            right: 15px;
            top: 0px;
        }
        .padding_19 {
            padding-top: 19px;
        }
        .video_control {
            position: absolute;
            left: 0;
            bottom: 0;
            width: 100%;
            /*height: 40px;*/
            background: rgba(0, 0, 0, 0.55);
            z-index: 99;
            display: none;
        }
        .progress_bar {
            width: 0px;
            height: 2px;
            background: #FF6026;
        }
        .progress_outer {
            position: absolute;
            left: 0px;
            top: -9px;
            padding: 5px;
            width: 20px;
            height: 20px;
            border-radius: 20px;
            background: rgba(0, 0, 0, 0);
            box-sizing: border-box;
        }
        .progress_end {
            padding: 2px;
            width: 10px;
            height: 10px;
            border-radius: 10px;
            background: rgba(255, 96, 38, 0.35);
            box-sizing: border-box;
        }
        .progress_end_inner {
            width: 6px;
            height: 6px;
            border-radius: 6px;
            background: rgba(255, 96, 38, 1);
        }
        .top_video_time {
            float: left;
            height: 40px;
            line-height: 40px;
            padding-left: 16px;
            font-size: 12px;
            color: #FFF;
        }
        .video_fullscreen {
            float: right;
            width: 40px;
            height: 40px;
            background: url(../../image/home/htdx9@2x.png) no-repeat center;
            background-size: 20px;
        }
        .video_control_play_pause {
            position: absolute;
            width: 52px;
            height: 52px;
            left: 50%;
            margin-left: -26px;
            margin-top: 80px;
            background: url(../../image/edit_topic/pause.png) no-repeat center;
            background-size: 52px;
            z-index: 98;
            display: none;
        }
        .community_name {
            color: #2979FF;
        }
        pre {
            white-space: pre-wrap !important;
            word-wrap: break-word !important;
            *white-space: normal !important;
        }
        .topic_details pre {
            font-size: 16px;
            line-height: 1.5;
        }
        .comment_div {
            display: none;
        }
        .swiper-pagination-bullet {
            width: 6px;
            height: 6px;
            background: #EEEEEE;
            opacity: 1;
        }
        .swiper-pagination-bullet-active {
            color: #fff;
            width: 6px;
            height: 6px;
            background: #D8D8D8;
            border: 1px solid #979797;
        }
        .rich_title {
            margin-top: 8px;
            font-size: 18px;
            font-weight: bold;
        }
        .padding_t {
            padding-top: 10px;
            margin-left: 15px;
        }
        .no_recommend_space {
            width: 100%;
            height: 48px;
            display: none;
        }
        .video_play {
            position: absolute;
            width: 100%;
            height: 214px;
            left: 0;
            top: 0;
        }
        /*.video_inner {
			 display: none;
			 }*/
        .btmBar {
            height: 48px;
            background: #eee;
            font-size: 14px;
        }
        .btmBar .status {
            color: #FFF;
            font-size: 12px;
            text-align: center;
            padding: 0 15px 0 30px;
            line-height: 24px;
            height: 24px;
            min-width: 76px;
            background-repeat: no-repeat;
            background-position: right top;
            background-size: 100% 100%;
            background-image: url(../../image/collect/zjz@2x.png);
        }
        .btmBar .status.grey {
            background-image: url(../../image/collect/end.png);
        }
        .btmBar .status.purple {
            background-image: url(../../image/collect/weikaishi.png);
        }
        .color-999 {
            color: #999 !important;
        }
        .ml10 {
            margin-left: 10px !important;
        }
        .px-10 {
            padding-left: 10px !important;
            padding-right: 10px !important;
        }
        .fs12 {
            font-size: 12px !important;
        }
        .aui-ellipsis-1 {
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
        }
        .btmBar {
            height: 48px;
            background: #eee;
            font-size: 14px;
        }
        .btmBar .status {
            color: #FFF;
            font-size: 12px;
            text-align: center;
            padding: 0 15px 0 30px;
            line-height: 24px;
            height: 24px;
            min-width: 76px;
            background-repeat: no-repeat;
            background-position: right top;
            background-size: 100% 100%;
            background-image: url(../../image/collect/zjz@2x.png);
        }
        .btmBar .status.grey {
            background-image: url(../../image/collect/end.png);
        }
        .btmBar .status.purple {
            background-image: url(../../image/collect/weikaishi.png);
        }
        .praise_num {
            text-align: center;
        }
        .receive_reward_div {
            position: relative;
        }
        .reward_btn {
            width: auto;
            display: inline-block;
            padding: 0 6px;
            left: 50%;
            transform: translateX(-50%);
            -webkit-transform: translateX(-50%);
            position: absolute;
        }
        .reward_list {
            margin-top: 16px;
        }
        .reward_list_more {
            min-width: 110px;
        }
        .red_vip,.yellow_vip,.purple_vip {
            position: absolute;
            right: 12px;
            top: 32px;
            width: 12px;
            height: 12px;
        }
        .comment_head_div, .header_wrap, .user_head {
            position: relative;
        }
        .header_wrap .vip_icon, .header_wrap .svip_icon {
            right: -4px;
            top: 22px;
        }
        .user_head .red_vip,.user_head .yellow_vip,.user_head .purple_vip {
            right: 0px;
            top: 28px;
        }
        .reply_div_inner_title {
            /*height: 76px;*/
            position: relative;
        }
        .wrap {
            z-index: 99999;
            width: 100%;
            position: absolute;
            bottom: 0;
        }

        .video_header_bg {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 60px;
            background: url(../../image/video_header_bg.png) no-repeat center;
            background-size: 100%;
            z-index: 100;
        }
        .recruit {
            width: 100%;
            height: 48px;
            line-height: 48px;
            font-size: 14px;
            color: #fff;
            position: relative;
            background-repeat: no-repeat;
            background-position: center right;
            background-size: 77px 24px;
            position: relative;
            background-color: #ccc;
        }
        .recruit img {
            position: absolute;
            height: 20px;
            width: 20px;
            top: 12px;
            left: 16px;
        }
        .textWrap {
            display: inline-block;
            width: calc(100% - 15px);
            margin-left: 15px;
        }
        .recruit .imgs {
            display: none;
            margin-left: -6px;
        }
        .recruit .recruit_rank {
            color: #666;
            border-right: 1px #666 solid;
            height: 25px;
            vertical-align: middle;
            line-height: 26px;
            font-size: 12px;
            padding-right: 10px;
            float: left;
            margin: 12px 8px 0 0;
            display: none;
        }
        .recruit_ing {
            background-image: url("../../image/zjz@2x.png");
            display: none;
        }
        .recruit .status {
            float: right;
            margin-right: 14px;
            display: inline-block;
            line-height: 48px;
            font-size: 12px;
        }
        .recruit_title {
            left: 100px;
            color: #333;
            line-height: 50px;
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
            width: 238px;
        }
        .btn {
            display: none;
            position: fixed;
            top: 160px;
            border-radius: 4px;
            text-align: center;
            color: #FF6026;
            font-size: 17px;
            line-height: 50px;
            background-color: #fff;
            width: 80%;
            left: 50%;
            transform: translateX(-50%);
            -webkit-transform: translateX(-50%);
            z-index: 999;
            border: 1px solid #ddd;
        }
        .btn div {
            height: 48px;
        }
        .cancle {
            color: #999;
            border-top: 1px solid #ddd;
        }
        .recommend_div {
            padding-bottom: 0;
        }
        .comment_input {
            /* padding-top: 0px;
				 padding-bottom: 0px;*/
        }
        header {
            height: auto;
        }
        .input_div_inner {
            margin-right: 0.2rem;
        }
        .input_div_inner {
            background: #EEE;
            padding-left: 16px;
            padding-right: 16px;
            min-height: 32px;
            border-radius: 32px;
            height: auto;
            box-sizing: border-box;
            width:60%;
        }
        .video_img {
            background-color: #8FA8CC;
            background-repeat: no-repeat;
            background-size: cover;
            background-position: center;
        }
        .overfolw_hidden {
            overflow: hidden;
        }
        .overfolw_scroll {
            overflow: scroll;
        }
        .word_break {
            word-wrap: break-word;
            word-break: break-all;
        }
        .backToH5 {
            position: fixed;
            bottom: 100px;
            right: 16px;
            display: none;
            height: 48px;
            width: 48px;
            border-radius: 50%;
            z-index: 9;
        }
        .rich_txt_div {
            padding-top: 0;
            line-height: initial;
        }
        .reward_div {
            position: absolute;
        }
        .no-data {
            position: fixed;
            height: 100%;
            width: 100%;
            background-color: #fff;
            top: 0;
            z-index: 99;
        }
        .no-data .back_btn{
            position: absolute;
        }
        .no-data img {
            position: absolute;
            top: 30%;
            left: 50%;
            transform: translateX(-50%);
            -webkit-transform: translateX(-50%);
        }
        .no-data-text {
            position: absolute;
            top: calc(30% + 105px);
            text-align: center;
            width: 100%;
            font-size: 14px;
            color: #999999;
        }
        .img_index_div {
            border: 0 solid rgba(255,255,255,0.40);
            color: #fff;
            z-index: 2;
            text-align: center;
            background: rgba(0,0,0,0.60);
        }
        .ellipsis-6 {
            display: -webkit-box;
            overflow: hidden;
            text-overflow: ellipsis;
            word-wrap: break-word;
            word-break: break-all;
            /*white-space: normal !important;*/
            -webkit-line-clamp: 6;
            -webkit-box-orient: vertical;
            font-size: 14px;
        }
        .comment_input {
            overflow-y: scroll;
            height: 32px;
            box-sizing: border-box;
            max-height: 100px;
        }
        .comment_expand{
            text-align: left;
            font-size: 14px;
            color: blue;
            padding-bottom: 10px;
        }
        .comment_content{
            display: flex;
            display: -webkit-box;
            display: -webkit-flex;
            font-size: 14px;
        }
        .reply_div{
            z-index: 102;
        }
        .chat_close_div {
            z-index: 103;
        }
        .border_left{
            margin-left: 15px;
        }
        pre{
            -webkit-user-select: text;
            -moz-user-select: text;
            -ms-user-select: text;
            user-select: text;
        }

        .allow_selecte{
            -webkit-user-select: text;
            -moz-user-select: text;
            -ms-user-select: text;
            user-select: text;
        }
        #no_login_input{
            display: none;
        }
        .reply_content{
            -webkit-overflow-scrolling: touch
        }
        .swiper-container{
            margin-bottom: 0;
        }
        .video_title{
            padding-top: 6px;
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
            /*text-shadow: #000 0 1px 2px;*/
        }
        .video_txt_div .img_back_btn{
            background: url(../../image/edit_topic/back.png) no-repeat center;
            background-size: 30px;
        }
        .video_txt_div .img_more_btn{
            background: url(../../image/edit_topic/more_btn.png) no-repeat center;
            background-size: 30px;
        }
        .rich_txt pre{
            line-height: 1.5;
            font-size: 16px;
        }
        .normal_type_rich_title{
            font-size: 18px;
            font-weight: bold;
        }
        textarea{
            font-size: 14px;
        }
        .imgList{
            /*margin-top: 10px;*/
            display:flex;
            display: -webkit-box;
            display: -webkit-flex;
            flex-wrap: wrap;
            -webkit-flex-wrap: wrap;
            -webkit-justify-content: space-between;
            -webkit-flex-direction: row;
            -weblit-flex-wrap: wrap;
            justify-content: space-between;
            flex-direction: row;
            box-sizing: border-box;
            padding:0 18px;
        }
        .imgListelse{
            overflow: hidden;
            box-sizing: border-box;
            padding:0 18px;
        }
        /*只有一张图片*/
       .imgItem1{
           margin-top: 10px;
           width:100%;
           height:334px
        }
        /*两张图片*//*如果四张图片*/
        .imgItem2{
            margin-top: 10px;
            width: calc(100% / 2 - 5px);
            height:170px;
        }

        /*如果是三、六、九张图*/
        .imgItem3 {
            display: inline-block;
            float: left;
            width: calc(100% / 3 - 4px);
            height:108px;
            margin-right: 5px;
            margin-top: 5px;
        }
        .imgItem3:nth-child(3n+3){
            margin-right: 0;
        }
        .img_bg{
            background-color: #8FA8CC;
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
        }
        .following{
            color:#fff;
            background:#FF6600;
            width:70px;
            height:28px;
            line-height:28px;
            font-size:14px;
            text-align: center;
            border-radius: 100px;
            position:absolute;
            top:50%;
            transform: translateY(-50%);
            -webkit-transform: translateY(-50%);
            right:0;
        }
        .gotoFollow{
            border:1px solid #FF6600;
            color:#FF6600;
            background:#fff;
            width:70px;
            height:28px;
            line-height:28px;
            font-size:14px;
            text-align: center;
            border-radius: 100px;
            position:absolute;
            top:50%;
            transform: translateY(-50%);
            -webkit-transform: translateY(-50%);
            right:0;
        }
        .normal_type_user_info {
            width: 100%;
            height: 74px;
            padding-left: 22px;
            padding-right: 22px;
            padding-top: 22px;
            padding-bottom: 15px;
            box-sizing: border-box;
            margin:0;
        }
        .other_user_info{
            position:relative;
        }
        .user_info_top{
            width:50%;
        }
        .comment_sub_reply_div {
            background: #EDEDED;
            border-radius: 0.106667rem;
            padding: 0.293333rem;
            margin-bottom: 0.480000rem;
        }
        .comment_sub_reply_item {
            margin-bottom: 0.053333rem;
            font-size: 0.320000rem;
            color: #151515;
            line-height: 0.453333rem;
            word-wrap: break-word;
            word-break:break-all;
        }
        .comment_sub_reply_item_user {
            color: #999;
            word-wrap: break-word;
            word-break: break-all;
        }
        .comment_sub_reply_div_all_replay {
            height: 0.640000rem;
            line-height: 0.640000rem;
            font-size: 0.320000rem;
            color: #999999;
        }
        .reply_right_arrow {
            width: 0.640000rem;
            height: 0.640000rem;
            background: url(../../image/edit_topic/reply_right_arrow.png) no-repeat center;
            background-size: 0.640000rem;
            -webkit-transform: rotate(-90deg);
            transform: rotate(-90deg);
        }
        .input_div {
            width: 100%;
            height: auto;
            padding-left: 15px;
            padding-top: 6px;
            padding-bottom: 6px;
            background: #FFF;
            border-top: 1px solid #EEE;
            box-sizing: border-box;
            position: relative;
        }

        .send_div {
            /*position: relative;*/
            width: 35px;
            height: 30px;
            display: none;
            line-height: 30px;
            text-align: center;
            color: #666;
            border-radius: 4px;
        }
        /*.send_div {*/
            /*!*position: absolute;*!*/
            /*!*top: 50%;*!*/
            /*!*transform: translateY(-50%);*!*/
            /*width: 50px;*/
            /*height: 40px;*/
            /*line-height: 40px;*/
            /**/
           /**/
        /*}*/
        .send_div.active {
            color: #fff;
            background:#FF6026
        }
        .comment_div {
            margin-top: 8px;
            /*background: #EEE;*/
            display: none;
        }
        .praise_img_div {
            width:50px;
            padding-left:11px;
        }
        .collect_img {
            width:40px;

        }
        .small_money_img {
            width:45px;

        }
        .no_comment_img {
            margin-top: 90px;
            width: 24px;
            height: 24px;

        }
        .no_comment_txt {
            margin-top: 15px;
            font-size: 16px;

        }
        .no_comment_div {
            height: 374px;
        }
    </style>
</head>
<body id="body">
<!--header-->
<!--<header class="header">
			<div class="header_div meui_flex_wrap meui_border_b">
				<div class="back_btn" tapmode="meui_click" onclick="fnBack()"></div>
				<div class="header_middle meui_flex_con meui_flex_wrap">
					<div class="header_wrap">
						<img id="header_user_img" class="header_img" alt="" onclick="fnOpenUser()"/>
						<img class="svip_icon" src="../../image/mine/vip.png" alt=""/>
						<img class="vip_icon" src="../../image/mine/icon_vip.png" alt=""/>
					</div>
					<div id="header_user_name" class="user_name meui_flex_con_no_w meui_single_line"></div>
					<img id="header_user_follow" class="follow_img" src="../../image/rank/follow.png" alt=""
					onclick="fnFollow()"/>
					<img id="header_user_cancel_follow" class="follow_img" src="../../image/rank/cancel_follow.png" alt=""
					onclick="fnFollow()"/>
				</div>
				<div class="more_btn" onclick="fnShare()"></div>
			</div>
		</header>-->
<div class="topic_details">
    <!--富文本布局-->
    <div class="rich_txt_div">
        <!--<div class="btmBar flex-column flex-middle flex-between flex-none" :id="huati-text">
				</div>-->
        <div tapmode onclick="fnCircleDetail()" class="recruit recruit_ing">
            <img class="imgs" src="../../image/community/zypl7@2x.png" alt=""><span class="textWrap"><span
                class="recruit_rank"></span><span class="recruit_title"><span
                class="recruitTitle"></span>——征集作品</span><span class="status">征集中</span></span>
        </div>
        <div class="rich_title padding_t meui_2_line" v-text="topicDetails.storyName"></div>
        <!--发布人信息-->
        <div class="user_info meui_flex_wrap">
            <div class="user_head">
                <img class="user_head_img" :src="topicDetails.userImg" alt="" @click="fnOpenUser()"/>
                <img v-show="topicDetails.talentFlag == 1" class="red_vip" src="../../image/mine/red_vip.png" alt=""/>
                <img v-show="topicDetails.talentFlag == 2" class="yellow_vip" src="../../image/mine/yellow_vip.png" alt=""/>
                <img v-show="topicDetails.talentFlag == 3" class="purple_vip" src="../../image/mine/purple_vip.png" alt=""/>
            </div>
            <div class="other_user_info meui_flex_con">
                <div class="user_info_top  meui_flex_wrap">
                    <div class="user_info_name meui_flex_con_no_w meui_single_line"
                         v-text="topicDetails.userName"></div>
                    <img v-if="topicDetails.isFollow == 0" class="info_follow_img" src="../../image/rank/follow.png"
                         alt="" @click="fnFollow()"/>
                    <img v-else class="info_follow_img" src="../../image/rank/cancel_follow.png" alt=""
                         @click="fnFollow()"/>
                </div>
                <div class="user_info_bottom">
                    来自： <span class="community_name" v-text="topicDetails.topicName" @click="fnOpenCommunityDetail(topicDetails.topicId)"></span>, <span
                        class="create_time" v-text="topicDetails.releaseTime"></span>
                </div>
            </div>
        </div>
        <!--富文本详情-->
        <div class="rich_txt">
					<pre style="overflow-x: hidden;" class="word_break allow_selecte" v-html="topicDetails.storyContent">
					</pre>
        </div>
    </div>
    <!--简单图片布局-->
    <div class="imgs_txt_div">
        <!--<div class="img_back_btn" tapmode="meui_click" onclick="fnBack()"></div>-->
        <!--<div class="img_more_btn" tapmode onclick="fnShare()"></div>-->
        <!--图片轮播图-->
        <!--<div class="imgs_div" v-show="topicDetails.storyImgs !=''">-->
            <!--<div class="swiper-container">-->
                <!--<div class="swiper-wrapper">-->
                    <!--<div v-for="(item,index) in topicDetails.storyImgs" class="swiper-slide">-->
                        <!--<img class="swiper_img" :src="item" alt=""/>-->
                    <!--</div>-->
                <!--</div>-->
            <!--</div>-->
            <!--<div class="img_index_div">-->
                <!--<span class="img_index">1</span>-->
                <!--/ <span class="total"></span>-->
            <!--</div>-->
        <!--</div>-->
        <div tapmode onclick="fnCircleDetail()" id="recruitType1" class="recruit recruit_ing">
            <img class="imgs" src="../../image/community/zypl7@2x.png" alt=""><span class="textWrap"><span
                class="recruit_rank"></span><span class="recruit_title"><span
                class="recruitTitle"></span>——征集作品</span><span class="status">征集中</span></span>
        </div>
        <!--<div class="btmBar flex-column flex-middle flex-between flex-none" id="huati-img"></div>-->
        <div v-show="topicDetails.storyName==''?false:true" class="normal_type_rich_title padding_t border_left meui_2_line" style="margin-top: 0;"
             v-text="topicDetails.storyName"></div>
        <!--发布人信息-->
        <div class="normal_type_user_info meui_flex_wrap">
            <div class="user_head">
                <img class="user_head_img" :src="topicDetails.userImg" alt="" @click="fnOpenUser()"/>
                <img v-show="topicDetails.talentFlag == 1" class="red_vip" src="../../image/mine/red_vip.png" alt=""/>
                <img v-show="topicDetails.talentFlag == 2" class="yellow_vip" src="../../image/mine/yellow_vip.png" alt=""/>
                <img v-show="topicDetails.talentFlag == 3" class="purple_vip" src="../../image/mine/purple_vip.png" alt=""/>
            </div>
            <div class="other_user_info meui_flex_con">
                <div class="user_info_top meui_flex_wrap">
                    <div class="user_info_name meui_flex_con_no_w meui_single_line"
                         v-text="topicDetails.userName" @click="fnOpenUser()">
                    </div>
                    <!--<img v-if="topicDetails.isFollow == 0" class="info_follow_img" src="../../image/rank/follow.png"-->
                         <!--alt="" @click="fnFollow()"/>-->
                    <!--<img v-else class="info_follow_img" src="../../image/rank/cancel_follow.png" alt=""-->
                         <!--@click="fnFollow()"/>-->
                </div>
                <div class="user_info_bottom">
                    <span class="create_time" v-text="topicDetails.releaseTime"></span>&nbsp;
                    <span class="community_name" v-text="topicDetails.topicName"
                              @click="fnOpenCommunityDetail(topicDetails.topicId)"></span>
                </div>
                <span v-if="topicDetails.isFollow == 0" v-show="showFollow" class="gotoFollow"  @click="fnFollow()">关注</span>
                <span v-else v-show="showFollow" class="following" @click="fnFollow()">已关注</span>
            </div>
        </div>
        <!--话题详情内容-->
        <div class="noraml_type_story_content">
					<pre class="img_rich_txt_pre" v-html="topicDetails.storyContent">

					</pre>
        </div>
        <ul v-if="imgNum == 1 ||imgNum == 2 ||imgNum==4" class="imgList">
            <li v-for="(item,index) in topicDetails.storyImgs" @click.stop="fnPreviewPicture(index)" :class="imgListClassName" class="img_bg" :style="{'background-image':'url('+ fnAppendUrl(item) +')'}">
            </li>
        </ul>
        <ul class="imgListelse" v-else>
            <li v-for="(item,index) in topicDetails.storyImgs" @click.stop="fnPreviewPicture(index)" class="img_bg imgItem3" :style="{'background-image':'url('+ fnAppendUrl(item) +')'}">
            </li>
        </ul>
    </div>
    <!--视频类话题详情布局-->
    <div class="video_txt_div">
        <div class="video_header_bg">
            <div class="img_back_btn" tapmode="meui_click" onclick="fnBack()"></div>
            <div class="img_more_btn" tapmode onclick="fnShare()"></div>
        </div>
        <!--视频播放器-->
        <div class="video_play_div" id="video_play" tapmode onclick="fnClickVideo(this)">
            <!--<div class="video_play"></div>-->
            <!--封面-->
            <div class="video_inner">
                <!--<img class="video_corver_img" src="../../image/tmp.jpg" alt=""/>-->
                <div class="video_corver_img" ></div>
                <div class="video_play_btn" tapmode onclick="fnPlay(event);"></div>
            </div>
            <!--无wifi提示-->
            <div class="video_no_wifi">
                <div class="no_wifi_toast">
                    当前已处于2G/3G/4G网络自动播放已暂停
                </div>
                <div class="no_wifi_play" tapmode onclick="fnPlayNoWifi(event)">
                    <img class="no_wifi_play_img" src="../../image/edit_topic/play.png" alt=""/>
                    <span class="no_wifi_go_on">继续</span>
                </div>
            </div>
            <!--播放与暂停-->
            <div class="video_control_play_pause" tapmode onclick="fnClickPlayPause(event)"></div>
            <!--视频控制器-->
            <div class="video_control">
                <!--进度条-->
                <div class="progress_bar"></div>
                <!--进度位置-->
                <div class="progress_outer">
                    <div class="progress_end">
                        <div class="progress_end_inner"></div>
                    </div>
                </div>
                <!--视频时间-->
                <div class="top_video_time">
                    <span class="current_time"></span>/<span class="video_duration"></span>
                </div>
                <!--全屏控制-->
                <div class="video_fullscreen" tapmode onclick="fnFullscreen();"></div>
            </div>
        </div>
        <!--<div class="btmBar flex-column flex-middle flex-between flex-none" id="huati-video"></div>-->
        <div id="recruit" tapmode onclick="fnCircleDetail()" class="recruit recruit_ing"><img class="imgs"
                                                                                              src="../../image/community/zypl7@2x.png"
                                                                                              alt=""><span
                class="textWrap"><span class="recruit_rank"></span><span class="recruit_title"><span
                class="recruitTitle"></span>——征集作品</span><span class="status">征集中</span></span>
        </div>
        <div id="video_play_title" class="normal_type_rich_title padding_19 meui_2_line border_left"
             v-text="topicDetails.storyName"></div>
        <!--话题发布人信息-->
        <div class="normal_type_user_info meui_flex_wrap">
            <div class="user_head">
                <img class="user_head_img" :src="topicDetails.userImg" alt="" @click="fnOpenUser()"/>
                <img v-show="topicDetails.talentFlag == 1" class="red_vip" src="../../image/mine/red_vip.png" alt=""/>
                <img v-show="topicDetails.talentFlag == 2" class="yellow_vip" src="../../image/mine/yellow_vip.png" alt=""/>
                <img v-show="topicDetails.talentFlag == 3" class="purple_vip" src="../../image/mine/purple_vip.png" alt=""/>
            </div>
            <div class="other_user_info meui_flex_con">
                <div class="user_info_top meui_flex_wrap">
                    <div class="user_info_name meui_flex_con_no_w meui_single_line"
                         v-text="topicDetails.userName" @click="fnOpenUser()"></div>
                    <img v-if="topicDetails.isFollow == 0" class="info_follow_img" src="../../image/rank/follow.png"
                         alt="" @click="fnFollow()"/>
                    <img v-else class="info_follow_img" src="../../image/rank/cancel_follow.png" alt=""
                         @click="fnFollow()"/>
                </div>
                <div class="user_info_bottom">
                    来自： <span class="community_name" v-text="topicDetails.topicName"
                              @click="fnOpenCommunityDetail(topicDetails.topicId)"></span>, <span
                        class="create_time" v-text="topicDetails.releaseTime"></span>
                </div>
            </div>
        </div>
        <!--话题详情内容-->
        <div class="noraml_type_story_content">
					<pre class="video_rich_txt_pre" v-html="topicDetails.storyContent">

					</pre>
        </div>
    </div>
    <!--关联商品列表-->
    <div v-if="topicDetails.productId" v-cloak class="relation_goods_div">
        <div v-for="item in productList" class="goods_item meui_flex_wrap">
            <div class="goods_img_div">
                <img class="goods_img" :src="item.image" alt=""/>
            </div>
            <div class="goods_info meui_flex_con_no_w">
                <div class="goods_name meui_single_line" v-text="item.title"></div>
                <div class="goods_desc  meui_single_line" v-text="item.name"></div>
                <div class="goods_bottom meui_flex_wrap">
                    <div class="goods_price meui_flex_con">
                        ￥{{item.price}}
                    </div>
                    <div class="buy_btn" @click="fnOpenGoodsDetials(item)">
                        去购买
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--打赏布局-->
    <div v-if="topicDetails.tipAmount > 0" v-cloak class="receive_reward_div" >
        <img tapmode onclick="fnReward()" class="receive_reward_img" src="../../image/mine/shang@3x.png" alt=""/>
        <div class="reward_btn">
					<span class="reward_num" v-if="topicDetails.tipAmount < 1000000"
                          v-text="topicDetails.tipAmount"></span><span v-else class="reward_num">999999+</span>金币
        </div>
        <div class="reward_list">
            <div class="reward_list_inner">
                <img class="reward_user_img reward_user_img_3" src="../../image/home/tmp_default_header.png" alt=""/>
                <img class="reward_user_img reward_user_img_2" src="../../image/home/tmp_default_header.png" alt=""/>
                <img class="reward_user_img reward_user_img_1" src="../../image/home/tmp_default_header.png" alt=""/>
                <span v-if="topicDetails.tipNumber < 1000"
                      class="reward_list_num">{{topicDetails.tipNumber}}次打赏...</span>
                <span v-else class="reward_list_num reward_list_more">999+次打赏...</span>
            </div>
        </div>
    </div>
</div>
<!--无评论布局-->
<div class="no_comment_div" style="display: none">
    <div class="no_comment_title meui_border_b">
        暂无评论
    </div>
    <div class="no_comment_img"></div>
    <div class="no_comment_txt">
        暂无评论，快来抢沙发吧！
    </div>
    <!--<div class="no_comment_btn" id="no_comment_btn" tapmode onclick="fnGoComment()">-->
        <!--去评论-->
    <!--</div>-->
</div>
<!--评论部分-->
<div class="comment_div" v-cloak id="topic-wrap">
    <div class="comment_title meui_border_b">
        评论（<span class="comment_num"></span>）
    </div>
    <!--评论列表-->
    <div class="comment_list">
        <div v-for="(item,index) in commentsList" @click="fnOpenAllReply(item)" class="comment_item meui_flex_wrap meui_border_b">
            <div class="comment_head_div" >
                <img class="comment_head_img" :src="item.userImg" alt="" tapmode @click.stop="fnOpenUser(item)"/>
                <img v-show="item.talentFlag == 1" class="red_vip" src="../../image/mine/red_vip.png" alt=""/>
                <img v-show="item.talentFlag == 2" class="yellow_vip" src="../../image/mine/yellow_vip.png" alt=""/>
                <img v-show="item.talentFlag == 3" class="purple_vip" src="../../image/mine/purple_vip.png" alt=""/>
            </div>
            <div class="comment_right_div meui_flex_con_no_w">
                <div v-if="type == 4" class="comment_top meui_flex_wrap">
                    <div class="comment_user_name meui_flex_con"><span v-text="item.userName" tapmode @click.stop="fnOpenUser(item)"></span></div>
                    <div class="comment_praise_div" tapmode @click.stop="fnPraiseComment(item, index)">
                        <img v-if="item.commentPraiseNumberFlag == 0" class="comment_praise_img"
                             src="../../image/mine/zan.png" alt=""/>
                        <img v-else class="comment_praise_img" src="../../image/mine/zans.png" alt=""/>
                    </div>
                    <div class="comment_praise_num">
                        {{item.commentPraiseNumber}}
                    </div>
                </div>
                <div v-else class="comment_top meui_flex_wrap">
                    <div class="comment_user_name meui_flex_con"><span v-text="item.userName" tapmode @click.stop="fnOpenUser(item)"></span></div>
                    <div class="comment_praise_div" tapmode @click.stop="fnPraiseComment(item, index)">
                        <img v-if="item.commentPraiseFlag == 0" class="comment_praise_img"
                             src="../../image/mine/zan.png" alt=""/>
                        <img v-else class="comment_praise_img" src="../../image/mine/zans.png" alt=""/>
                    </div>
                    <div class="comment_praise_num">
                        {{item.praiseNumber}}
                    </div>
                </div>
                <div class="comment_content " v-show="item.comment">
                    <span class=""><pre class="ellipsis-6" ref="comment" v-html="item.comment"></pre> </span>
                </div>
                <div class="comment_expand" v-show="isShowExpand[index]" @click.stop="fnExpand($event)">展开</div>
                <div v-if="item.commentImgs" class="comment_imgs">
                    <span v-for="(imgUrl,index) in item.commentImgs" class="comment_imgs_item" alt="" :style="{'background-image':'url('+ imgUrl +')'}"
                         tapmode @click.stop="fnPreviewCommentImgs(item.commentImgs,index)"></span>
                </div>
                <div class="comment_bottom meui_flex_wrap">
                    <div class="comment_time" v-text="item.commentTimeStr"></div>
                    <div class="comment_floor">
                        <span v-text="item.floor"></span>楼
                    </div>
                    <div v-if="type != 4" class="comment_reply" tapmode @click.stop="fnOpenAllReply(item)">
                        <span class="reply_num" v-text="item.replyNumber">0</span>回复
                    </div>
                    <div class="meui_flex_con"></div>
                    <div class="reply_more" :id="'main_comment_'+item.id" tapmode="meui_click"
                         @click.stop="fnOpenReplyMoreOperation('main_comment_'+item.id,item)"></div>
                </div>
                <!--评论的回复-->
                <div v-if="type != 4 &&　item.replyNumber > 0" class="comment_sub_reply_div">
                    <div v-for="item in item.replyCommentList" class="comment_sub_reply_item">
                                <span  v-if="item.comment && item.comment.indexOf('comment_expression:') != -1" >
								    <span class="comment_sub_reply_item_user" v-text="fnLongUserName(item)"></span><span class="gray-color">:</span>
								    <img class="comment_expression_img" :src="item.comment.substring(19)" alt="" />
                                </span>
                        <pre v-else><span class="comment_sub_reply_item_user" v-text="fnLongUserName(item)"></span><span class="gray-color">:</span><span v-html="item.comment"></span></pre>
                        <!--<pre style="display: inline-block" v-else v-html="item.comment">-->
                        <!--</pre>-->
                        <div v-if="item.commentImgs" class="comment_imgs">
                            <span v-for="(imgUrl,index) in item.commentImgs.split(',')" class="comment_imgs_item" :style="{'background-image':'url('+ imgUrl +')'}" alt="" @click.stop="fnPreviewCommentImgs(item.commentImgs.split(','),index)"></span>
                        </div>
                    </div>
                    <div v-if="item.replyNumber > 2" class="meui_flex_wrap" tapmode @click.stop="fnOpenAllReply(item)">
                        <div class="comment_sub_reply_div_all_replay">
                            查看全部 {{item.replyNumber}} 回复
                        </div><div class="reply_right_arrow"></div>
                    </div>
                </div>
            </div>
        </div>
        <div v-if="commentIsNoMore" class="reply_list_no_more">
            已经到底了
        </div>
    </div>
    <!--<div class="comment_more"  tapmode onclick="fnOpenAllComment()">-->
        <!--<div class="comment_more_inner">-->
            <!--<div class="meui_flex_wrap">-->
                <!--<div>-->
                    <!--查看全部评论-->
                <!--</div>-->
                <!--<img class="right_arrow" src="../../image/home/right_arrow.png">-->
            <!--</div>-->
        <!--</div>-->
    <!--</div>-->
</div>
<div class="no_recommend_space"></div>
<!--相关推荐-->
<!--<div class="recommend_div">-->
    <!--<div class="recommend_title meui_border_b">-->
        <!--相关推荐-->
    <!--</div>-->
    <!--<section class="list_wrap" v-cloak>-->
        <!--&lt;!&ndash;话题列表&ndash;&gt;-->
        <!--<div v-for="(item,index) in relativeTopicList" @click="openDetails(item.dataTypeNew,item.id)" class="item">-->
            <!--<div class="list">-->
                <!--&lt;!&ndash;一图&ndash;&gt;-->
                <!--<div v-if="fnImgCount(item) == 1 && item.dataTypeNew != 3" class="flex_container">-->
                    <!--<div>-->
                        <!--<div class="title line2">-->
                            <!--<span v-if="item.isChoice != 0" class="fine-label"></span>-->
                            <!--{{item.title}}-->
                        <!--</div>-->
                        <!--<div class="describe line2" v-text="item.summary"></div>-->
                    <!--</div>-->
                    <!--<div class="one_img">-->
                        <!--<img :id="'id_'+item.id" @load="fnLoadImage('id_'+item.id);"-->
                             <!--:data-url="item.storyImgs[0]" src="../../image/tmp.jpg"/>-->
                    <!--</div>-->
                <!--</div>-->
                <!--&lt;!&ndash;2图&ndash;&gt;-->
                <!--<div v-if="fnImgCount(item) == 2 && item.dataTypeNew != 3" class="flex_container imgs_title_wrap">-->
                    <!--<div class="title2 noBreak">-->
                        <!--<span v-if="item.isChoice != 0" class="fine-label"></span>-->
                        <!--{{item.title}}-->
                    <!--</div>-->
                    <!--<div class="describe2 noBreak" v-text="item.summary"></div>-->
                    <!--<div class="two_img flex_container">-->
                        <!--<div>-->
                            <!--<img :id="'id_'+item.id" class="img_first" @load="fnLoadImage('id_'+item.id);"-->
                                 <!--:data-url="item.storyImgs[0]" src="../../image/tmp.jpg"/>-->
                        <!--</div>-->
                        <!--<div>-->
                            <!--<img class="img_second" :id="'id_second_'+item.id"-->
                                 <!--@load="fnLoadImage('id_second_'+item.id);" :data-url="item.storyImgs[1]"-->
                                 <!--src="../../image/tmp.jpg"/>-->
                        <!--</div>-->
                    <!--</div>-->
                <!--</div>-->
                <!--&lt;!&ndash;大于3图&ndash;&gt;-->
                <!--<div v-if="fnImgCount(item) >= 3 && item.dataTypeNew != 3" class="flex_container imgs_title_wrap">-->
                    <!--<div class="title2 noBreak">-->
                        <!--<span v-if="item.isChoice != 0" class="fine-label"></span>-->
                        <!--{{item.title}}-->
                    <!--</div>-->
                    <!--<div class="describe2 noBreak" v-text="item.summary"></div>-->
                    <!--<div class="three_img flex_container">-->
                        <!--<img class="three_img_first" :id="'id_'+item.id" @load="fnLoadImage('id_'+item.id);"-->
                             <!--:data-url="item.storyImgs[0]" src="../../image/tmp.jpg"/>-->
                        <!--<div class="right_twoImgs">-->
                            <!--<img class="img_second" :id="'id_second_'+item.id"-->
                                 <!--@load="fnLoadImage('id_second_'+item.id);" :data-url="item.storyImgs[1]"-->
                                 <!--src="../../image/tmp.jpg"/>-->
                            <!--<img class="img_third" :id="'id_third_'+item.id"-->
                                 <!--@load="fnLoadImage('id_third_'+item.id);" :data-url="item.storyImgs[2]"-->
                                 <!--src="../../image/tmp.jpg"/>-->
                        <!--</div>-->
                    <!--</div>-->
                <!--</div>-->
                <!--&lt;!&ndash;无图无封面&ndash;&gt;-->
                <!--<div v-if="fnImgCount(item) == 0 && item.dataTypeNew != 3 && !item.mainImg"-->
                     <!--class="flex_container imgs_title_wrap">-->
                    <!--<div class="title2 noBreak">-->
                        <!--<span v-if="item.isChoice != 0" class="fine-label"></span>-->
                        <!--{{item.title}}-->
                    <!--</div>-->
                    <!--<div class="describe2 line2" v-text="item.summary"></div>-->
                <!--</div>-->
                <!--&lt;!&ndash;无图有封面&ndash;&gt;-->
                <!--<div v-if="fnImgCount(item) == 0 && item.dataTypeNew != 3 && item.mainImg" class="flex_container">-->
                    <!--<div>-->
                        <!--<div class="title line2">-->
                            <!--<span v-if="item.isChoice != 0" class="fine-label"></span>-->
                            <!--{{item.title}}-->
                        <!--</div>-->
                        <!--<div class="describe line2" v-text="item.summary"></div>-->
                    <!--</div>-->
                    <!--<div class="one_img">-->
                        <!--<img :id="'id_'+item.id" @load="fnLoadImage('id_'+item.id);" :data-url="item.mainImg"-->
                             <!--src="../../image/tmp.jpg"/>-->
                    <!--</div>-->
                <!--</div>-->
                <!--&lt;!&ndash;视频&ndash;&gt;-->
                <!--<div v-if="item.dataTypeNew == 3" class="video_title">-->
                    <!--<span v-if="item.isChoice != 0" class="fine-label"></span>-->
                    <!--{{item.title}}-->
                <!--</div>-->
                <!--<div v-if="item.dataTypeNew == 3" class="video_div">-->
                    <!--<div class="video_img" :id="'id_'+item.id" :style="{'background-image':'url('+item.storyMediaList[0].url+'?x-oss-process=video/snapshot,t_3000,f_jpg )'}" :data-url="item.mainImg"/>-->
                    <!--&lt;!&ndash;<img class="video_img" :id="'id_'+item.id" @load="fnLoadImage('id_'+item.id);"-->
							<!--:data-url="item.mainImg" src="../../image/tmp.jpg"/>&ndash;&gt;-->
                    <!--<img class="play_btn" src="../../image/edit_topic/play.png" alt=""/>-->
                    <!--<div class="video_time" v-text="item.duration"></div>-->
                <!--</div>-->
            <!--</div>-->
            <!--&lt;!&ndash;话题列表item底部栏&ndash;&gt;-->
            <!--<div class="flex_container bottom_bar">-->
                <!--<div class="flex_container left_bar" tapmode="meui_click" @click.stop="fnOpenUser(item)">-->
                    <!--<img class="writer_headIcon" :src="item.userHead"/>-->
                    <!--<div class="writer_name" v-text="item.userName"></div>-->
                <!--</div>-->
                <!--<div class="right_bar flex_container">-->
                    <!--<div class="bottom_icon icon1"></div>-->
                    <!--<div class="bottom_num" v-text="item.browserNumber"></div>-->
                    <!--<div class="bottom_icon icon2"></div>-->
                    <!--<div class="bottom_num" v-text="item.commentNumber"></div>-->
                    <!--<div v-if="item.userPraiseFlag == 0" class="bottom_icon icon3" tapmode="meui_click"-->
                         <!--@click.stop="fnPraise(item,index)"></div>-->
                    <!--<div v-else class="bottom_icon icon4" tapmode="meui_click"-->
                         <!--@click.stop="fnPraise(item,index)"></div>-->
                    <!--<div class="bottom_num" v-text="item.praiseNumber"></div>-->
                <!--</div>-->
            <!--</div>-->
        <!--</div>-->
    <!--</section>-->
<!--</div>-->
<div class="tips-no-more" style="width: 100%; text-align: center ;padding: 10px;font-size: 14px;display: none;" >没有更多~</div>
<div class="blank" style="height: 2.2rem; background: rgba(0,0,0,0);"></div>
<div class="chat_close_div"></div>
<!--发布评论布局-->
<div class="chat_div">
    <!--评论上传图片布局-->
    <div v-if="list.length > 1" class="upload_img_div" v-cloak>
        <div class="slide-box" id="slide_box">
            <div v-for="(item,index) in list" class="slide-item">
                <div v-if="item.thumbPath" class="c_add_img hidden"></div>
                <div v-else class="c_add_img" tapmode="meui_click" onclick="fnOpenSelectPicture()"></div>
                <div v-if="item.thumbPath" class="c_upload_img_layout" tapmode="meui_click"
                     @click="fnPreviewCommentImgs(index)">
                    <img class="c_upload_img" :src="item.thumbPath" alt=""/>
                </div>
                <div class="c_upload_progress_layout hidden">
                    <div class="c_upload_progress">
                        <div class="c_upload_label">
                            上传中
                        </div>
                        <div class="c_upload_label">
                            85%
                        </div>
                    </div>
                </div>
                <div v-if="item.thumbPath" class="c_delete" id="delete" tapmode="meui_click"
                     @click="fnDelete(index)"></div>
            </div>
        </div>
    </div>
    <!--评论输入框布局-->
    <div class="input_div meui_flex_wrap">
        <div class="input_div_inner meui_flex_wrap">
            <div class="edit_img"></div>
            <!--<div class="comment_input meui_flex_con" contenteditable="true" onblur="fnOnInputBlur()"-->
            <!--onfocus="fnOnInputFocus(this)" onkeyup="fnOnkeyup(this)">-->
            <!--来说点什么吧…-->
            <!--</div>-->
            <textarea id="login_input" class="comment_input meui_flex_con" rows="1" onpaste="onPaste(this)" onblur="fnOnInputBlur(this)"
                       onfocus="fnOnInputFocus(this)" onkeyup="fnOnkeyup(this)" onPropertyChange="fnChangeActive()" placeholder="来说点什么吧…"
            ></textarea>
            <div id="no_login_input" class="comment_input meui_flex_con" onclick="fnOpenLogin();">来说点什么吧…</div>
        </div>
        <div class="input_operations meui_flex_wrap">
            <div class="praise_img_div">
                <img class="praise_img" src="../../image/mine/zan.png" alt="" tapmode onclick="fnInputPraise()"/>
                <div class="praise_num"></div>
            </div>
            <div class="collect_img" tapmode="meui_click" onclick="fnCollectTopic()"></div>
            <div class="small_money_img" tapmode="meui_click" onclick="fnOpenMoneyFrame()"></div>
        </div>
        <div class="send_div" tapmode onclick="fnClickSendBtn()">
            <!--<div class="send_div">-->
                发布
            <!--</div>-->
        </div>
    </div>
    <footer></footer>
    <!--输入框下方布局-->
    <div class="comment_other_operation meui_flex_wrap">
        <div class="select_img" tapmode="meui_click" onclick="fnOpenSelectPicture()"></div>
        <div class="select_expression" tapmode="meui_click" onclick="fnSwitchExpression()"></div>
        <div class="meui_flex_con"></div>
        <div class="hide_keyboard" tapmode="meui_click" onclick="fnSwitchExpression()"></div>
    </div>
    <!--选择表情布局-->
    <div class="expression_div">
        <div class="expression_swiper">
            <div class="swiper-wrapper expression_wrapper">
                <div class="swiper-slide">
                    <img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier1.gif"
                         alt="" tapmode onclick="fnExprComment(this)"/>
                    <img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier2.gif"
                         alt="" tapmode onclick="fnExprComment(this)"/>
                    <img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier3.gif"
                         alt="" tapmode onclick="fnExprComment(this)"/>
                    <img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier4.gif"
                         alt="" tapmode onclick="fnExprComment(this)"/>
                    <img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier5.gif"
                         alt="" tapmode onclick="fnExprComment(this)"/>
                    <img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier6.gif"
                         alt="" tapmode onclick="fnExprComment(this)"/>
                    <img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier7.gif"
                         alt="" tapmode onclick="fnExprComment(this)"/>
                    <img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier8.gif"
                         alt="" tapmode onclick="fnExprComment(this)"/>
                </div>
                <div class="swiper-slide">
                    <img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier9.gif"
                         alt="" tapmode onclick="fnExprComment(this)"/>
                    <img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier10.gif"
                         alt="" tapmode onclick="fnExprComment(this)"/>
                    <img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier11.gif"
                         alt="" tapmode onclick="fnExprComment(this)"/>
                    <img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier12.gif"
                         alt="" tapmode onclick="fnExprComment(this)"/>
                    <img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier13.gif"
                         alt="" tapmode onclick="fnExprComment(this)"/>
                    <img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier14.gif"
                         alt="" tapmode onclick="fnExprComment(this)"/>
                    <img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier15.gif"
                         alt="" tapmode onclick="fnExprComment(this)"/>
                    <img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier16.gif"
                         alt="" tapmode onclick="fnExprComment(this)"/>
                </div>
                <div class="swiper-slide">
                    <img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier17.gif"
                         alt="" tapmode onclick="fnExprComment(this)"/>
                </div>
            </div>
            <div class="swiper-pagination"></div>
        </div>
        <!--切换表情组-->
        <div class="expression_bottom">
            <img id="expression_page_1" class="expression_bottom_img active" onclick="fnSelectExpr(1)"
                 src="http://cdn09.ehaier.com/shunguang/expression/haier/haier1.gif" alt=""/>
            <img id="expression_page_2" class="expression_bottom_img" onclick="fnSelectExpr(2)"
                 src="http://cdn09.ehaier.com/shunguang/expression/SGjun/sg2.gif" alt=""/>
        </div>
    </div>
</div>
<div class="reply_more_operation_div">
    <div class="reply_more_operation">
        <div class="triangle-bottomright"></div>
        <div class="triangle-topright"></div>
        <div id="replayReward" class="reply_more_operation_item meui_border_b meui_flex_wrap" tapmode
             onclick="fnOpenMoneyFrame(event)">
            <img class="reply_more_operation_img" src="../../image/mine/small_money.png" alt=""/>
            <div class="reply_more_operation_txt">
                打 赏
            </div>
        </div>
        <div class="reply_more_operation_item meui_border_b meui_flex_wrap" tapmode onclick="fnDeleteComment()">
            <img class="reply_more_operation_img" src="../../image/mine/delete_icon.png" alt=""/>
            <div class="reply_more_operation_txt">
                删 除
            </div>
        </div>
        <div id="replyHide" class="reply_more_operation_item meui_flex_wrap" tapmode onclick="fnHideComment()">
            <img id="hideCommentImg" class="reply_more_operation_img" src="../../image/mine/eye_iocn.png" alt=""/>
            <div id="hideCommentTxt" class="reply_more_operation_txt">
                隐 藏
            </div>
        </div>
    </div>
</div>
<!--全部回复-->
<div class="reply_div" v-cloak>
    <div class="reply_div_inner meui_flex_wrap meui_flex_vertical">
        <div class="reply_div_inner_title meui_border_b">
            <div class="wrap">
                回复(<span class="top_reply_num">0</span>) <div class="reward_close" tapmode="meui_click" onclick="fnCloseAllReply()"></div>
            </div>
        </div>
        <div class="reply_content meui_flex_con">
            <div class="reply_comment meui_border_b">
                <div class="comment_item meui_flex_wrap meui_border_b">
                    <div class="comment_head_div">
                        <img class="comment_head_img" :src="comment.userImg" alt="" tapmode @click="fnOpenUser(comment)"/>
                        <img v-show="comment.talentFlag == 1"  class="red_vip" src="../../image/mine/red_vip.png" alt="" />
                        <img v-show="comment.talentFlag == 2"  class="yellow_vip" src="../../image/mine/yellow_vip.png" alt="" />
                        <img v-show="comment.talentFlag == 3"  class="purple_vip" src="../../image/mine/purple_vip.png" alt="" />
                    </div>
                    <div class="comment_right_div meui_flex_con_no_w">
                        <div class="comment_top meui_flex_wrap">
                            <div class="comment_user_name meui_flex_con"><span v-text="comment.userName" tapmode @click="fnOpenUser(comment)"></span></div>
                            <div class="comment_praise_div" @click="fnPraiseComment(comment)">
                                <img v-if="comment.commentPraiseFlag == 0" class="comment_praise_img"
                                     src="../../image/mine/zan.png" alt=""/>
                                <img v-else class="comment_praise_img" src="../../image/mine/zans.png" alt=""/>
                            </div>
                            <div class="comment_praise_num" v-text="comment.praiseNumber"></div>
                        </div>
                        <div class="comment_content">
                            <img v-if="fnIsExpression()" class="comment_expression_img" :src="fnExpressionPath()" alt=""/>
                            <pre v-else v-html="comment.comment"></pre>
                        </div>
                        <div v-if="comment.commentImgs" class="comment_imgs">
                            <span v-for="(item,index) in comment.commentImgs" class="comment_imgs_item" :style="{'background-image':'url('+ item +')'}"
                                 alt="" tapmode @click="fnPreviewCommentImgs(comment.commentImgs,index)"></span>

                        </div>
                        </img>
                        <div class="comment_bottom meui_flex_wrap">
                            <div class="comment_time meui_flex_con" v-text="comment.commentTimeStr"></div>
                            <div v-if="fnIsShowMore(comment)" :id="'comment_'+comment.id" class="reply_more"
                                 tapmode="meui_click"
                                 @click="fnOpenReplyMoreOperation('comment_'+comment.id,comment,true)"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="all_reply">
                <div class="all_reply_title">
                    评论回复
                </div>
                <div class="reply_list">
                    <div v-for="(item,index) in replysList" class="comment_item meui_flex_wrap meui_border_b">
                        <div class="comment_head_div">
                            <img class="comment_head_img" :src="item.userImg" alt="" tapmode @click="fnOpenUser(item)"/>
                            <img v-show="item.talentFlag == 1" class="red_vip" src="../../image/mine/red_vip.png" alt="" />
                            <img v-show="item.talentFlag == 2" class="yellow_vip" src="../../image/mine/yellow_vip.png" alt="" />
                            <img v-show="item.talentFlag == 3" class="purple_vip" src="../../image/mine/purple_vip.png" alt="" />
                        </div>
                        <div class="comment_right_div meui_flex_con_no_w">
                            <div class="comment_top meui_flex_wrap">
                                <div class="comment_user_name meui_flex_con"><span v-text="item.userName" tapmode @click="fnOpenUser(item)"></span></div>

                            </div>
                            <div class="comment_content">
                                <pre v-html="item.comment" class="ellipsis-6" ref="reply"></pre>
                            </div>
                            <div class="comment_expand" v-show="isShowExpand[index]" @click="fnExpand($event)">展开</div>
                            <div v-if="item.commentImgs" class="comment_imgs">
                                <span v-for="(imgUrl,index) in item.commentImgs" class="comment_imgs_item"
                                     :style="{'background-image':'url('+ imgUrl +')'}" alt="" tapmode @click="fnPreviewCommentImgs(item.commentImgs,index)"></span>
                            </div>
                            <div class="comment_bottom meui_flex_wrap">
                                <div class="comment_time meui_flex_con" v-text="item.commentTimeStr"></div>
                                <div v-if="fnIsShowMore(item)" class="reply_more" :id="'reply_'+item.id"
                                     tapmode="meui_click"
                                     @click="fnOpenReplyMoreOperation('reply_'+item.id,item)"></div>
                            </div>
                        </div>
                    </div>
                    <div v-if="isNoMore" class="reply_list_no_more">
                        已经到底了
                    </div>
                    <div class="blank" style="height: 2rem; background: rgba(0,0,0,0);"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--打赏列表对话框-->
<div class="reward_div">
    <div class="reward_dialog">
        <div class="reward_header meui_border_b">
            选择打赏金币数 <div class="reward_close" tapmode="meui_click" onclick="fnCloseRewardDialog(event)"></div>
        </div>
        <div class="reaward_select_list meui_border_b">
            <div v-for="(item,index) in list" class="reward_item" :class="{ active: item.isActive }"
                 @click="fnSelect(item,index)">
                {{item.num}}个
            </div>
        </div>
        <div class="reward_custom_num meui_flex_wrap meui_border_b">
            <div class="reward_other_num_label">
                其他数量
            </div>
            <div class="reward_v_line"></div>
            <input class="reward_custom_num_input" type='text' oninput="fnOnRewardInputChange(this)"/>
        </div>
        <div class="reward_confirm" tapmode="meui_click" onclick="fnConfirmReward()">
            确定打赏
        </div>
    </div>
</div>
<div class="share_dialog">
</div>
<!--<div class="share_div">
			<div class="share_dialog">
				<div class="share_title meui_flex_wrap">
					<div class="share_title_line meui_flex_con"></div>
					<div class="share_title_label">
						分享
					</div>
					<div class="share_title_line meui_flex_con"></div>
				</div>
				<div class="share_operation_list">
					<div class="share_operation_item" tapmode="meui_click" onclick="fnShareNative(1)">
						<div class="share_operation_item_icon share_wx_timeline"></div>
						<div class="share_operation_item_txt">
							朋友圈
						</div>
					</div>
					<div class="share_operation_item" tapmode="meui_click" onclick="fnShareNative(0)">
						<div class="share_operation_item_icon share_wx_friends"></div>
						<div class="share_operation_item_txt">
							微信
						</div>
					</div>
					<div class="share_operation_item" tapmode="meui_click" onclick="fnShareNative(3)">
						<div class="share_operation_item_icon share_qq"></div>
						<div class="share_operation_item_txt">
							QQ
						</div>
					</div>
					<div class="share_operation_item" tapmode="meui_click" onclick="fnShareNative(4)">
						<div class="share_operation_item_icon share_qq_timeline"></div>
						<div class="share_operation_item_txt">
							QQ空间
						</div>
					</div>
					<div class="share_operation_item" tapmode="meui_click" onclick="fnShareNative(2)">
						<div class="share_operation_item_icon share_wb"></div>
						<div class="share_operation_item_txt">
							微博
						</div>
					</div>
					<div class="share_operation_item" onclick="fnCopy()">
						<div class="share_operation_item_icon share_opercopy"></div>
						<div class="share_operation_item_txt">
							复制
						</div>
					</div>
					<footer></footer>
				</div>
				<div class="share_operation_div" v-if="fnIsShowOperation()">
					<div class="share_title no_margin_top meui_flex_wrap">
						<div class="share_title_line meui_flex_con"></div>
						<div class="share_title_label">
							操作
						</div>
						<div class="share_title_line meui_flex_con"></div>
					</div>
					<div class="share_operation_bottom_list">
						<div class="share_operation_item" v-if="fnIsManager()" onclick="fnIsHide()">
							<div class="share_operation_item_icon operation_hide" :class="{ active : fnIsHide() }"></div>
							<div class="share_operation_item_txt">
								<span v-if="fnIsHide() == 1">取消隐藏</span>
								<span v-else>隐藏</span>
							</div>
						</div>
						<div class="share_operation_item" v-if="fnIsManager()" onclick="fnTop()">
							<div class="share_operation_item_icon operation_top" :class="{ active : fnIsTop() }"></div>
							<div class="share_operation_item_txt">
								<span v-if="fnIsTop() == 1">取消置顶</span>
								<span v-else>置顶</span>
							</div>
						</div>
						<div class="share_operation_item" v-if="fnIsManager()" onclick="fnChoice()">
							<div class="share_operation_item_icon operation_choice"
							:class="{ active : fnIsChoice() }"></div>
							<div class="share_operation_item_txt">
								<span v-if="fnIsChoice() == 1">取消精华</span>
								<span v-else>精华</span>
							</div>
						</div>
						<div class="share_operation_item" tapmode="meui_click" onclick="fnIsDelete()">
							<div class="share_operation_item_icon operation_delete"></div>
							<div class="share_operation_item_txt">
								删除
							</div>
						</div>
						<div class="share_operation_item" v-if="fnMine()" tapmode="meui_click" onclick="fnEdit()">
							<div class="share_operation_item_icon operation_edit"></div>
							<div class="share_operation_item_txt">
								编辑
							</div>
						</div>
					</div>
				</div>
				<div class="share_title_line no_margin_top"></div>
				<div class="share_cancel" tapmode="meui_click" onclick="fnCloseShare()">
					取消
				</div>
				<footer></footer>
			</div>
		</div>-->
<div class="select_time_div">
    <div class="select_time_dialog">
        <div class="selet_time_title meui_border_b">
            <span class="select_time_tile_txt">选择置顶位置</span>
            <div class="reward_close" tapmode="meui_click" onclick="fnCloseSelectTimeDialog()"></div>
        </div>
        <div class="select_top_type">
            <div class="top_type_normal meui_flex_wrap">
                <div class="top_type" id="circleTop" tapmode="meui_click" onclick="fnSelectTopType(1)">
                    圈子置顶
                </div>
                <div class="meui_flex_con"></div>
                <div class="top_type" id="homeTop" tapmode="meui_click" onclick="fnSelectTopType(2)">
                    首页置顶
                </div>
            </div>
            <div class="top_type_special meui_flex_wrap">
                <div class="meui_flex_con"></div>
                <div class="top_type active">
                    圈子置顶
                </div>
                <div class="meui_flex_con"></div>
            </div>
        </div>
        <div class="date_div meui_flex_wrap">
            <div class="date_item meui_flex_con">
                <div class="date_label">
                    开始时间
                </div>
                <input type="text" class="date_time" id="start_date_time" readonly="readonly" onfocus="this.blur()"/>
            </div>
            <div class="middle_arrow"></div>
            <div class="date_item meui_flex_con">
                <div class="date_label">
                    结束时间
                </div>
                <input type="text" class="date_time" id="end_date_time" readonly="readonly" onfocus="this.blur()"/>
            </div>
        </div>
        <div class="select_time_confirm" tapmode="meui_click" onclick="fnConfirmTime()">
            确定
        </div>
    </div>
</div>
<div class="no-data" style="display: none">
    <div class="back_btn" tapmode="meui_click" onclick="fnBack()"></div>
    <img src="../../image/no_fwq@2x.png" width="124"/>
    <div class="no-data-text">
        亲，网络不稳定哦
    </div>
</div>
<img class="backToH5" src="../../image/community/zbs.png" alt="" tapmode onclick="fnbackToH5();">
<footer></footer>
</body>
<script type="text/tpl" id="huati-tpl">
<div class="btmBar flex-column flex-middle flex-between flex-none">
<div class="flex-auto aui-ellipsis-1 px-10">
{{=it.recruitName}}
</div>
{{? it.recruitStatus == "1"}}
<div class="status orange">征集中</div>
{{?? it.recruitStatus == "2"}}
<div class="status grey">已结束</div>
{{?}}
</div>

</script>
<script type="text/javascript" src="../../script/api.js"></script>
<script type="text/javascript" src="../../script/mapi.js"></script>
<script type="text/javascript" src="../../script/vue.js"></script>
<script type="text/javascript" src="../../script/service.js?v=01"></script>
<script type="text/javascript" src="../../script/jquery.js"></script>
<script type="text/javascript" src="../../script/swiper.js"></script>
<script type="text/javascript" src="../../script/aliPlayer.js"></script>
<script type="text/javascript" src="../../script/sha1.js"></script>
<script type="text/javascript" src="../../script/upload_img.js?v=100"></script>
<script type="text/javascript" src="../../script/time.js"></script>
<script type="text/javascript" src="../../script/mobiscroll_date.js"></script>
<script type="text/javascript" src="../../script/mobiscroll.js"></script>
<script type="text/javascript" src="../../script/doT.min.js"></script>
<script type="text/javascript" src="../../script/signature.js"></script>
<script type="text/javascript" src="../../script/fastclick.js"></script>
<script type="text/javascript" src="../../script/common.js"></script>
<script type="text/javascript">
    var type;
    var topicId;
    var storageUserId;
    var backWinName;
    var recruitId;
    var frameWidth;
    var headerH;
    var userToken;
    var userTopicId;
    var isRoot;
    var savaBackWinName;
    var noImgs = false;
    var commentsPageIndex = 1;
    apiready = function() {
        //fnRefreshOpen();
        $api.fixTabBar($api.dom('.chat_div'));
        // $api.fixTabBar($api.dom('.share_dialog'));
        // $api.fixTabBar($api.dom('.comment_div'));
        fnSysHeaderStyle();
        // headerH = $api.offset($api.dom('header')).h;
        if (api.systemType === 'ios') {
            $api.css($api.dom('.reply_div_inner'), 'top:' + api.safeArea.top + 'px');
            $api.css($api.dom('.no-data .back_btn'), 'top:' + api.safeArea.top + 'px');
            $api.css($api.dom('.rich_txt_div'), 'padding-top:' + (api.safeArea.top + 44) + 'px');
        }else{
            $api.css($api.dom('.rich_txt_div'), 'padding-top:' + 44 + 'px');
        }
        $api.css($api.dom('.tips-no-more'), 'padding-bottom:' + (api.safeArea.bottom+ $api.offset($api.dom('.input_div')).h - 50) + 'px');
        // $api.fixStatusBar($api.dom('header'));
        type = api.pageParam.type;
        topicId = api.pageParam.id;
        frameWidth = api.frameWidth;
        storageUserId = api.readFile({
            sync : true,
            path : api.boxDir + '/userid.txt'
        });
        frameWidth = api.frameWidth;
        backWinName = api.pageParam.backWinName;
        fnPausePreWinVideo();
        type = api.pageParam.type;
        fnGetTopicInfo();
//			if(api.pageParam.type){
//				fnSetTopicType(api.pageParam.type);
//			}
        fnScrollListener();
        fnAddProgressBarListener();
        fnViewAppearListener();
        fnInitEventListener();
        fnKeyBoardListener();
        fnAddNativeListener();
        userToken = api.readFile({
            sync : true,
            path : api.boxDir + '/token.txt'
        });
        if(userToken.indexOf("Bearer") < 0){
            userToken = 'Bearer' + userToken
        }
        isRoot = api.readFile({
            sync : true,
            path : api.boxDir + '/isRoot.txt'
        });
        if(typeof api.pageParam.topicId != 'undefined'){
            userTopicId = api.pageParam.topicId;
        }else {
            userTopicId = api.readFile({
                sync : true,
                path : api.boxDir + '/topicId.txt'
            });
        }
        // fnInitStyle();
        fnInitHeaderTop();
        fnIsDelayShowInput();
        fnIsBlack();
        savaBackWinName = api.readFile({
            sync : true,
            path : api.boxDir + '/backWinName.txt'
        });
        fnSetTokenFlag();
    };

    function fnSetTokenFlag(){
        var token = api.readFile({
            sync : true,
            path : api.boxDir + '/token.txt'
        });
        if (fnIsEmpty(token) || token.indexOf('#') == -1) {
            fnSetDisplay('no_login_input',true);
            fnSetDisplay('login_input',false);
        }else{
            fnSetDisplay('no_login_input',false);
            fnSetDisplay('login_input',true);
        }
    }

    var isBlack = false;
    function fnIsBlack(){
        api.readFile({
            path : api.boxDir + '/isBlackAndFocus.txt',
        }, function(ret, err) {
            if (ret.data == -200) {
                isBlack = true;
                // $api.dom('.share_operation_div').style.display = 'none';
            }
        });
    }

    var isDelayShowInput = false;
    function fnIsDelayShowInput(){
        if(api.systemType == 'ios') {
            var version = api.systemVersion.split('.');
            if(version[0] < 11){
                isDelayShowInput = true;
            }
        }
    }

    function fnInitHeaderTop() {
        if (api.systemType == 'android') {
            $api.dom('.img_back_btn').style.top = '0px';
            $api.dom('.img_more_btn').style.top = '0px';
            $api.dom('.video_header_bg .img_back_btn').style.top = '0px';
            $api.dom('.video_header_bg .img_more_btn').style.top = '0px';
        }
    }

    function fnInitStyle() {
        if (userTopicId == '662' || userTopicId == '665') {
            $api.css($api.dom('.backToH5'), "display:block");
        }
    }

    function fnbackToH5() {
        var type;
        if (userTopicId == 662) {
            type = 1;
        } else if (userTopicId == 665) {
            type = 3;
        }
        api.ajax({
            url : HOST_h5 + "/circle/getSqzbLink.ajax",
            method : 'get',
            headers : {
                'TokenAuthorization' : userToken
                // 'TokenAuthorization': 'Bearer6c890dd5-b974-4b83-b277-a7d362cd91e1966#BZLZo/6FAufLJrFNGWi777hzaQsc9Kyvk33OJFCutscAbbP1RV0YPfPVD8pWfSRw'
            },
            data : {
                body : {
                    type : type
                }
            }
        }, function(ret, err) {
            if (ret) {
                var eventUrl = ret.data;
                api.sendEvent({
                    name : 'APICloudCallNaviteMethod',
                    extra : {
                        type : 1,
                        tag:api.winName,
                        canCallBack : 1,
                        toPageName : 'CommunityWeb',
                        toPageParams : {url: eventUrl}
                    }
                });
                api.closeWin();
                // window.location.href = ret.data;
            } else {
                fnToast(ret.message);
            }
        });
    }

    function fnInitEventListener() {

        api.addEventListener({
            name : 'change_frame_event'
        }, function(ret, err) {
            videoPlayer.pause();
        });
        api.addEventListener({
            name : "showErr"
        }, function(ret, err) {
            $api.css($api.dom('.no-data'), 'display:block');
            $api.css($api.dom('.chat_div'), 'display:none');
        });
        api.addEventListener({
            name : "refreshDelete_" + api.winName
        }, function(ret, err) {
            fnDelete()
        });
        api.addEventListener({
            name : "refreshHide"
        }, function(ret, err) {
            api.closeFrame({
                name: 'topic_detail_share_frame'
            });
            fnHide()
        });
        api.addEventListener({
            name:'resume'
        }, function(ret, err) {
            setTimeout(function(){
                isShareing = false;
            },1000);
        });
        api.addEventListener({
            name: 'refreshToken'
        }, function (ret, err) {
            fnRefreshInfo();
        });
    }

    function fnSetVideoStatus(status){
        isCanPlay = status;
        if(isVideoPlaying){
            if (!videoPlayer)
                return;
            videoPlayer.pause();
        }
    }

    function fnHideReward() {
        if (type == 4) {
            fnSetDisplay('replayReward', false);
            fnSetDisplay('replyHide', false);
        }
    }

    function fnRefreshInfo(){
        fnSetTokenFlag();
        fnGetUserInfo();
        fnGetUserType();
    }

    function fnGetUserInfo() {
        $service.get('user/getUserInfo.ajax', {}, function(ret, err) {
            if (ret.ok == 1) {
                api.writeFile({
                    path : api.boxDir + '/userid.txt',
                    data : ret.data.userInfoCount.userId
                }, function(ret, err) {
                });
                fnGetUserIsBlackAndFocus(ret.data.userInfoCount.userId);
            }
            fnReGetTopicInfo();
        });
    }

    function fnGetUserIsBlackAndFocus(userId) {
        $service.get('user/isBlackAndFocus.ajax', {
            memberId : userId
        }, function(ret, err) {
            if (ret) {
                if (ret.ok == 1) {
                } else {
                    api.writeFile({
                        path : api.boxDir + '/isBlackAndFocus.txt',
                        data : '-200'
                    }, function(ret, err) {
                        isBlack = true;
                    });
                }
            }
        }, true);
    }

    function fnGetUserType() {
        $service.get('user/getShopkeepersInfo.ajax', null, function(ret, err) {
            if (ret) {
                if (ret.ok == 1) {
                    api.writeFile({
                        path : api.boxDir + '/userType.txt',
                        data : ret.data
                    }, function(ret, err) {

                    });
                } else {
                    api.writeFile({
                        path : api.boxDir + '/userType.txt',
                        data : ''
                    }, function(ret, err) {

                    });
                    fnToast('获取身份信息失败', 'middle');
                }
            }
        }, true);
    }

    function fnReGetTopicInfo(isShare) {
        storageUserId = api.readFile({
            sync : true,
            path : api.boxDir + '/userid.txt'
        });
        isShareing = isShare;
        fnSetTopicType(type);
        if (type == 3) {
            api.setFullScreen({
                fullScreen : true
            });
        }
        // fnSetDisplay('.share_div', false);
        fnGetTopicInfo();
        // fnToast('编辑成功', 'middle');
        // api.closeToWin({
        // 	name : api.winName
        // });
        $api.dom('.chat_div').style.bottom = 0 + 'px';
    }

    var isShareing = false;
    function fnKeyBoardListener() {
        api.addEventListener({
            name : 'keyboardshow'
        }, function(ret, err) {
            if(isNeedLogin) {
                return;
            }
            // if(!isShareing && api.systemType == 'ios') {
            if(api.systemType == 'ios') {
                // alert(ret.h - api.safeArea.bottom - mScrollHeight)  //379 正常301
                $api.dom('.chat_div').style.bottom = ret.h - api.safeArea.bottom - mScrollHeight + 'px';
            }
            if(api.systemType == 'android'){
                $api.dom('.chat_div').style.bottom = ret.h - api.safeArea.bottom - mScrollHeight + 'px';
            }
        });
        api.addEventListener({
            name : 'keyboardhide'
        }, function(ret, err) {
            $api.dom('.chat_div').style.position ='fixed';
            $api.dom('.chat_div').style.bottom = 0 + 'px';

        });
//			var winHeight = $(window).height();
//			$(window).resize(function() {
//				var heigth = $(this).height();
//				if (winHeight - heigth > 50) {
//				} else {
//					if (api.systemType == 'android') {
//						fnToast('1');
//						$api.dom('.comment_input').blur();
//					}
//				}
//			});TODO
    }

    function fnGetTopicInfo() {
        commentsVue.type = type;
        if (type == 4) {
            fnGetBusinessTopic();
//				fnSetDisplay('.no_recommend_space', true);
        } else {
            fnGetTopicDetails();
        }
    }

    function fnViewAppearListener() {
        api.addEventListener({
            name:'viewappear_event_'+ api.winName
        },function(ret,err){
            fnAddNativeListener()
            if (type == 3) {
                api.setFullScreen({
                    fullScreen : true
                });
            }
        });
        api.addEventListener({
            name:'viewdisappear_event_'+ api.winName
        },function(ret,err){
            if (videoPlayer) {
                videoPlayer.pause();
            }
            // fnRemoveListener();
        });
    }

    function fnRemoveListener() {
        api.removeEventListener({
            name : 'NaviteCallAPICloudMethod'
        });
    }

    var replyMoreOperationId;
    var replyMoreOperationUserId;
    var mScrollHeight = 0;
    var isCloseAllReplyAfterDelete;
    var replyId;
    function fnOpenReplyMoreOperation(el, commentId, commentUserId, isHide, isClose) {
        fnLogStr(el.id);
        replyId = el.id;
        isCloseAllReplyAfterDelete = isClose;
        replyMoreOperationId = commentId;
        replyMoreOperationUserId = commentUserId;
        fnLogStr(replyMoreOperationId + ' ' + replyMoreOperationUserId);
        var offset = $api.offset(el);
        fnLog(offset);
        var operation = $api.dom('.reply_more_operation');
        mScrollHeight = fnIsEmpty(mScrollHeight) ? 0 : mScrollHeight;
        var top = offset.t + offset.h + 10 - mScrollHeight;
        if (top + 120 + 48 > api.winHeight) {
            fnSetDisplay('.triangle-bottomright', false);
            fnSetDisplay('.triangle-topright', true);
            operation.style.top = top - 140 + 'px';
        } else {
            fnSetDisplay('.triangle-bottomright', true);
            fnSetDisplay('.triangle-topright', false);
            operation.style.top = top + 'px';
        }
        if (isHide) {
            fnSetImgSrc('hideCommentImg', '../../image/mine/eye_close.png');
            fnSetTxt('hideCommentTxt', '取 消');
        } else {
            fnSetImgSrc('hideCommentImg', '../../image/mine/eye_iocn.png');
            fnSetTxt('hideCommentTxt', '隐 藏');
        }
        var userType = api.readFile({
            sync : true,
            path : api.boxDir + '/userType.txt'
        });
        if (userType == 1) {
            fnSetDisplay('replayReward', false);
            fnSetDisplay('replyHide', false);
        }
        fnSetDisplay('.reply_more_operation_div', true);
        fnLogStr($(window).height());
    }

    function fnCloseReplyMoreOperation() {
        setTimeout(function() {
            fnSetDisplay('.reply_more_operation_div', false);
        }, 100)
    }

    function fnDeleteComment() {
        api.hideProgress();
        fnCloseReplyMoreOperation();
        var commentId = replyMoreOperationId;
        replyMoreOperationId = null;
        var url = 'comment/deleteComment.ajax';
        var params = {
            commentId : commentId
        };
        if (type == 4) {
            url = 'schoolstory/deleteComment.ajax';
            params = {
                commentId : commentId,
                userCode : replyMoreOperationUserId,
            }
        }
        $service.get(url, params, function(ret, err) {
            if (ret) {
                if (ret.ok == 1) {
                    fnToast('删除成功', 'middle');
                    var num = --topicDetailsVue.topicDetails.commentNumber;
                    if (num == 0) {
                        fnSetDisplay('.comment_div', false);
                        fnSetDisplay('.no_comment_div', true);
                    }
                    fnSetTxt('.comment_num', num);
                    replyVue.isNoMore = false;
                    fnRefreshReplyList(commentId);
                    commentsPageIndex = 1;
                    setTimeout(fnGetComments(), 100);
                    if (isCloseAllReplyAfterDelete) {
                        fnCloseAllReply()
                        // 	fnSetDisplay('.reply_div', false);
                    }
                } else {
                    if (ret.data.content === '需要登录') {
                        return;
                    }
                    fnToast(ret.data.content, 'middle');
                }
            }
        }, true);
    }

    function fnRefreshReplyList(commentId) {
        if(!replyVue.comment.replyNumber == 0){
            fnSetTxt('.top_reply_num', replyVue.comment.replyNumber-1);
        }
        for (var i = 0; i < replyVue.replysList.length; i++) {
            if (commentId == replyVue.replysList[i].id) {
                replyVue.replysList.splice(i, 1);
                replyVue.comment.replyNumber--;
            }
        }
    }

    function fnHideComment() {
        api.hideProgress();
        fnCloseReplyMoreOperation();
        var commentId = replyMoreOperationId;
        replyMoreOperationId = null;
        $service.get('comment/updateCommentDisplayStatus.ajax', {
            commentId : commentId
        }, function(ret, err) {
            if (ret) {
                if (ret.ok == 1) {
                    fnOnHideReply(commentId, true);
                } else {
                    if (ret.data.content == '需要登录') {
                        return;
                    }
                    fnToast(ret.data.content, 'middle');
                }
            }
        }, true);
    }

    function fnOnHideReply(commentId) {
        if (replyVue.isReply) {
            if(replyId.indexOf('comment') == 0){
                var isHide = replyVue.comment.isHide;
                if(isHide){
                    fnToast('取消隐藏成功', 'middle');
                }else{
                    fnToast('隐藏成功', 'middle');
                }
                replyVue.comment.isHide = !replyVue.comment.isHide;
                return;
            }
            for (var i = 0; i < replyVue.replysList.length; i++) {
                if (commentId == replyVue.replysList[i].id) {
                    if (replyVue.replysList[i].isHide) {
                        fnToast('取消隐藏成功', 'middle');
                        replyVue.$set(replyVue.$data.replysList[i], 'isHide', false);
                    } else {
                        fnToast('隐藏成功', 'middle');
                        replyVue.$set(replyVue.$data.replysList[i], 'isHide', true);
                    }
                    break;
                }
            }
        } else {
            for (var i = 0; i < commentsVue.commentsList.length; i++) {
                if (commentId == commentsVue.commentsList[i].id) {
                    if (commentsVue.commentsList[i].isHide) {
                        fnToast('取消隐藏成功', 'middle');
                        commentsVue.$set(commentsVue.$data.commentsList[i], 'isHide', false);
                    } else {
                        fnToast('隐藏成功', 'middle');
                        commentsVue.$set(commentsVue.$data.commentsList[i], 'isHide', true);
                    }
                    break;
                }
            }
        }
    }

    var isExpressionInit = false;
    var isExpression = false;
    var isClickExPression = false;
    //切换选择表情布局的可见度
    function fnSwitchExpression() {
        $api.dom('.comment_input').blur();
        if (!isExpressionInit) {
            fnSetDisplay('.expression_div', !isExpression);
            fnSetDisplay('.select_expression', false);
            fnInitExpressionSwiper();
            isExpression = true;
            isExpressionInit = true;
            setTimeout(function() {
                fnSetFlex('.comment_other_operation');
                //					fnSetFlex('.hide_keyboard');
                isClickExPression = true;
            }, 100);
        } else {
            fnSetDisplay('.select_expression', isExpression);
            setTimeout(function() {
                fnSetDisplay('.expression_div', !isExpression);
                if (!isExpression) {
                    //						fnSetFlex('.hide_keyboard');
                } else {
                    fnSetDisplay('.hide_keyboard', false);
                }
                if (!isExpression) {
                    fnSetFlex('.comment_other_operation', true);
                } else {
                    fnSetDisplay('.comment_other_operation', false);
                }
                isExpression = !isExpression;
                isClickExPression = true;
            }, 100);
        }
    }

    //切换表情类型
    function fnSelectExpr(index) {
        if (index == 1) {
            $api.addCls($api.byId('expression_page_1'), 'active');
            $api.removeCls($api.byId('expression_page_2'), 'active');
            expressionsSwiper.removeAllSlides();
            expressionsSwiper.appendSlide('<div class="swiper-slide">' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier1.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier2.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier3.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier4.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier5.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier6.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier7.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier8.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '</div>');
            expressionsSwiper.appendSlide('<div class="swiper-slide">' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier9.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier10.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier11.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier12.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier13.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier14.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier15.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier16.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '</div>');
            expressionsSwiper.appendSlide('<div class="swiper-slide">' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/haier/haier17.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '</div>');
        } else {
            $api.addCls($api.byId('expression_page_2'), 'active');
            $api.removeCls($api.byId('expression_page_1'), 'active');
            expressionsSwiper.removeAllSlides();
            expressionsSwiper.appendSlide('<div class="swiper-slide">' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/SGjun/sg2.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/SGjun/sg3.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/SGjun/sg4.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/SGjun/sg5.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/SGjun/sg6.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/SGjun/sg7.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/SGjun/sg8.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/SGjun/sg9.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '</div>');
            expressionsSwiper.appendSlide('<div class="swiper-slide">' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/SGjun/sg10.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/SGjun/sg11.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '<img class="expression_img" src="http://cdn09.ehaier.com/shunguang/expression/SGjun/sg12.gif" alt="" tapmode onclick="fnExprComment(this)"/>' + '</div>');
        }
    }

    //返回事件
    var isCloseWin = false;
    function fnBack() {
        if (!isFullscreen) {
            api.sendEvent({
                name : 'APICloudCallNaviteMethod',
                extra : {
                    type : 10, // type=10代表横竖屏功能
                    canCallBack : 0, // 不需要回调
                    command : ['1'],            // command是个数组,在type=10时,’1’表示竖屏, '2'表示横屏
                }
            });
            isCloseWin = true;
            $api.byId('video_play').style.display = 'none';
            if (videoPlayer) {
                videoPlayer.stop();
            }

            if (replyVue.isReply) {
                fnCloseAllReply();
            }else if (isRoot == 'isRoot' && (userTopicId == '665' || userTopicId == '670' || userTopicId == '671' || userTopicId == '672' || userTopicId == '673' || userTopicId == '674' || userTopicId == '675' || userTopicId == '676' || userTopicId == '677' || userTopicId == '678' || userTopicId == '679' || userTopicId == '680' || userTopicId == '681' || userTopicId == '682' || userTopicId == '683' || userTopicId == '684' || userTopicId == '685' || userTopicId == '686' || userTopicId == '687' || userTopicId == '688' || userTopicId == '690')) {
                fnOpenWin('community_detial', '../community/', {
                    id : userTopicId,
                    token : userToken,
                    // needRefreshJoin : true,
                    isToRoot:'isToRoot'
                });
            }else if(!fnIsEmpty(savaBackWinName)){
                if(api.pageParam.closeToWin){
                    api.closeToWin({
                        name: savaBackWinName
                    });
                }else{
                    api.closeWin();
                }
            } else {
                api.closeWin();
            }
            fnCloseRnOpenWin();
        } else {
            fnFullscreen();
        }
    }

    function fnCloseRnOpenWin() {
        if (api.winName == 'root') {
            api.sendEvent({
                name : 'APICloudCallNaviteMethod',
                extra : {
                    type : 6
                }
            });
        }
    }

    //打赏列表
    function fnReward() {
        fnOpenWin('reward_list', null, {
            storyId : topicDetailsVue.topicDetails.id
        });
    }
    var save_safeAreTop="";
    //初始化话题详情类型（1：简单图文；2：图文混排；3视频），并显示相应的布局
    function fnSetTopicType(_type) {
        type = _type;

        if(!save_safeAreTop){
            save_safeAreTop = api.safeArea.top;
        }
        var height = 44 + parseInt(api.systemType !== 'android'?save_safeAreTop:0);
        if (type == 1) {
            fnSetDisplay('.imgs_txt_div', true);
            // fnSetDisplay('.header', false);
            api.openFrame({
                name : 'topic_details_frm1',
                url : 'topic_details_frm1.html',
                bgcolor:'rgba(0,0,0,0)',
                rect : {
                    x : 0,
                    y : 0,
                    w : 'auto',
                    h : height
                },
                pageParam:{
                    frame:api.frameName,
                    type : type,
                    noImgs : noImgs
                }
            });
             api.sendEvent({
                name: "getHeight",
                extra: {
                    height:height
                }

            })
        } else if (type == 2 || type == 4) {
            fnSetDisplay('.rich_txt_div', true);
            api.openFrame({
                name : 'topic_details_frm1',
                url : 'topic_details_frm1.html',
                bgcolor:'rgba(0,0,0,0)',
                rect : {
                    x : 0,
                    y : 0,
                    w : 'auto',
                    h : height
                },
                pageParam:{
                    frame:api.frameName
                }
            });
        } else if (type == 3) {
            fnSetDisplay('.video_txt_div', true);
            // fnSetDisplay('.header', false);
            if ($api.text($api.byId('recruit')) != '——征集作品征集中') {
                $api.byId('recruit').style.marginTop = '214px';
            } else {
                $api.byId('video_play_title').style.marginTop = '214px';
            }
        }
        fnHideReward();
    }

    function fnOpenUserReplyUser(item) {
        var token = api.readFile({
            sync : true,
            path : api.boxDir + '/token.txt'
        });
        if (fnIsEmpty(token)) {
            fnOpenLogin();
        } else {
            if (token.indexOf('#') === -1) {
                fnOpenLogin();
                return;
            }
            api.readFile({
                path : api.boxDir + '/userid.txt'
            }, function(ret, err) {
                if (ret) {
                    var _userid = ret.data;
                    if (_userid === '') {
                        fnOpenLogin();
                        return;
                    }
                    if (item.userCode == _userid) {
                        fnOpenWin('mine', '../mine/');
                    } else {
                        fnOpenWin('ta_page', '../ta_page/', {
                            userId : item.userCode
                        });
                    }
                }
            });
        }
    }

    function fnOpenUserCommentUser(item) {
        var token = api.readFile({
            sync : true,
            path : api.boxDir + '/token.txt'
        });
        if (fnIsEmpty(token)) {
            fnOpenLogin();
        } else {
            if (token.indexOf('#') === -1) {
                fnOpenLogin();
                return;
            }
            api.readFile({
                path : api.boxDir + '/userid.txt'
            }, function(ret, err) {
                if (ret) {
                    var _userid = ret.data;
                    if (_userid === '') {
                        fnOpenLogin();
                        return;
                    }
                    if (item.userCode == _userid) {
                        fnOpenWin('mine', '../mine/');
                    } else {
                        fnOpenWin('ta_page', '../ta_page/', {
                            userId : item.userCode
                        });
                    }
                }
            });
        }
    }

    var replyVue = new Vue({
        el : '.reply_div',
        data : {
            comment : {},
            replysList : [],
            isReply : false,
            isNoMore : false,
            isShowExpand:[]
        },
        methods : {
            fnIsExpression : function() {
                return this.comment.comment && this.comment.comment.indexOf('comment_expression:') != -1;
            },
            fnExpressionPath : function() {
                if (this.comment.comment)
                    return this.comment.comment.substring(19);
                return '';
            },
            fnOpenReplyMoreOperation : function(el, comment, isClose) {
                fnLog(comment);
                fnOpenReplyMoreOperation($api.byId(el), comment.id, comment.userCode, comment.isHide, isClose);
            },
            fnOpenUser : function(item) {
                fnOpenUserReplyUser(item);
            },
            fnPreviewCommentImgs : function(imgs, index) {
                api.openWin({
                    name: 'preview_picture',
                    url: 'preview_picture.html',
                    pageParam : {
                        urlArr : imgs,
                        activeIndex : index
                    }
                });
                /*fnOpenWin('photo_viewer', null, {
						urlArr : imgs,
						activeIndex : index
					});*/
            },
            fnIsShowMore : function(item) {
                fnLogStr('fnIsShowMore:' + storageUserId);
                return (item.userCode == storageUserId || type != 4) && storageUserId;
            },
            fnExpand:function (event) {
                if(event.target.innerText === '展开'){
                    $api.removeCls($api.dom($api.closest(event.target,'.comment_right_div'),'.comment_content pre'), 'ellipsis-6');
                    event.target.innerText = '收起';
                }else {
                    $api.addCls($api.dom($api.closest(event.target,'.comment_right_div'),'.comment_content pre'), 'ellipsis-6');
                    event.target.innerText = '展开';
                }
            }
        },
        mounted:function (){
            this.isShowExpand = [];
            var comments = this.$refs.reply;
            if(typeof comments ==='undefined'){
                return;
            }
            for (var i = 0; i < comments.length ; i++){
                if (comments[i].scrollHeight > comments[i].clientHeight) {
                    this.isShowExpand.push(true);
                }else {
                    this.isShowExpand.push(false);
                }
            }
        },
        watch:{
            replysList:function () {
                replyVue.$mount();
            }
        }
    });

    //打赏列表对话框vue
    var rewardNumVue = new Vue({
        el : '.reaward_select_list',
        data : {
            list : [{
                num : 1,
                isActive : false
            }, {
                num : 5,
                isActive : false
            }, {
                num : 10,
                isActive : false
            }, {
                num : 30,
                isActive : false
            }, {
                num : 50,
                isActive : false
            }, {
                num : 100,
                isActive : false
            }],
            selectIndex : -1,
            isShow : false
        },
        methods : {
            fnSelect : function(item, index) {
                if (rewardNumVue.selectIndex != -1) {
                    rewardNumVue.$set(rewardNumVue.$data.list[rewardNumVue.selectIndex], 'isActive', false);
                }
                rewardNumVue.$set(rewardNumVue.$data.list[index], 'isActive', true);
                rewardNumVue.selectIndex = index;
            }
        }
    });
    function fnOnRewardInputChange(el) {
        el.value = el.value.replace(/[^0-9.]+/, '');
        rewardNumVue.selectIndex = -1;
        for (var i = 0; i < rewardNumVue.list.length; i++) {
            rewardNumVue.$set(rewardNumVue.$data.list[i], 'isActive', false);
        }
    }

    //评论上传图片列表vue
    var uploadImgVue = new Vue({
        el : '.upload_img_div',
        data : {
            list : [{}]
        },
        mounted : function() {
            setTimeout(function() {
                var slideBox = document.getElementById('slide_box');
                if (slideBox)
                    slideBox.scrollLeft = slideBox.scrollWidth;
            }, 300);
        },
        updated : function() {
            setTimeout(function() {
                var slideBox = document.getElementById('slide_box');
                if (slideBox)
                    slideBox.scrollLeft = slideBox.scrollWidth;
            }, 300);
        },
        methods : {
            fnDelete : function(index) {
                uploadImgVue.list.splice(index, 1);
                imgNum = 0;
            },
            fnPreviewCommentImgs : function(index) {
                fnLog(uploadImgVue.list);
                var imgs = [];
                for (var i = 0; i < uploadImgVue.list.length - 1; i++) {
                    imgs.push(uploadImgVue.list[i].path);
                }
//                  api.openWin({
//                      name: 'preview_picture',
//                      url: 'preview_picture.html',
//                      pageParam : {
//                          urlArr : imgs,
//                          activeIndex : index
//                      }
//                  });
                fnOpenWin('photo_viewer', null, {
                    urlArr : imgs,
                    activeIndex : index
                });
            }
        }
    });

    var isRichTxt = false;
    //话题详情vue
    var topicDetailsVue = new Vue({
        el : '.topic_details',
        data : {
            topicDetails : {},
            productList : [],
            imgListClassName:"",
            imgNum:"",
            showFollow : true
        },
        updated : function() {
            // this.$nextTick(function () {
            //     setTimeout(function () {//因为返回的HTML片段有很多不合适的行内样式，只有通过js才能去改变，外部css无法改变
            //让div失去可编辑属性
            if(isRichTxt) {
                return;
            }
            isRichTxt = true;
            $('.rich_txt div').attr('contenteditable', 'false');
            $api.dom('.rich_txt').style.fontSize = '16px';
            $('.img_rich_txt_pre div').attr('contenteditable', 'false');
            $api.dom('.img_rich_txt_pre').style.fontSize = '16px';
            $('.video_rich_txt_pre div').attr('contenteditable', 'false');
            $api.dom('.video_rich_txt_pre').style.fontSize = '16px';
            var tables = $api.domAll('table');
            for (var i = 0; i < tables.length; i++) {
                tables[i].style.width = '100%';
            }
            var richTxt = $api.dom('.rich_txt');

            var oDiv = $api.domAll('.rich_txt div');
            for(var j = 0;j < oDiv.length; j++){
                // $api.css(oDiv[j],'background-image:url(../../image/edit_topic_btn.png)')
                $api.css(oDiv[j],'background-image:none;width:100%;height:auto')
            }

            var as = richTxt.getElementsByTagName('a');
            var hrefs = [];
            for (var i = 0; i < as.length; i++) {
                if (as[i].href != '') {
                    hrefs.push(as[i].href);
                    as[i].href = '#';
                    as[i].style.color = '#2979FF';
                    as[i].onclick = (function close(j) {
                        return function() {
                            var url = hrefs[j];
                            var pageParams;
                            var winUrl;
                            if(url.indexOf('/noteDetails/') != -1) {
                                var params = url.substring(url.indexOf('/noteDetails/')+13);
                                var id = params.substring(0,params.indexOf('/'));
                                winUrl = '../topic/topic_details.html';
                                pageParams = {
                                    id : id,
                                    name : 'topic_details_'+ new Date().getTime()
                                };
                            }else if(url.indexOf('/classNoteDetails/') != -1){
                                var params = url.substring(url.indexOf('/classNoteDetails/')+18);
                                var id = params.substring(0);
                                winUrl = '../topic/topic_details.html';
                                pageParams = {
                                    id : id,
                                    name : 'topic_details_'+ new Date().getTime()
                                };
                            }else if(url.indexOf('/circlePage/') != -1){
                                var params = url.substring(url.indexOf('/circlePage/')+12);
                                var id = params.substring(0);
                                winUrl = '../community/community_detial.html';
                                pageParams = {
                                    id : id,
                                    name : 'community_detial_'+ new Date().getTime()
                                };
                            }else if(url.indexOf('/topic_details_frame.html') != -1){
                                var num = url.indexOf("?");
                                url = url.substring(num);
                                var base = new Base64();
                                // url = url.split('&')[0];
                                var params;
                                try {
                                    params = JSON.parse(base.decode(url));
                                } catch (e) {
                                    url = url.substring( 0, url.length - 1);
                                    params = JSON.parse(base.decode(url));
                                }
                                var id = params.id;
                                var type = params.type;
                                winUrl = '../topic/topic_details.html';
                                pageParams = {
                                    id : id,
                                    type : type,
                                    name : 'topic_details_'+ new Date().getTime()
                                };
                            }else if(url.indexOf('/collect_detail.html') != -1){
                                var num = url.indexOf("?");
                                url = url.substring(num);
                                var base = new Base64();
                                // url = url.split('&')[0];
                                var params;
                                try {
                                    params = JSON.parse(base.decode(url));
                                } catch (e) {
                                    url = url.substring( 0, url.length - 1);
                                    params = JSON.parse(base.decode(url));
                                }
                                var id = params.id;
                                winUrl = '../collect/collect_detail2.html';
                                pageParams = {
                                    id : id,
                                    name : 'collect_detail2'+ new Date().getTime()
                                };
                            }else {
                                if (api.systemType === 'ios') {
                                    api.openApp({
                                        iosUrl : url
                                    })
                                } else {
                                    api.sendEvent({
                                        name : 'APICloudCallNaviteMethod',
                                        extra : {
                                            type : 12,
                                            toPageName : url
                                        }
                                    });
                                }
                                return;
                            }
                            api.openWin({
                                name: pageParams.name,
                                url: winUrl,
                                pageParam : pageParams
                            });

                        }
                    })(i);
                }
            }
            var imgs = $('.rich_txt img');
            if (!imgs || imgs.length == 0) {
                return false;
            }
            //获取富文本中的所有图片
            var urlArr = [];
            imgs.each(function(i) {
                urlArr.push($(this).attr('src'));
            });
            imgs.css('width', '100%');
            imgs.css('display', 'block');
            //设置富文本中的图片高度为auto，并设置点击事件，可打开图片浏览界面
            imgs.css('height', 'auto').on('click', function() {
                for (var i = 0; i < imgs.length; i++) {
                    if (this.src == urlArr[i]) {
                        api.openWin({
                            name: 'preview_picture',
                            url: 'preview_picture.html',
                            pageParam : {
                                urlArr : urlArr,
                                activeIndex : i
                            }
                        });
                        /*fnOpenWin('photo_viewer', null, {
							 urlArr: urlArr,
							 activeIndex: i
							 });*/
                        return;
                    }
                }
            });
            // }, 1000);
            // })
        },
        methods : {
            //关注
            fnFollow : function() {
                fnFollow();
            },
            fnOpenCommunityDetail : function(id) {
                if (id) {
                    api.openWin({
                        name : 'community_detial' + new Date().getTime(),
                        url : '../community/community_detial.html',
                        pageParam : {
                            id : id
                        },
                        slidBackEnabled : false,
                        allowEdit : true
                    });
//						fnOpenWin('community_detial', '../community/', {
//							id : id
//						});
                } else {
                    fnOpenWin("business_school_win", "../community/");
                }
            },
            fnOpenUser : function() {
                fnOpenUser();
            },
            fnBack : function() {
                fnBack();
            },
            fnShare : function() {
                fnShare();
            },
            fnOpenGoodsDetials : function(item) {
                api.sendEvent({
                    name : 'APICloudCallNaviteMethod',
                    extra : {
                        type : 1,
                        canCallBack : 0,
                        toPageName : 'GoodsDetail',
                        toPageParams : {
                            productId : item.id
                        }
                    }
                });
                api.execScript({
                    name: api.winName,
                    script: 'isExec = false'
                });
                if (videoPlayer) {
                    videoPlayer.pause();
                }
            },
            fnPreviewPicture: function (index) {
                $event.isShowHomeTab(false);
                var arr = topicDetailsVue.topicDetails.storyImgs;
                $app.openWin('preview_picture', {
                    urlArr: arr,
                    activeIndex: index
                }, {
                    url: 'preview_picture.html'
                })
            },
            fnAppendUrl:function (image) {
                if(image.indexOf('ehaier') !== -1){
                    return image + '@300_300';
                }
                return image;
            }
        }
    });
    function fnOpenUser() {
        var token = api.readFile({
            sync : true,
            path : api.boxDir + '/token.txt'
        });
        if (fnIsEmpty(token)) {
            fnOpenLogin();
        } else {
            if (token.indexOf('#') === -1) {
                fnOpenLogin();
                return;
            }
            api.readFile({
                path : api.boxDir + '/userid.txt'
            }, function(ret, err) {
                if (ret) {
                    var _userid = ret.data;
                    if (_userid === '') {
                        fnOpenLogin();
                        return;
                    }
                    if (topicDetailsVue.topicDetails.userCode == _userid) {
                        fnOpenWin('mine', '../mine/');
                    } else {
                        fnOpenWin('ta_page', '../ta_page/', {
                            userId : topicDetailsVue.topicDetails.userCode
                        });
                    }
                }
            });
        }
    }

    function fnFollow() {
        var follow;
        if (topicDetailsVue.topicDetails.isFollow == 0) {
            follow = 'Follow';
        } else {
            follow = 'UnFollow';
        }
        $service.get('user/follow.ajax', {
            followId : topicDetailsVue.topicDetails.userCode,
            type : follow
        }, function(ret, err) {
            if (ret) {
                if (ret.ok == 1) {
                    if (topicDetailsVue.topicDetails.isFollow == 0) {
                        topicDetailsVue.$set(topicDetailsVue.$data.topicDetails, 'isFollow', 1);
                    } else {
                        topicDetailsVue.$set(topicDetailsVue.$data.topicDetails, 'isFollow', 0);
                    }
                    // fnSetHeaderUserInfo(topicDetailsVue.topicDetails);
                    api.execScript({
                        name: api.winName,
                        frameName:'topic_details_frm1',
                        script : "fnSetHeaderUserInfo(\""+parseParamString(topicDetailsVue.topicDetails)+"\");"
                    });
                }
            } else {
                fnToast(err.msg);
            }
        });
    }

    var isFocusLogin = true;
    //评论列表vue
    var commentsVue = new Vue({
        el : '.comment_div',
        data : {
            commentsList : [],
            type : type,
            isShowExpand:[],
            commentIsNoMore : false,
            hasMoreComments:true
        },
        methods : {
            //打开全部回复界面
            fnOpenAllReply : function(comment) {
                api.setFrameAttr({
                    name: 'topic_details_frm1',
                    hidden: true
                });
                isFocusLogin = false;
//					if(api.systemType == 'android') {
                $api.addCls($api.dom('body'), 'overfolw_hidden');
                $api.addCls($api.dom('html'), 'overfolw_hidden');
//					}
                fnSetDisplay('.input_operations', false);
                fnSetDisplay('.reply_div', true);
                if(api.systemType == 'android') {
                    $api.dom('.comment_input').focus();
                }
                api.readFile({
                    path : api.boxDir + '/isBlackAndFocus.txt',
                }, function(ret, err) {
                    if (ret.value == -200) {
                        fnToast('您已经被禁言，不能进行该操作');
                        $api.dom('.comment_input').blur();
                        return;
                    } else {
                        replyVue.comment = comment;
                        replyIndex = 1;
                        fnGetAllReply(comment.id);
                        fnSetDisplay('.reply_div', true);
                        replyVue.isReply = true;
                        // fnSetReplyPraiseNum();
                        bodyScollHeight = document.documentElement.scrollTop || document.body.scrollTop;
                    }
                });
            },
            fnLongUserName : function(item) {
                if (!fnIsEmpty(item.userName)) {
                    if (item.userName.length > 10) {
                        item.userName = item.userName.substring(0, 10) + '...';
                    }
                }
                return item.userName;
            },
            fnPreviewCommentImgs : function(imgs, index) {
                /*fnOpenWin('photo_viewer', null, {
                    urlArr : imgs,
                    activeIndex : index
                });*/
                api.openWin({
                    name: 'preview_picture',
                    url: 'preview_picture.html',
                    pageParam : {
                        urlArr : imgs,
                        activeIndex : index
                    }
                });
            },
            fnOpenReplyMoreOperation : function(id, comment, isClose) {
                fnOpenReplyMoreOperation($api.byId(id), comment, isClose);
            },
            fnPraiseComment : function(item, index) {
                fnPraiseComment(item, index);
            },
            fnOpenReplyMoreOperation : function(el, comment, isClose) {
                fnOpenReplyMoreOperation($api.byId(el), comment.id, comment.userCode, comment.isHide, isClose);
            },
            fnOpenUser : function(item) {
                fnOpenUserCommentUser(item);
            },
            fnPreviewCommentImgs : function(imgs, index) {
                fnLog(imgs);
                /*fnOpenWin('photo_viewer', null, {
						urlArr : imgs,
						activeIndex : index
					});*/
                api.openWin({
                    name: 'preview_picture',
                    url: 'preview_picture.html',
                    pageParam : {
                        urlArr : imgs,
                        activeIndex : index
                    }
                });
            },
            fnIsShowMore : function(item) {
                fnLogStr('fnIsShowMore:' + storageUserId);
                return (item.userCode == storageUserId || type != 4) && storageUserId;
            },
            fnExpand:function (event) {
                if(event.target.innerText === '展开'){
                    $api.removeCls($api.dom($api.closest(event.target,'.comment_right_div'),'.comment_content pre'), 'ellipsis-6');
                    event.target.innerText = '收起';
                }else {
                    $api.addCls($api.dom($api.closest(event.target,'.comment_right_div'),'.comment_content pre'), 'ellipsis-6');
                    event.target.innerText = '展开';
                }
            }
        },
        mounted:function (){
            this.isShowExpand = []
            var comments = this.$refs.comment;
            if(typeof comments ==='undefined'){
                return;
            }
            for (var i = 0; i < comments.length ; i++){
                if (comments[i].scrollHeight > comments[i].clientHeight) {
                    this.isShowExpand.push(true);
                }else {
                    this.isShowExpand.push(false);
                }
            }
        },
        watch:{
            commentsList:function () {
                commentsVue.$mount();
            }
        }
    });
    var bodyScollHeight;
    function fnScrollBack() {
        $api.removeCls($api.dom('body'), 'overfolw_hidden');
        $api.removeCls($api.dom('html'), 'overfolw_hidden');
//			$api.addCls($api.dom('body'), 'overfolw_scroll');
//			$api.addCls($api.dom('html'), 'overfolw_scroll');
        document.body.scrollTop = document.documentElement.scrollTop = bodyScollHeight;
    }

    //相关话题列表vue
    // var topicVue = new Vue({
    //     el : '.list_wrap',
    //     data : {
    //         relativeTopicList : []
    //     },
    //     methods : {
    //         //获取话题图片数目
    //         fnImgCount : function(item) {
    //             if (item.storyImgs) {
    //                 return item.storyImgs.length;
    //             }
    //             return 0;
    //         },
    //         //打开话题详情界面
    //         openDetails : function(_dataTypeNew, _id) {
    //             api.openWin({
    //                 name : guid() + 'topic_details',
    //                 url : 'topic_details.html',
    //                 pageParam : {
    //                     type : _dataTypeNew,
    //                     id : _id,
    //                     guid : guid()
    //                 },
    //                 slidBackEnabled : false,
    //                 allowEdit : true
    //             });
    //         },
    //         //话题详情列表点赞
    //         fnPraise : function(item, index) {
    //             fnPraise(item, index);
    //         },
    //         //打开个人主页界面
    //         fnOpenUser : function(item) {
    //             var token = api.readFile({
    //                 sync : true,
    //                 path : api.boxDir + '/token.txt'
    //             });
    //             if (fnIsEmpty(token)) {
    //                 fnOpenLogin();
    //             } else {
    //                 if (token.indexOf('#') === -1) {
    //                     fnOpenLogin();
    //                     return;
    //                 }
    //                 api.readFile({
    //                     path : api.boxDir + '/userid.txt'
    //                 }, function(ret, err) {
    //                     if (ret) {
    //                         var _userid = ret.data;
    //                         if (_userid === '') {
    //                             fnOpenLogin();
    //                             return;
    //                         }
    //                         if (item.userId == _userid) {
    //                             fnOpenWin('mine', '../mine/');
    //                         } else {
    //                             fnOpenWin('ta_page', '../ta_page/', {
    //                                 userId : item.userId
    //                             });
    //                         }
    //                     }
    //                 });
    //             }
    //         },
    //         //缓存图片
    //         fnLoadImage : function(url) {
    //             fnLoadImage(url);
    //         }
    //     }
    // });
    var transImgs = [];
    function fnTransImgsUrl(index) {
        if (index >= uploadImgVue.list.length - 1) {
            fnUploadImg();
            return;
        }
        var UIAlbumBrowser = api.require('UIAlbumBrowser');
        UIAlbumBrowser.transPath({
            path : uploadImgVue.list[index].path
        }, function(ret, err) {
            transImgs.push(ret.path);
            fnTransImgsUrl(++index);
        });
    }

    /*function fnSetHeaderUserInfo(data) {
			fnSetImgSrc('header_user_img', data.userImg);
			var userName;
			if(data.userName && data.userName.length > 10){
				userName = data.userName.substring(0, 10) + '...';
			}
			fnSetTxt('header_user_name', userName);
			fnSetDisplay('.svip_icon', data.talentFlag == 1 ? true : false);
			fnSetDisplay('.vip_icon', data.talentFlag == 2 ? true : false);
			if (data.isFollow) {
				fnSetDisplay('header_user_follow', false);
				fnSetFlex('header_user_cancel_follow');
			} else {
				fnSetDisplay('header_user_cancel_follow', false);
				fnSetFlex('header_user_follow');
			}
		}*/

    var isCanShare = false;
    var shareInfo;
    function fnGetBusinessTopic() {
        // fnSetDisplay('.recommend_div', false);
        var params = {
            storyId : topicId
        };
        var token = api.readFile({
            sync : true,
            path : api.boxDir + '/token.txt'
        });
        if (!fnIsEmpty(token) && token.indexOf('#') == -1 || fnIsEmpty(token)) {
            params = fnGetTDUUIDParams(params);
        }
        $service.get('schoolstory/getStoryInfo.ajax', params, function(ret, err) {
            if (ret && ret.ok == 1) {
                if (ret.data == null) {
                    /* if(api.systemType == 'ios'){
                             $api.css($api.dom('.recommend_div'), 'margin-top:' + api.safeArea.top + 'px');
                         }*/
                    // fnSetDisplay('.recommend_div', false);
                    // api.openFrame({
                    //     name: 'is_delete_frame',
                    //     url: '../popup/is_delete_frame.html',
                    //     bgColor: 'rgba(0,0,0,0)'
                    // });
                    // return;
                }
                fnSetTopicType(4);
                //格式化话题发布时间
                ret.data.releaseTime = ret.data.createDate1;
                if(fnIsEmpty(ret.data.userName)){
                    ret.data.userName = ret.data.userCode;
                }
                ret.data.topicName = '商学院';
                //初始化话题详情数据
                topicDetailsVue.topicDetails = ret.data;
                // fnSetHeaderUserInfo(ret.data);
                interval = setInterval(function () {
                    api.execScript({
                        name: api.winName,
                        frameName: 'topic_details_frm1',
                        script: 'fnSetHeaderUserInfo(\'' + parseParamString(ret.data) + '\');'
                    });
                },300);
                shareVue.shareInfo = ret.data;
                shareInfo = ret.data;
                isCanShare = true;
                fnGetComments();
                if (!fnIsEmpty(topicDetailsVue.topicDetails.productId)) {//如果关联商品不为空，从服务器获取关联商品
                    fnGetGoods();
                }
                var followImgs = $api.domAll('.follow_img');
                for (var i = 0; i < followImgs.length; i++) {
                    followImgs[i].style.display = 'none';
                }
                followImgs = $api.domAll('.info_follow_img');
                for (var i = 0; i < followImgs.length; i++) {
                    followImgs[i].style.display = 'none';
                }
                if (topicDetailsVue.topicDetails.praiseNumber > 0) {//如果点赞数大于0，显示点赞数布局
                    fnSetDisplay('.praise_num', true);
                    fnSetTxt('.praise_num', topicDetailsVue.topicDetails.praiseNumber);
                }
                if (topicDetailsVue.topicDetails.isPraise == 1) {
                    fnSetImgSrc('.praise_img', '../../image/mine/zans.png');
                } else {
                    fnSetImgSrc('.praise_img', '../../image/mine/zan.png');
                }
                if (topicDetailsVue.topicDetails.isCollection == 1) {//设置收藏标识
                    $api.dom('.collect_img').style.backgroundImage = 'url(../../image/mine/shoucangx@2x.png)';
                } else {
                    $api.dom('.collect_img').style.backgroundImage = 'url(../../image/mine/shoucang@2x.png)';
                }
                fnSetDisplay('.small_money_img', false);
                fnSetReplyPraiseNum();
            }
        });
    }

    function fnGetTDUUIDParams(params) {
        var visitorCode = api.readFile({
            sync: true,
            path: api.boxDir + '/visitorCode.txt'
        });
        if (fnIsEmpty(visitorCode)) {
            visitorCode = guid();
            api.writeFile({
                path : api.boxDir + '/visitorCode.txt',
                data : visitorCode
            }, function(ret, err) {
            });
        }
        if(params) {
            params.memberId = visitorCode;
        }else{
            return {
                memberId : visitorCode
            }
        }
        return params;
    }

    //从服务器获取话题详情
    //		function fnGetTopicDetails() {
    //			var params = {
    //				id : topicId
    //			};
    //			var token = api.readFile({
    //				sync : true,
    //				path : api.boxDir + '/token.txt'
    //			});
    //			if (!fnIsEmpty(token) && token.indexOf('#') == -1 || fnIsEmpty(token)) {
    //				params = fnGetTDUUIDParams(params);
    //			}
    //			$service.get('story/info.ajax', params, function(ret, err) {
    //				if (ret && ret.ok == 1) {
    //					fnLog(ret.data)
    //					//设置默认封面
    //					if (ret.data == null) {
    //						api.openFrame({
    //							name : 'is_delete_frame',
    //							url : '../popup/is_delete_frame.html',
    //							bgColor : 'rgba(0,0,0,0)'
    //						});
    //						return;
    //					}
    //					if ( typeof ret.data.recruitId != "undefined") {
    //						// 获取征集详情
    //						recruitId = ret.data.recruitId;
    //						loadCollectData(ret.data.recruitId);
    //					}
    //					if (fnIsEmpty(ret.data.mainImg)) {
    //						ret.data.mainImg = '../../image/tmp.jpg';
    //					}
    //					//设置默认用户名
    //					if (fnIsEmpty(ret.data.userName)) {
    //						ret.data.userName = ret.data.userCode;
    //					}
    //					ret.data.userName = ret.data.userName.substring(0, 10) + '...';
    //					fnSetHeaderUserInfo(ret.data);
    //					//格式化话题发布时间
    //					ret.data.releaseTime = formatDateTime(ret.data.updateTime);
    //					//初始化话题详情数据
    //					topicDetailsVue.topicDetails = ret.data;
    //					shareVue.shareInfo = ret.data;
    //					isCanShare = true;
    //					var isImgs = fnGetStoryImgs(topicDetailsVue.topicDetails);
    //					if (isImgs) {//如果图片列表有值，则初始化图片轮播图
    //						fnSetDisplay('.img_back_btn', true);
    //						fnSetDisplay('.img_more_btn', true);
    //						fnSetDisplay('.img_index_div', true);
    //						setTimeout(function() {
    //							fnInitSwiper();
    //						}, 500);
    //					} else {
    //						if (swiper) {
    //							swiper.destroy(true, true);
    //						}
    //						fnSetDisplay('.img_back_btn', false);
    //						fnSetDisplay('.img_more_btn', false);
    //						fnSetDisplay('.img_index_div', false);
    //						var type = api.pageParam.type;
    //						if (type == 1) {//如果当前为简单图文，为简单图文布局加一个padding-top，并默认显示顶部标题
    //							fnSetDisplay('.header', false);
    //							$api.css($api.dom('.imgs_txt_div'), 'padding-top:' + 0 + 'px');
    //							noImgs = true;//TODO
    //						}
    //					}
    //					fnGetComments();
    //					if (!fnIsEmpty(topicDetailsVue.topicDetails.productId)) {//如果关联商品不为空，从服务器获取关联商品
    //						fnGetGoods();
    //					}
    //					if (api.pageParam.type == 3) {//如果话题详情类型为视频
    //						if (!fnIsEmpty(topicDetailsVue.topicDetails.mainImg)) {//设置默认封面图片
    //							fnSetBackgroundUrl('.video_corver_img', topicDetailsVue.topicDetails.mainImg);
    //						}
    //						if (!videoPlayer) {
    //							fnNewPlayer();
    //						}
    //						//初始化视频播放器
    //					}
    //					if (storageUserId == topicDetailsVue.topicDetails.userCode) {
    //						var followImgs = $api.domAll('.follow_img');
    //						for (var i = 0; i < followImgs.length; i++) {
    //							followImgs[i].style.display = 'none';
    //						}
    //						followImgs = $api.domAll('.info_follow_img');
    //						for (var i = 0; i < followImgs.length; i++) {
    //							followImgs[i].style.display = 'none';
    //						}
    //					}
    //					if (topicDetailsVue.topicDetails.praiseNumber > 0) {//如果点赞数大于0，显示点赞数布局
    //						fnSetDisplay('.praise_num', true);
    //						var praiseNum;
    //						if (topicDetailsVue.topicDetails.praiseNumber > 10000) {
    //							praiseNum = (topicDetailsVue.topicDetails.praiseNumber / 10000).toFixed(1) + 'w';
    //						} else {
    //							praiseNum = topicDetailsVue.topicDetails.praiseNumber;
    //						}
    //						fnSetTxt('.praise_num', praiseNum);
    //					}
    //					if (topicDetailsVue.topicDetails.isPraise == 0) {
    //						fnSetImgSrc('.praise_img', '../../image/mine/zan.png');
    //					} else {
    //						fnSetImgSrc('.praise_img', '../../image/mine/zans.png');
    //					}
    //					if (topicDetailsVue.topicDetails.isCollection == 0) {//设置收藏标识
    //						$api.dom('.collect_img').style.backgroundImage = 'url(../../image/mine/shoucang@2x.png)';
    //					} else {
    //						$api.dom('.collect_img').style.backgroundImage = 'url(../../image/mine/shoucangx@2x.png)';
    //					}
    //					fnGetRelativeTopic();
    //					//获取打赏列表
    //					fnRefreshReward();
    //					fnSetReplyPraiseNum();
    //				} else {
    //				}
    //			});
    //		}

    // 获取征集
    function loadCollectData(recruitId) {
        $service.get('recruit/queryRecruitByStoryId.ajax', {
            id : topicId
        }, function(ret, err) {
            if (ret) {
                if (ret.ok == 1) {
                    if (ret.data != null) {
                        if (type == 3) {
                            $api.byId('recruit').style.marginTop = '214px';
                            $api.byId('video_play_title').style.marginTop = '4px';
                        }
                        if (type == 1 && noImgs) {
                            if($api.byId('recruitType1')){
                                $api.byId('recruitType1').style.display = 'block';
                            }
                        }
                        if(type == 1){
                            if($api.dom('.swiper-container') && $api.dom('.swiper-container .swiper-slide')){
                                $api.dom('.swiper-container').style.marginBottom = '0px';
                                // $api.dom('.swiper-container .swiper-slide').style.background = '#CCC';
                            }
                        }
                        $api.css($api.domAll('.recruit_ing')[0], 'display:block');
                        $api.css($api.domAll('.recruit_ing')[1], 'display:block');
                        $api.css($api.domAll('.recruit_ing')[2], 'display:block');
                        $api.text($api.domAll('.recruitTitle')[0], '《' + ret.data.recruitName + '》');
                        $api.text($api.domAll('.recruitTitle')[1], '《' + ret.data.recruitName + '》');
                        $api.text($api.domAll('.recruitTitle')[2], '《' + ret.data.recruitName + '》');
                        if (ret.data.recruitStatus == 2) {
                            if (ret.data.rank) {
                                $api.css($api.domAll('.recruit_rank')[0], 'display:block');
                                $api.css($api.domAll('.recruit_rank')[1], 'display:block');
                                $api.css($api.domAll('.recruit_rank')[2], 'display:block');
                                $api.text($api.domAll('.recruit_rank')[0], ret.data.rank + '名');
                                $api.text($api.domAll('.recruit_rank')[1], ret.data.rank + '名');
                                $api.text($api.domAll('.recruit_rank')[2], ret.data.rank + '名');
                            }
                            if (ret.data.winnerFlag == 1) {
                                $api.css($api.domAll('.imgs')[0], 'display:block;');
                                $api.css($api.domAll('.imgs')[1], 'display:block;');
                                $api.css($api.domAll('.imgs')[2], 'display:block;');
                                $api.css($api.domAll('.recruit_rank')[0], 'margin-left:20px');
                                $api.css($api.domAll('.recruit_rank')[1], 'margin-left:20px');
                                $api.css($api.domAll('.recruit_rank')[2], 'margin-left:20px');
                                $api.css($api.domAll('.recruit_title')[0], 'width:200px');
                                $api.css($api.domAll('.recruit_title')[1], 'width:200px');
                                $api.css($api.domAll('.recruit_title')[2], 'width:200px');
                                if (!ret.data.rank) {
                                    $api.css($api.domAll('.recruit_title')[0], 'margin-left:20px;');
                                    $api.css($api.domAll('.recruit_title')[1], 'margin-left:20px;');
                                    $api.css($api.domAll('.recruit_title')[2], 'margin-left:20px;');
                                }
                            }
                            $api.css($api.domAll('.recruit_ing')[0], 'background-image: url(../../image/zjjs@2x.png)');
                            $api.css($api.domAll('.recruit_ing')[1], 'background-image: url(../../image/zjjs@2x.png)');
                            $api.css($api.domAll('.recruit_ing')[2], 'background-image: url(../../image/zjjs@2x.png)');
                            $api.text($api.domAll('.status')[0], '已结束');
                            $api.text($api.domAll('.status')[1], '已结束');
                            $api.text($api.domAll('.status')[2], '已结束');
                        }
                    }
                }
            } else {
            }
        }, true)
    }

    function fnCircleDetail() {
//			fnOpenWin("collect_detail2", '../collect/', {
//				id : recruitId
//			})
        api.setFullScreen({
            fullScreen : false
        });
        api.openWin({
            name : 'collect_detail2' + new Date().getTime(),
            url : '../collect/collect_detail2.html',
            pageParam : {
                id : recruitId
            },
            slidBackEnabled : false,
            allowEdit : true
        });
    }

    function fnCloseAllReply() {
        api.setFrameAttr({
            name: 'topic_details_frm1',
            hidden: false
        });
        setTimeout(function() {
            fnSetDisplay('.collect_img', true);
            fnSetFlex('.input_operations', true);
            uploadImgVue.list = [{}];
            replyVue.replysList = [];
            replyVue.isNoMore = false;
            replyVue.isReply = false;
            fnSetDisplay('.reply_div', false);
            fnSetDisplay('.small_money_img', true);
            fnResetInput();
            $api.dom('.comment_input').value = '';
            $api.dom('.comment_input').style.height = '32px';
            fnScrollBack();
            //          fnSetTopicPraiseNum();
        }, 100);
    }

    function fnSetTopicPraiseNum() {
        if (topicDetailsVue.topicDetails.praiseNumber > 0) {//如果点赞数大于0，显示点赞数布局
            fnSetDisplay('.praise_num', true);
            fnSetTxt('.praise_num', topicDetailsVue.topicDetails.praiseNumber);
        } else {
            fnSetDisplay('.praise_num', false);
            fnSetImgSrc('.praise_img', '../../image/mine/zan.png');
        }
        if (topicDetailsVue.topicDetails.commentPraiseFlag == 0) {
            fnSetImgSrc('.praise_img', '../../image/mine/zan.png');
        } else {
            fnSetImgSrc('.praise_img', '../../image/mine/zans.png');
        }
    }

    function fnSetReplyPraiseNum() {
        if (replyVue.isReply) {
            if (replyVue.comment.praiseNumber > 0) {//如果点赞数大于0，显示点赞数布局
                fnSetDisplay('.praise_num', true);
                fnSetTxt('.praise_num', replyVue.comment.praiseNumber);
            } else {
                fnSetDisplay('.praise_num', false);
                fnSetTxt('.praise_num', replyVue.comment.praiseNumber);
            }
            if (replyVue.comment.commentPraiseFlag == 0) {
                fnSetImgSrc('.praise_img', '../../image/mine/zan.png');
            } else {
                fnSetImgSrc('.praise_img', '../../image/mine/zans.png');
            }
        }
    }

    var replyIndex = 1;
    function fnGetAllReply(id) {
        $service.get('comment/getStoryComment.ajax', {
            pageIndex : replyIndex,
            pageSize : 5,
            storyId : topicId,
            commentId : id
        }, function(ret, err) {
            if (ret) {
                if (ret.ok == 1) {
                    if (ret.data && ret.data.length > 0) {
                        replyVue.isNoMore = false;
                    } else {
                        replyVue.isNoMore = true;
                    }
                    if (replyIndex == 1) {
                        replyVue.replysList = [];
                        replyVue.isNoMore = false;
                    }
                    fnSetTxt('.top_reply_num', ret.data.count);
                    fnAppendCommentData(replyVue.replysList, ret.data.list);
                }
            }
        }, true);
    }

    //解析话题图片数组
    function fnGetStoryImgs(data) {
        if (!fnIsEmpty(data.storyImgs)) {
            data.storyImgs = data.storyImgs.split(",");
            var lengths = data.storyImgs.length;
            if (data.storyImgs[lengths - 1] == '') {
                data.storyImgs.splice(-1);
            }
            return true;
        } else {
            data.storyImgs = [];
            return false;
        }
    }

    var swiper;
    var currentIndex = 0;
    //初始化简单图文图片轮播图
    function fnInitSwiper() {
        swiper = new Swiper('.swiper-container', {
            initialSlide : 0,
            autoHeight : true,
            on : {
                slideChangeTransitionStart : function() {
                    currentIndex = this.activeIndex;
                    var showIndex = this.activeIndex + 1;
                    $api.text($api.dom('.img_index'), showIndex);
                },
                tap: function(event){
                    api.openWin({
                        name: 'preview_picture',
                        url: 'preview_picture.html',
                        pageParam : {
                            urlArr : topicDetailsVue.topicDetails.storyImgs,
                            activeIndex : this.activeIndex
                        }
                    });
                }
            }
        });
        $api.text($api.dom('.img_index'), 1);
        var num = topicDetailsVue.topicDetails.storyImgs.length;
        $api.text($api.dom('.total'), num);
    }

    //初始化评论表情轮播布局
    var expressionsSwiper;
    function fnInitExpressionSwiper() {
        expressionsSwiper = new Swiper('.expression_swiper', {
            pagination : {
                el : '.swiper-pagination',
                renderBullet : function(index, className) {
                    return '<span class="' + className + '"></span>';
                }
            }
        });
    }

    //获取关联商品列表
    function fnGetGoods() {
        // $service.get('story/getProductsDetailList.ajax', {
        // 	productId : topicDetailsVue.topicDetails.productId
        // }, function(ret, err) {
        // 	if (ret) {
        // 		if (ret.ok == 1) {
        // 			var productStr = topicDetailsVue.topicDetails.productId;
        // 			var productArr = productStr.split(",");
        // 			var productList = [];
        // 			for (var i = 0; i < ret.data.length; i++) {
        // 				for (var j = 0; j < productArr.length; j++) {
        // 					if (productArr[j] == ret.data[i].sku) {
        // 						productList.push(ret.data[i])
        // 					}
        // 				}
        // 			}
        // 			topicDetailsVue.productList = productList;
        // 		}
        // 	}
        // }, true);
        $service.get(HOST_PRODUCT+'/v3/h5/item/price.json', {
            skuStr : topicDetailsVue.topicDetails.productId
        }, function(ret, err) {
            if (ret) {
                if (ret.success) {
                    var productStr = topicDetailsVue.topicDetails.productId;
                    var productArr = productStr.split(",");
                    var productList = [];
                    for (var i = 0; i < ret.data.length; i++) {
                        for (var j = 0; j < productArr.length; j++) {
                            if (productArr[j] == ret.data[i].sku) {
                                productList.push(ret.data[i])
                            }
                        }
                    }
                    topicDetailsVue.productList = productList;
                }
            }
        }, true);
    }
    var commentsPageSize = 8;
    //获取评论列表
    function fnGetComments(isLoadMore) {
        var url = 'comment/getStoryComment.ajax';
        if (type == 4) {
            url = 'schoolstory/getStoryComments.ajax';
        }
        $service.get(url, {
            pageIndex : commentsPageIndex,
            pageSize : commentsPageSize,
            storyId : topicId
        }, function(ret, err) {
            if (ret) {
                if (ret.ok == 1) {
                    if(!isLoadMore){
                     commentsVue.commentsList = [];
                    }
                    if(ret.data.count > commentsPageIndex * commentsPageSize){
                        commentsVue.hasMoreComments = true;
                    }else{
                        commentsVue.hasMoreComments = false;

                    }
                    if (type == 4) {
                        if (ret.data.list.length < 8) {
                            commentsVue.commentIsNoMore = true;
                        }
                        fnSetTxt('.comment_num', ret.data.totalCount);
                        if (ret.data.list && ret.data.list.length > 0) {
                            fnAppendCommentData(commentsVue.commentsList, ret.data.list);
                        } else {
                            if (isLoadMore) {
                                commentsVue.commentIsNoMore = true;
                                // fnSetDisplay('.tips-no-more',true);
                                fnToast("没有更多");
                            }
                        }
                        fnIsShowComments(ret.data.totalCount);
                    } else {

                        if (ret.data.list.length < 8) {
                            commentsVue.commentIsNoMore = true;
                        }
                        fnSetTxt('.comment_num', ret.data.count);
                        if (ret.data.list && ret.data.list.length > 0) {
                            fnAppendCommentData(commentsVue.commentsList, ret.data.list);
                        } else {
                            if (isLoadMore) {
                                // alert(pageIndex);
                                commentsVue.commentIsNoMore = true;
                                // fnSetDisplay('.tips-no-more',true);
                                fnToast("没有更多");
                            }
                        }
                        fnIsShowComments(ret.data.count);
                    }
                }
            }
        }, true);
    }

    function fnIsShowComments(length) {
        if (length > 0) {//如果评论数大于0，显示评论列表布局
            fnSetDisplay('.comment_div', true);
            fnSetDisplay('.no_comment_div', false);
            if (length > 3) {
                fnSetDisplay('.comment_more', true);
            } else {
                fnSetDisplay('.comment_more', false);
            }
        }else {
            fnSetDisplay('.no_comment_div', true);
        }
    }

    function parseParamString(str) {
        return encodeURIComponent(JSON.stringify(str))
    }
    var interval;
    function clear() {
        clearInterval(interval)
    }
    //从服务器获取话题详情
    function fnGetTopicDetails() {
        var params = {
            id : topicId
        };
        var token = api.readFile({
            sync : true,
            path : api.boxDir + '/token.txt'
        });
        if (!fnIsEmpty(token) && token.indexOf('#') == -1 || fnIsEmpty(token)) {
            params = fnGetTDUUIDParams(params);
        }
        $service.get('story/info.ajax',params, function (ret, err) {
            if (ret && ret.ok == 1) {
                //设置默认封面
                if (ret.data == null) {
                    /* if(api.systemType == 'ios'){
                        $api.css($api.dom('.recommend_div'), 'margin-top:' + api.safeArea.top + 'px');
                    }*/
                    // fnSetDisplay('.recommend_div', false);
                    api.openFrame({
                        name: 'is_delete_frame',
                        url: '../popup/is_delete_frame.html',
                        bgColor: 'rgba(0,0,0,0)'
                    });
                    // api.openFrame({
                    //     name: 'xuqiubao_details',
                    //     url: '../xuqiubao/details.html',
                    //     pageParam: {
                    //         listId: params
                    //     },
                    //     slidBackEnabled:false,
                    //     bgColor: 'rgba(0,0,0,0)',
                    // });

                    return;
                }
                fnSetTopicType(ret.data.dataTypeNew);
                if (typeof ret.data.recruitId != "undefined") {
                    // 获取征集详情
                    recruitId = ret.data.recruitId;
                    loadCollectData(ret.data.recruitId);
                }
                if (fnIsEmpty(ret.data.mainImg)) {
                    ret.data.mainImg = '../../image/tmp.jpg';
                }
                //设置默认用户名
                if (fnIsEmpty(ret.data.userName)) {
                    ret.data.userName = ret.data.userCode;
                }
                if(ret.data.userName.length > 10){
                    ret.data.userName = ret.data.userName.substring(0, 10) + '...';
                }
                //跟登录的用户id一样
                if(ret.data.userCode == storageUserId){
                    topicDetailsVue.showFollow = false;
                }
                // fnSetHeaderUserInfo(ret.data);
                interval = setInterval(function () {
                    api.execScript({
                        name: api.winName,
                        frameName:'topic_details_frm1',
                        script : 'fnSetHeaderUserInfo(\''+parseParamString(ret.data)+'\');'
                    });
                },300);

                //格式化话题发布时间
                ret.data.releaseTime = formatDateTime(ret.data.updateTime);
                //初始化话题详情数据
                // ret.data.storyContent = "<div contenteditable=\"true\" placeholder=\"\" style=\"-webkit-user-select:text;min-height:20px;\" class=\"ppp\"><div class=\"publishCimg ppp\" contenteditable=\"true\" style=\"-webkit-user-select:text;min-height:20px;\" placeholder=\"\"><br><div class=\"publishCimg ppp\" style=\"-webkit-user-select:text;min-height:20px;\" placeholder=\"\" contenteditable=\"true\">比起颜值，厨房吊顶更重要的是材料和性能！</div><div class=\"publishCimg ppp\" style=\"-webkit-user-select:text;min-height:20px;\" placeholder=\"\" contenteditable=\"true\">比起装修风格和美观样式，厨房吊顶材料选择才是关键！</div><div class=\"publishCimg ppp\" style=\"-webkit-user-select:text;min-height:20px;\" placeholder=\"\" contenteditable=\"true\">吊顶材料选对了，厨房装修就成功的了一大半！</div><div class=\"publishCimg ppp\" style=\"-webkit-user-select:text;min-height:20px;\" placeholder=\"\" contenteditable=\"true\"><div class=\"publishCimg ppp\" contenteditable=\"true\" style=\"-webkit-user-select:text;min-height:20px;\" placeholder=\"\"><a contenteditable=\"false\" style=\"\" class=\"\"><div class=\"imgHeight\" style=\"background-image: url(http://cdn21.ehaier.com/file/5b3206d125114bc44db14331.png);\"><img contenteditable=\"false\" class=\"setImg\" src=\"http://cdn21.ehaier.com/file/5b3206d125114bc44db14331.png\"><span class=\"ImgPicTop\">封面</span></div></a><div contenteditable=\"true\" style=\"-webkit-user-select:text;min-height:20px;\" class=\"ppp\" placeholder=\"\"><br></div></div><br></div><div class=\"publishCimg ppp\" style=\"-webkit-user-select:text;min-height:20px;\" placeholder=\"\" contenteditable=\"true\">说到装修吊顶，人们通常在意的是造型美观和风格样式，而在日常使用中，吊顶装饰不仅有美化室内空间的左右，吊顶的安全和功能性也同样重要，尤其是厨房和卫生间的吊顶。</div><div class=\"publishCimg ppp\" style=\"-webkit-user-select:text;min-height:20px;\" placeholder=\"\" contenteditable=\"true\"><div contenteditable=\"true\" style=\"-webkit-user-select:text;min-height:20px;\" class=\"ppp\"><a contenteditable=\"false\" style=\"\" class=\"\"><div class=\"imgHeight\" style=\"position:relative;width:280px;height:120px;overflow:hidden;margin-top:5px;background-image: url(http://cdn22.ehaier.com/file/5b320ac8bc49dfaa57d4281a.png);background-position:center;background-size:280px auto;\"><img contenteditable=\"false\" class=\"setImg\" src=\"http://cdn22.ehaier.com/file/5b320ac8bc49dfaa57d4281a.png\" style=\"display:none;width:280px;min-height:120px;\"><span style=\"position:absolute;top:1px;right:1px;display:none;color:#fff;width:60px;height:30px;text-align:center;font-size:16px;line-height:30px;background:#000;opacity:0.6;\">封面</span></div></a><div contenteditable=\"true\" style=\"-webkit-user-select:text;min-height:20px;\" class=\"ppp\"><br></div></div><div contenteditable=\"true\" style=\"-webkit-user-select:text;min-height:20px;\" class=\"ppp\"><a contenteditable=\"false\" style=\"\"><div class=\"imgHeight\" style=\"position:relative;width:280px;height:120px;overflow:hidden;margin-top:5px;background-image: url(http://cdn21.ehaier.com/file/5b320ac9c6f01922c74022ae.png);background-position:center;background-size:280px auto;\"><img contenteditable=\"false\" class=\"setImg\" src=\"http://cdn21.ehaier.com/file/5b320ac9c6f01922c74022ae.png\" style=\"display:none;width:280px;min-height:120px;\"><span style=\"position:absolute;top:1px;right:1px;display:none;color:#fff;width:60px;height:30px;text-align:center;font-size:16px;line-height:30px;background:#000;opacity:0.6;\">封面</span></div></a><div contenteditable=\"true\" style=\"-webkit-user-select:text;min-height:20px;\" class=\"ppp\"><br></div></div><div contenteditable=\"true\" style=\"-webkit-user-select:text;min-height:20px;\" class=\"ppp\"><div contenteditable=\"true\" style=\"-webkit-user-select:text;min-height:20px;\" class=\"ppp\"><div contenteditable=\"true\" style=\"-webkit-user-select:text;min-height:20px;\" class=\"ppp\"><a contenteditable=\"false\" style=\"\"><div class=\"imgHeight\" style=\"position:relative;width:280px;height:120px;overflow:hidden;margin-top:5px;background-image: url(http://cdn22.ehaier.com/file/5b320addbc49dfaa57d4281d.png);background-position:center;background-size:280px auto;\"><img contenteditable=\"false\" class=\"setImg\" src=\"http://cdn22.ehaier.com/file/5b320addbc49dfaa57d4281d.png\" style=\"display:none;width:280px;min-height:120px;\"><span style=\"position:absolute;top:1px;right:1px;display:none;color:#fff;width:60px;height:30px;text-align:center;font-size:16px;line-height:30px;background:#000;opacity:0.6;\">封面</span></div></a><div contenteditable=\"true\" style=\"-webkit-user-select:text;min-height:20px;\" class=\"ppp\"><br></div></div></div></div></div><div class=\"publishCimg ppp\" style=\"-webkit-user-select:text;min-height:20px;\" placeholder=\"\" contenteditable=\"true\"><div class=\"publishCimg ppp\" contenteditable=\"true\" style=\"-webkit-user-select:text;min-height:20px;\"><div contenteditable=\"true\" style=\"-webkit-user-select:text;min-height:20px;\" class=\"ppp\"><div contenteditable=\"true\" style=\"-webkit-user-select:text;min-height:20px;\" class=\"ppp\"><a contenteditable=\"false\" style=\"\" class=\"\"><div class=\"imgHeight\" style=\"position:relative;width:280px;height:120px;overflow:hidden;margin-top:5px;background-image: url(http://cdn21.ehaier.com/file/5b320962c6f01922c7402290.png);background-position:center;background-size:280px auto;\"><img contenteditable=\"false\" class=\"setImg\" src=\"http://cdn21.ehaier.com/file/5b320962c6f01922c7402290.png\" style=\"display:none;width:280px;min-height:120px;\"><span style=\"position:absolute;top:1px;right:1px;display:none;color:#fff;width:60px;height:30px;text-align:center;font-size:16px;line-height:30px;background:#000;opacity:0.6;\">封面</span></div></a><div contenteditable=\"true\" style=\"-webkit-user-select:text;min-height:20px;\" class=\"ppp\"><br></div></div><br></div></div><br></div></div></div>"
                var rich_txt  = JSON.stringify(ret.data);
                rich_txt = rich_txt.replace(/封面/g,'');
                topicDetailsVue.topicDetails = JSON.parse(rich_txt);
                userTopicId = ret.data.topicId;
                if(userTopicId == '662' || userTopicId == '665'){
                    $api.css($api.dom('.backToH5'), "display:block");
                }else {
                    $api.css($api.dom('.backToH5'), "display:none");
                }
                shareVue.shareInfo = ret.data;
                shareInfo = ret.data;
                isCanShare = true;
                var isImgs = fnGetStoryImgs(topicDetailsVue.topicDetails);
                if (isImgs) {//如果图片列表有值，则初始化图片轮播图
                    // fnSetDisplay('.img_back_btn', false);
                    // fnSetDisplay('.img_more_btn', false);
                    // fnSetDisplay('.img_index_div', true);
                    // setTimeout(function () {
                    //     if(swiper) {
                    //         swiper.destroy(true, true);
                    //     }
                    //     fnInitSwiper();
                    // }, 500);
                    topicDetailsVue.imgNum = topicDetailsVue.topicDetails.storyImgs.length;
                    if(topicDetailsVue.imgNum == 1){
                        topicDetailsVue.imgListClassName = "imgItem1";
                    }else if(topicDetailsVue.imgNum == 2 || topicDetailsVue.imgNum == 4){
                        topicDetailsVue.imgListClassName = "imgItem2";
                    }else{
                        topicDetailsVue.imgListClassName = "imgItem3"
                    }
                } else {//如果没值
                    // if(swiper) {
                    //     swiper.destroy(true, true);
                    // }
                    // fnSetDisplay('.img_back_btn', false);
                    // fnSetDisplay('.img_more_btn', false);
                    // fnSetDisplay('.img_index_div', false);
                    var type = ret.data.dataTypeNew;
                    if (type == 1) {//如果当前为简单图文，为简单图文布局加一个padding-top，并默认显示顶部标题
                        // fnSetDisplay('.header', true);
                        noImgs = true;
                        // if(api.systemType == 'android'){
                        //     $api.css($api.dom('.imgs_txt_div'), 'padding-top:' + 40 + 'px');
                        // }else{
                        //     $api.css($api.dom('.imgs_txt_div'), 'padding-top:' + ( api.safeArea.top + 40 )+ 'px');
                        // }
                    }
                }

                fnGetComments();
                if (!fnIsEmpty(topicDetailsVue.topicDetails.productId)) {//如果关联商品不为空，从服务器获取关联商品
                    fnGetGoods();
                }else{
                    topicDetailsVue.productList = [];
                }
                if (ret.data.dataTypeNew == 3) {//如果话题详情类型为视频
                    $api.css($api.dom('.video_txt_div'), 'padding-top:' + 0 + 'px');
                    if (!fnIsEmpty(topicDetailsVue.topicDetails.mainImg)) {//设置默认封面图片
                        fnSetBackgroundUrl('.video_corver_img', topicDetailsVue.topicDetails.mediaInfo[0].url+'?x-oss-process=video/snapshot,t_3000,f_jpg');
                    }
                    if(!videoPlayer) {
                        fnNewPlayer();
                    }
                    //初始化视频播放器
                }
                if (storageUserId == topicDetailsVue.topicDetails.userCode) {
                    var followImgs = $api.domAll('.follow_img');
                    for (var i = 0; i < followImgs.length; i++) {
                        followImgs[i].style.display = 'none';
                    }
                    followImgs = $api.domAll('.info_follow_img');
                    for (var i = 0; i < followImgs.length; i++) {
                        followImgs[i].style.display = 'none';
                    }
                }
                if (topicDetailsVue.topicDetails.praiseNumber > 0) {//如果点赞数大于0，显示点赞数布局
                    fnSetDisplay('.praise_num', true);
                    var praiseNum;
                    if (topicDetailsVue.topicDetails.praiseNumber > 10000) {
                        praiseNum = (topicDetailsVue.topicDetails.praiseNumber / 10000).toFixed(1) + 'w';
                    } else {
                        praiseNum = topicDetailsVue.topicDetails.praiseNumber;
                    }
                    fnSetTxt('.praise_num', praiseNum);
                }
                if (topicDetailsVue.topicDetails.isPraise == 1) {
                    fnSetImgSrc('.praise_img', '../../image/mine/zans.png');
                } else {
                    fnSetImgSrc('.praise_img', '../../image/mine/zan.png');
                }
                if (topicDetailsVue.topicDetails.isCollection == 1) {//设置收藏标识
                    $api.dom('.collect_img').style.backgroundImage = 'url(../../image/mine/shoucangx@2x.png)';
                } else {
                    $api.dom('.collect_img').style.backgroundImage = 'url(../../image/mine/shoucang@2x.png)';
                }
                // fnGetRelativeTopic();
                //获取打赏列表
                fnRefreshReward();
                fnSetReplyPraiseNum();
            } else {
            }
        },false,false,false,api.winName);
    }

    //为获取到的评论列表数据解析评论图片列表
    function fnAppendCommentData(oldArr, data) {
        for (var i = 0; i < data.length; i++) {
            if (!fnIsEmpty(data[i].commentImgs)) {
                data[i].commentImgs = data[i].commentImgs.split(",");
            }
            if (fnIsEmpty(data[i].userImg)) {
                data[i].userImg = '../../image/home/tmp_default_header.png';
            }
            if (type == 4) {
                data[i].commentPraiseFlag = data[i].commentPraiseNumberFlag;
            }
            if (!fnIsEmpty(data[i].userName)) {
                if (data[i].userName.length > 10) {
                    data[i].userName = data[i].userName.substring(0, 10) + '...';
                }
            }
            if (!fnIsEmpty(data[i].userName)) {
                if (data[i].userName.length > 10) {
                    data[i].userName = data[i].userName.substring(0, 10) + '...';
                }
            }
            oldArr.push(data[i]);
        }
        return oldArr;
    }


    var noMoreData = false;
    //获取相关话题列表
//     function fnGetRelativeTopic(isLoadMore, isRefresh) {
//         $service.get('story/getStoryIndexByCondition.ajax', {
//             searchType : 4,
//             pageIndex : pageIndex,
//             pageSize : 10,
//             storyId : topicId,
//             tagIds : topicDetailsVue.topicDetails.tagIds,
//             dataTypeNew : topicDetailsVue.topicDetails.dataTypeNew
//         }, function(ret, err) {
//             api.refreshHeaderLoadDone();
//             if (ret) {
//                 if (ret.data.list && ret.data.list.length > 0) {
//                     if (isRefresh) {
//                         topicVue.relativeTopicList = [];
//                     }
//                     fnAppendTopicData(topicVue.relativeTopicList, ret.data.list);
//                 } else {
//                     if (isLoadMore) {
//                         noMoreData = true;
//                         fnSetDisplay('.tips-no-more',true);
//                         fnToast("没有更多");
//                     } else {
// //							fnSetDisplay('.no_recommend_space', true);
// //                         fnSetDisplay('.recommend_div', false);
//                     }
//                 }
//             } else {
//                 fnToast(err.msg);
//             }
//         }, true, true)
//     }

    //为话题列表初始化数据
    function fnAppendTopicData(oldArr, data) {
        for (var i = 0; i < data.length; i++) {
            if (!fnIsEmpty(data[i].storyImgs)) {
                data[i].storyImgs = data[i].storyImgs.split(",");
                var lengths = data[i].storyImgs.length;
                if (data[i].storyImgs[lengths - 1] == '') {
                    data[i].storyImgs.splice(-1);
                }
            }
            if (fnIsEmpty(data[i].userHead)) {
                data[i].userHead = '../../image/home/tmp_default_header.png';
            }
            if (fnIsEmpty(data[i].userName)) {
                data[i].userName = data[i].userId;
            }
            if (!fnIsEmpty(data[i].userName)) {
                if (data[i].userName.length > 10) {
                    data[i].userName = data[i].userName.substring(0, 10) + '...';
                }
            }
            var ext;
            if (data[i].storyMediaList) {
                ext = data[i].storyMediaList[0].ext;
            }
            var duration = 0;
            if (ext) {
                duration = JSON.parse(ext).duration;
            }
            data[i].durationTime = fnDuration(duration);
            data[i].duration = data[i].durationTime;
            oldArr.push(data[i]);
        }
        return oldArr;
    }

    //当图片加载失败时，设置默认图片
    function fnImgError(el) {
        el.src = '../../image/home/tmp_default_header.png';
    }

    //点赞
    var isPrasing = false;
    function fnPraise(item, index) {
        if (isPrasing) {
            return;
        }
        isPrasing = true;
        $service.get('story/praiseStory.ajax', {
            storyId : item.id,
            userCode : item.userId
        }, function(ret, err) {
            isPrasing = false;
            if (ret) {
                if (ret.ok == 1) {
                    if (item.userPraiseFlag == 0) {
                        topicVue.$set(topicVue.$data.relativeTopicList[index], 'userPraiseFlag', 1);
                        topicVue.$set(topicVue.$data.relativeTopicList[index], 'praiseNumber', item.praiseNumber + 1);
                    } else {
                        topicVue.$set(topicVue.$data.relativeTopicList[index], 'userPraiseFlag', 0);
                        topicVue.$set(topicVue.$data.relativeTopicList[index], 'praiseNumber', item.praiseNumber - 1);
                    }
                } else {
                    if (ret.ok == 0) {
                        fnToast(ret.data.content, 'middle')
                    }
                }
            } else {
                fnToast(err.msg, 'middle')
            }
        }, true)
    }

    //评论点赞
    function fnPraiseComment(item, index) {
        var visitorCode = $api.getStorage("visitorCode");
        if (fnIsEmpty(visitorCode)) {
            visitorCode = guid();
            $api.setStorage('visitorCode', visitorCode);
        }
        var url = 'comment/setCommentPraise.ajax';
        var params = {
            commentId : item.id,
            action : item.commentPraiseFlag == 0 ? 1 : 0,
            userCode : item.userCode,
            visitorCode : visitorCode
        }
        if (type == 4) {
            url = 'schoolstory/schoolCommentParise.ajax';
            params = {
                commentId : item.id,
                action : item.commentPraiseNumberFlag == 0 ? 1 : 0
            }
        }
        $service.get(url, params, function(ret, err) {
            if (ret) {
                if (ret.ok == 1) {
                    if (type == 4) {
                        if (item.commentPraiseNumberFlag == 0) {
                            if (index || index == 0) {
                                commentsVue.$set(commentsVue.$data.commentsList[index], 'commentPraiseNumberFlag', 1);
                                commentsVue.$set(commentsVue.$data.commentsList[index], 'commentPraiseNumber', item.commentPraiseNumber + 1);
                            } else {
                                replyVue.$set(replyVue.$data.comment, 'commentPraiseNumberFlag', 1);
                                replyVue.$set(replyVue.$data.comment, 'commentPraiseNumber', item.commentPraiseNumber + 1);
                            }
                        } else {
                            if (index || index == 0) {
                                commentsVue.$set(commentsVue.$data.commentsList[index], 'commentPraiseNumberFlag', 0);
                                commentsVue.$set(commentsVue.$data.commentsList[index], 'commentPraiseNumber', item.commentPraiseNumber - 1);
                            } else {
                                replyVue.$set(replyVue.$data.comment, 'commentPraiseNumberFlag', 0);
                                replyVue.$set(replyVue.$data.comment, 'commentPraiseNumber', item.commentPraiseNumber - 1);
                            }
                        }
                    } else {
                        if (item.commentPraiseFlag == 0) {
                            if (index || index == 0) {
                                commentsVue.$set(commentsVue.$data.commentsList[index], 'commentPraiseFlag', 1);
                                commentsVue.$set(commentsVue.$data.commentsList[index], 'praiseNumber', item.praiseNumber + 1);
                            } else {
                                replyVue.$set(replyVue.$data.comment, 'commentPraiseFlag', 1);
                                replyVue.$set(replyVue.$data.comment, 'praiseNumber', item.praiseNumber + 1);
                            }
                        } else {
                            if (index || index == 0) {
                                commentsVue.$set(commentsVue.$data.commentsList[index], 'commentPraiseFlag', 0);
                                commentsVue.$set(commentsVue.$data.commentsList[index], 'praiseNumber', item.praiseNumber - 1);
                            } else {
                                replyVue.$set(replyVue.$data.comment, 'commentPraiseFlag', 0);
                                replyVue.$set(replyVue.$data.comment, 'praiseNumber', item.praiseNumber - 1);
                            }
                        }
                    }
                    // fnSetReplyPraiseNum();
                } else {
                    if (ret.ok == 0 && ret.data.content !== '需要登录') {
                        fnToast(ret.data.content, 'middle');
                    }
                }
            } else {
                fnToast(err.msg, 'middle')
            }
        }, true)
    }

    function fnInputPraise() {
        if (replyVue.isReply) {
            fnPraiseComment(replyVue.comment);
        } else {
            fnPraiseTopic();
        }
    }

    //话题详情点赞
    function fnPraiseTopic() {
        var url = 'story/praiseStory.ajax';
        var params = {
            storyId : topicDetailsVue.topicDetails.id,
            userCode : topicDetailsVue.topicDetails.userCode
        }
        if (type == 4) {
            url = 'schoolstory/setSchoolPraiseStory.ajax';
            params = {
                storyId : topicDetailsVue.topicDetails.id,
                action : topicDetailsVue.topicDetails.isPraise == 0 ? 1 : 0
            }
        }
        $service.get(url, params, function(ret, err) {
            if (ret) {
                if (ret.ok == 1) {
                    if (topicDetailsVue.topicDetails.isPraise == 0) {
                        //广播一个点赞成功事件
                        api.sendEvent({
                            name : 'topicLaudEvent',
                            extra : {
                                id : topicDetailsVue.topicDetails.id,
                                type : '1'//1点赞，-2取消
                            }
                        });
                        topicDetailsVue.topicDetails.isPraise = 1;
                        fnSetImgSrc('.praise_img', '../../image/mine/zans.png');
                        fnSetDisplay('.praise_num', true);
                        topicDetailsVue.topicDetails.praiseNumber++;
                        fnSetTxt('.praise_num', topicDetailsVue.topicDetails.praiseNumber);
                    } else {
                        // 广播取消点赞事件
                        api.sendEvent({
                            name : 'topicLaudEvent',
                            extra : {
                                id : topicDetailsVue.topicDetails.id,
                                type : '-1'//1点赞，-1取消
                            }
                        });
                        fnSetImgSrc('.praise_img', '../../image/mine/zan.png');
                        topicDetailsVue.topicDetails.isPraise = 0;
                        topicDetailsVue.topicDetails.praiseNumber--;
                        if (topicDetailsVue.topicDetails.praiseNumber == 0) {
                            fnSetDisplay('.praise_num', false);
                        }
                        fnSetTxt('.praise_num', topicDetailsVue.topicDetails.praiseNumber);
                    }
                } else {
                    fnToast(ret.data.content, 'middle');
                }
            } else {
                fnToast(err.msg, 'middle');
            }
        }, true);
    }

    //收藏当前话题详情
    function fnCollectTopic() {
        var url = 'story/collectStory.ajax';
        var params = {
            storyId : topicDetailsVue.topicDetails.id
        }
        if (type == 4) {
            url = 'schoolstory/setSchoolCollectionStory.ajax';
            params = {
                storyId : topicDetailsVue.topicDetails.id,
                action : topicDetailsVue.topicDetails.isCollection == 0 ? 1 : 0
            }
        }
        $service.get(url, params, function(ret, err) {
            if (ret) {
                if (ret.ok == 1) {
                    if (topicDetailsVue.topicDetails.isCollection == 0) {
                        topicDetailsVue.topicDetails.isCollection = 1;
                        fnToast('收藏成功', 'middle');
                        $api.dom('.collect_img').style.backgroundImage = 'url(../../image/mine/shoucangx@2x.png)';
                    } else {
                        $api.dom('.collect_img').style.backgroundImage = 'url(../../image/mine/shoucang@2x.png)';
                        topicDetailsVue.topicDetails.isCollection = 0;
                        fnToast('取消收藏成功', 'middle');
                    }
                } else {
                    if (ret.data.content == '需要登录') {
                        return;
                    }
                    fnToast(ret.data.content, 'middle');
                }
            } else {
                fnToast(err.msg, 'middle')
            }
        }, true);
    }

    //关闭打赏列表对话框
    function fnCloseRewardDialog(event) {
        setTimeout(function() {
            fnSetDisplay('.reward_div', false);
            $api.dom('.reward_custom_num_input').value = '';
            replyMoreOperationId = null;
            replyMoreOperationUserId = null;
        }, 300);
    }

    //确认打赏
    function fnConfirmReward(rewardNum) {
        var params;
        var url = 'story/tipStory.ajax';
        if (replyVue.isReply) {
            url = 'comment/tipComment.ajax';
            params = {
                amount : rewardNum,
                commentId : replyVue.comment.id,
                commentUserId : replyVue.comment.userCode
            }
        } else if (replyMoreOperationId) {
            fnLogStr(replyMoreOperationUserId + ' ' + storageUserId);
            if (replyMoreOperationUserId == storageUserId) {
                fnToast('您不能打赏自己的评论', 'middle');
                replyMoreOperationId = null;
                replyMoreOperationUserId = null;
                return;
            }
            url = 'comment/tipComment.ajax';
            params = {
                amount : rewardNum,
                commentId : replyMoreOperationId,
                commentUserId : replyMoreOperationUserId
            }
        } else {
            params = {
                amount : rewardNum,
                storyId : topicDetailsVue.topicDetails.id,
                userId : topicDetailsVue.topicDetails.userCode
            }
        }
        $service.get(url, params, function(ret, err) {
            api.execScript({
                frameName: 'topic_details_reward_frame',
                script: 'api.hideProgress()'
            });
            if (ret) {
                if (ret.ok == 1) {
                    fnToast('打赏成功');
                    replyMoreOperationId = null;
                    replyMoreOperationUserId = null;

                    api.closeFrame({
                        name: 'topic_details_reward_frame'
                    });
                    fnRefreshReward();
                } else {
                    if (ret.data.content == '需要登录') {
                        return;
                    }
                    fnToast(ret.data.content);
                }
            } else {
                fnToast(err.msg, 'middle')
            }
        }, true);
    }

    var canRewardNum = 0;
    //打开打赏选择列表
    function fnOpenMoneyFrame(event) {
        var token = api.readFile({
            sync : true,
            path : api.boxDir + '/token.txt'
        });
        if (token.indexOf('#') === -1) {
            api.writeFile({
                path : api.boxDir + '/userid.txt',
                data : ''
            });
            fnOpenLogin();
            return;
        }
        if (event) {
            fnCancelBubble(event);
            fnCloseReplyMoreOperation();
        }
        fnLogStr('replyMoreOperationUserId:' + replyMoreOperationUserId);
        if (replyVue.isReply) {
            if (replyId.indexOf('comment') == 0 && replyMoreOperationUserId == storageUserId) {
                fnToast('您不能打赏自己的评论', 'middle');
                replyMoreOperationId = null;
                replyMoreOperationUserId = null;
                return;
            }
            if (replyId.indexOf('reply') == 0 && replyMoreOperationUserId == storageUserId) {
                fnToast('您不能打赏自己的评论', 'middle');
                return;
            }
        } else if (replyMoreOperationUserId) {
            if (replyMoreOperationUserId == storageUserId) {
                fnToast('您不能打赏自己的评论', 'middle');
                replyMoreOperationId = null;
                replyMoreOperationUserId = null;
                return;
            }
        } else if (topicDetailsVue.topicDetails.userCode == storageUserId) {
            fnToast('您不能打赏自己的话题', 'middle');
            return;
        }
        api.readFile({
            path : api.boxDir + '/userType.txt',
        }, function(ret, err) {
            if (ret.data == 1) {
                api.openFrame({
                    name : 'upgrade',
                    url : '../popup/upgrade.html',
                    rect : {
                        x : 0,
                        y : 0,
                        w : 'auto',
                        h : 'auto'
                    },
                    bgColor : 'rgba(0,0,0,0)'
                });
            } else {
                $service.get('user/getConsumeCreditNum.ajax', null, function(ret, err) {
                    if (ret) {
                        if (ret.ok == 1) {
                            // $api.dom('.reward_custom_num_input').setAttribute("placeholder", '您可打赏币数为' + ret.data);
                            canRewardNum = ret.data;
                            // fnSetDisplay('.reward_div', true);
                            api.openFrame({
                                name: 'topic_details_reward_frame',
                                url: 'topic_details_reward_frame.html?v=' + new Date().getTime(),
                                rect: {
                                    x: 0,
                                    y: 0,
                                    w: api.winWidth,
                                    h: api.winHeight
                                },
                                softInputMode:'pan',
                                pageParam: {
                                    commentId:replyVue.comment.id,
                                    commentUserCode:replyVue.comment.userCode,
                                    replyMoreOperationUserId:replyMoreOperationUserId,
                                    replyMoreOperationId:replyMoreOperationId,
                                    topicDetailsId:topicDetailsVue.topicDetails.id,
                                    topicDetailsUserCode:topicDetailsVue.topicDetails.userCode,
                                    canRewardNum:canRewardNum,
                                    isReply:replyVue.isReply,
                                    frameName:api.frameName
                                },
                                bounces: false,
                                softInputDismissMode:['tap','drag']
                            });
                        } else {
                            fnToast(ret.data.content,'middle');
                        }
                    } else {
                        fnToast(err.msg, 'middle')
                    }
                }, true);
            }
        });
    }

    //打赏后获取打赏列表，显示打赏相关布局
    function fnRefreshReward() {
        $service.get('story/getTipList.ajax', {
            storyId : topicDetailsVue.topicDetails.id,
            pageIndex : 1,
            pageSize : 3,
            type : 1
        }, function(ret, err) {
            if (ret) {
                if (ret.ok == 1) {
                    if (ret.data.count > 0) {
                        topicDetailsVue.$set(topicDetailsVue.$data.topicDetails, 'tipNumber', ret.data.count);
                        topicDetailsVue.$set(topicDetailsVue.$data.topicDetails, 'tipAmount', ret.data.sumAmount);
                        var tipList = ret.data.list;
                        setTimeout(function() {
                            for (var i = 0; i < tipList.length; i++) {
                                fnSetDisplay('.reward_user_img_' + (i + 1), true);
                                fnSetImgSrc('.reward_user_img_' + (i + 1), tipList[i].userImg);
                            }
                        }, 500);
                    }
                } else {
                }
            } else {
                fnToast(err.msg, 'middle')
            }
        }, true);
        api.closeFrame({
            name : 'select_golds_pop',
        });
    }

    function fnOpenLogin() {
        api.sendEvent({
            name : 'APICloudCallNaviteMethod',
            extra : {
                type : 1,
                canCallBack : 1,
                toPageName : 'Login'
            }
        });
        if (videoPlayer) {
            videoPlayer.pause();
        }
    }

    //打开分享操作列表
    function fnShare() {
        if (!isCanShare) {
            return;
        }
        var token = api.readFile({
            sync : true,
            path : api.boxDir + '/token.txt'
        });
        if (token.indexOf('#') === -1) {
            api.writeFile({
                path : api.boxDir + '/userid.txt',
                data : ''
            });
            fnOpenLogin();
            return;
        }else {
            api.openFrame({
                name: 'topic_detail_share_frame',
                url: 'topic_detail_share_frame.html',
                rect: {
                    x: 0,
                    y: 0,
                    w: 'auto',
                    h: 'auto'
                },
                pageParam: {
                    shareInfo:shareInfo,
                    type:type,
                    frameName:api.frameName
                },
                reload:true,
                bounces: false
            });
            // fnSetDisplay('.share_div', true);
        }
    }

    //关闭分享操作列表
    function fnCloseShare() {
        $api.dom('.chat_div').style.position = 'fixed';
        $api.dom('.chat_div').style.bottom = '0';
        setTimeout(function() {
            fnSetDisplay('.share_div', false);
        }, 100);
    }
    function fnIsHide() {
        var isHidden = shareVue.shareInfo.isHidden;
        if (isHidden != 0) {
            var url = 'story/cancleHiddenStory.ajax';
            $service.get(url, {
                storyId : topicDetailsVue.topicDetails.id
            }, function(ret, err) {
                if (ret) {
                    if (ret.ok == 1) {
                        fnToast('取消隐藏成功');
                        shareVue.$set(shareVue.$data.shareInfo, 'isHidden', 0);
                        api.closeFrame({
                            name: 'topic_detail_share_frame'
                        });
                        // fnCloseShare();
                    } else {
                        if (ret.data.content === '需要登录') {
                            return;
                        }
                        fnToast(ret.data.content);
                    }
                } else {
                    fnToast(err.msg, 'middle');
                }
            });
        } else {
            api.openFrame({
                name : 'popup_frame',
                url : '../popup/popup_frame.html',
                rect : {
                    x : 0,
                    y : 0,
                    w : 'auto',
                    h : 'auto'
                },
                pageParam : {
                    refreshName:'refreshHide'
                },
                bgColor : 'rgba(0,0,0,0)',
                bounces : false
            });
        }
    }
    //隐藏话题切换
    function fnHide() {
        var isHidden = shareVue.shareInfo.isHidden;
        var url = 'story/hiddenStory.ajax';
        if (isHidden != 0) {
            url = 'story/cancleHiddenStory.ajax';
        }
        $service.get(url, {
            storyId : topicDetailsVue.topicDetails.id
        }, function(ret, err) {
            if (ret) {
                if (ret.ok == 1) {
                    if (isHidden != 0) {
                        fnToast('取消隐藏成功');
                        shareVue.$set(shareVue.$data.shareInfo, 'isHidden', 0);
                    } else {
                        fnToast('隐藏成功');
                        shareVue.$set(shareVue.$data.shareInfo, 'isHidden', 1);
                    }
                    // fnCloseShare();
                } else {
                    if (ret.data.content === '需要登录') {
                        return;
                    }
                    fnToast(ret.data.content);
                }
            } else {
                fnToast(err.msg, 'middle');
            }
        });
    }

    function fnTop() {
        api.closeFrame({
            name: 'topic_detail_share_frame'
        });
        var isTopicTop = shareVue.shareInfo.isTopicTop != 0 || shareVue.shareInfo.isTop != 0;
        if (isTopicTop) {
            $service.get('story/cancelTopStory.ajax', {
                storyId : topicDetailsVue.topicDetails.id
            }, function(ret, err) {
                if (ret) {
                    if (ret.ok == 1) {
                        if (isTopicTop != 0) {
                            fnToast('取消置顶成功');
                            shareVue.$set(shareVue.$data.shareInfo, 'isTopicTop', 0);
                            shareVue.$set(shareVue.$data.shareInfo, 'isTop', 0);
                        }
                        // fnCloseShare();
                    } else {
                        fnToast(ret.data.content);
                    }
                } else {
                    fnToast(err.msg, 'middle');
                }
            });
        } else {
            // fnCloseShare();
            fnOpenTopDialog();
        }
    }

    var isOpenTopDialog = false;
    function fnOpenTopDialog() {
        isOpenTopDialog = true;
        isOpenChoiceDialog = false;
        isCircleType = false;
        isHomeType = false;
        var manager = shareVue.shareInfo.isManager;
        if (manager == 1 || manager == 2) {
            fnSetDisplay('.top_type_normal', false);
            fnSetFlex('.top_type_special');
            isCircleType = true;
        } else if (manager == 3) {
            fnSetFlex('.top_type_normal');
            fnSetDisplay('.top_type_special');
        }
        fnSetDisplay('.select_top_type', true);
        fnRmCls('circleTop', 'active');
        fnRmCls('homeTop', 'active');
        fnSetTxt('.select_time_tile_txt', '选择置顶位置');
        var defaultDate = fnDateYMD(new Date());
        fnSetValue('start_date_time', defaultDate);
        fnSetValue('end_date_time', defaultDate);
        fnSetDisplay('.select_time_div', true);
    }

    var isOpenChoiceDialog = false;
    function fnOpenChoiceDialog() {
        isOpenChoiceDialog = true;
        isOpenTopDialog = false;
        fnSetDisplay('.select_top_type', false);
        fnSetTxt('.select_time_tile_txt', '选择精华时间');
        var defaultDate = fnDateYMD(new Date());
        fnSetValue('start_date_time', defaultDate);
        fnSetValue('end_date_time', defaultDate);
        fnSetDisplay('.select_time_div', true);
    }

    function fnCloseSelectTimeDialog() {
        setTimeout(function() {
            fnSetDisplay('.select_time_div', false);
        }, 100);
    }

    var isCircleType = false;
    var isHomeType = false;
    function fnSelectTopType(index) {
        if (index == 1) {
            if (isCircleType) {
                fnRmCls('circleTop', 'active');
            } else {
                fnAddCls('circleTop', 'active');
            }
            isCircleType = !isCircleType;
        } else {
            if (isHomeType) {
                fnRmCls('homeTop', 'active');
            } else {
                fnAddCls('homeTop', 'active');
            }
            isHomeType = !isHomeType;
        }
    }

    function fnConfirmTime() {
        var startDate = fnGetValue('start_date_time').replace('年', '-').replace('月', '-').replace('日', '');
        var endDate = fnGetValue('end_date_time').replace('年', '-').replace('月', '-').replace('日', '');
        if (isOpenChoiceDialog) {
            if (fnCompareDate(startDate, endDate)) {
                fnToast('结束时间不能小于开始时间', 'middle');
            } else if (fnFiveDate(startDate, endDate)) {
                fnToast('只能精华5天', 'middle')
            } else if (fnCompareToday(startDate)) {
                fnToast('不可以选择今天以前的时间', 'middle')
            } else {
                fnCloseSelectTimeDialog();
                fnSetChoice(startDate, endDate);
            }
        } else {
            if (!isCircleType && !isHomeType) {
                fnToast('至少选择一种置顶类型', 'middle');
                return;
            }
            if (fnCompareDate(startDate, endDate)) {
                fnToast('结束时间不能小于开始时间', 'middle');
            } else if (fnFiveDate(startDate, endDate)) {
                fnToast('只能置顶5天', 'middle')
            } else if (fnCompareToday(startDate)) {
                fnToast('不可以选择今天以前的时间', 'middle')
            } else {
                fnCloseSelectTimeDialog();
                fnSetTop(startDate, endDate);
            }
        }
    }

    function fnSetTop(topStartDate, topEndDate) {
        var topicTop = 1;
        if (isCircleType && isHomeType) {
            topicTop = 3;
        } else if (isCircleType && !isHomeType) {
            topicTop = 1;
        } else if (!isCircleType && isHomeType) {
            topicTop = 2;
        } else {
            fnToast('至少选择一种置顶类型', 'middle');
            return;
        }
        var params = {
            storyId : topicDetailsVue.topicDetails.id,
            topStartDate : topStartDate,
            topEndDate : topEndDate,
            topicTop : topicTop,
            topStatus : 1
        }
        $service.post('story/setTopStory.ajax', params, function(ret, err) {
            if (ret) {
                if (ret.ok == 1) {
                    fnToast('设置置顶成功');
                    shareVue.$set(shareVue.$data.shareInfo, 'isTopicTop', 1);
                } else {
                    fnToast(ret.data.content);
                }
            } else {
                fnToast(err.msg, 'middle');
            }
        });
    }

    function fnChoice() {
        api.closeFrame({
            name: 'topic_detail_share_frame'
        });
        var isChoice = shareVue.shareInfo.isChoice;
        if (isChoice != 0) {
            $service.get('story/cancelChoiceStory.ajax', {
                storyId : topicDetailsVue.topicDetails.id
            }, function(ret, err) {
                if (ret) {
                    if (ret.ok == 1) {
                        if (isChoice != 0) {
                            fnToast('取消精华成功');
                            shareVue.$set(shareVue.$data.shareInfo, 'isChoice', 0);
                        }
                        // fnCloseShare();
                    } else {
                        fnToast(ret.data.content);
                    }
                } else {
                    fnToast(err.msg, 'middle');
                }
            });
        } else {
            fnOpenChoiceDialog();
        }
    }

    function fnSetChoice(choiceStartDate, choiceEndDate) {
        $service.get('story/setChoiceStory.ajax', {
            choiceStartDate : choiceStartDate,
            choiceEndDate : choiceEndDate,
            choiceStatus : 1,
            storyId : topicDetailsVue.topicDetails.id
        }, function(ret, err) {
            if (ret) {
                if (ret.ok == 1) {
                    fnToast('设置精华成功');
                    shareVue.$set(shareVue.$data.shareInfo, 'isChoice', 1);
                    // fnCloseShare();
                } else {
                    fnToast(ret.data.content);
                }
            } else {
                fnToast(err.msg, 'middle');
            }
        });
    }

    function fnIsDelete() {
        api.openFrame({
            name : 'popup_frame',
            url : '../popup/popup_frame.html',
            rect : {
                x : 0,
                y : 0,
                w : 'auto',
                h : 'auto'
            },
            pageParam : {
                refreshName:'refreshDelete'
            },
            bgColor : 'rgba(0,0,0,0)',
            bounces : false
        });
    }
    function fnDelete() {
        $service.get('story/deleteStory.ajax', {
            storyId : topicDetailsVue.topicDetails.id
        }, function(ret, err) {
            if (ret) {
                if (ret.ok == 1) {
                    //删除成功之后，征集详情页需要刷新，有一些按钮需要控制显隐
                    api.sendEvent({
                        name : 'refresh',
                        extra : {}
                    });
                    fnToast('删除成功', 'middle');
                    // fnCloseShare();
                    setTimeout(fnBack, 2000);
                } else {
                    if (ret.data.content == '需要登录') {
                        return;
                    }
                    fnToast(ret.data.content);
                    api.closeFrame({
                        name: 'topic_detail_share_frame'
                    });
                }
            } else {
                fnToast(err.msg, 'middle');
                api.closeFrame({
                    name: 'topic_detail_share_frame'
                });
            }
        });
    }
    //分享操作vue
    var shareVue = new Vue({
        el : '.share_dialog',
        data : {
            shareInfo : {}
        }
    });
    function fnEdit() {
        api.closeFrame({
            name: 'topic_detail_share_frame'
        });
        if (type == 1) {
            fnRemoveListener();
            fnOpenWin('re_edit_topic', null, {
                winName : api.winName,
                frameName : api.frameName,
                storyInfo : topicDetailsVue.topicDetails,
                productList : topicDetailsVue.productList
            });
        } else if (type == 3) {
            fnRemoveListener();
            api.setFullScreen({
                fullScreen : false
            });
            fnOpenWin('re_edit_video_topic', null, {
                winName : api.winName,
                frameName : api.frameName,
                storyInfo : topicDetailsVue.topicDetails,
                productList : topicDetailsVue.productList,
                mainImg : topicDetailsVue.topicDetails.mediaInfo[0].url+'?x-oss-process=video/snapshot,t_3000,f_jpg'
            })
        } else {
            fnToast('该类型话题不能编辑', 'middle');
        }
    }

    var isClickSend = false;
    //点击发布按钮
    function fnClickSendBtn() {
        isClickSend = true;
        transImgs = [];
        if (uploadImgVue.list.length > 1) {
            api.showProgress();
//				if(api.systemType == 'ios'){
//					fnTransImgsUrl(0);
//				}else{
            for(var i = 0; i < uploadImgVue.list.length -1; i++){
                transImgs.push(uploadImgVue.list[i].path);
            }
            fnUploadImg();
//				}
        } else {
            if (replyVue.isReply) {
                fnCommentTopic(null, replyVue.comment.id);
            } else {
                fnCommentTopic();
            }
        }
    }
    var canComment = true;
    //图文评论
    function fnCommentTopic(commentImgs, commentId) {
        if(!canComment){
            return;
        }
        var comment = fnGetValue('.comment_input');
        // comment = fnReplaceComment(comment);
        if (fnIsEmpty(commentImgs) && fnIsEmpty(comment)) {
            fnToast('评论内容不能为空', 'middle');
            return;
        }
        api.showProgress();
        var params = {
            storyId : topicDetailsVue.topicDetails.id,
            commentToUserCode : topicDetailsVue.topicDetails.userCode,
            commentToCode : topicDetailsVue.topicDetails.userCode,
            topicId : topicDetailsVue.topicDetails.topicId,
            comment : comment
        }
        if (!fnIsEmpty(commentImgs)) {

            params.commentImgs = commentImgs;
        }
        if (commentId) {
            params.commentId = commentId;
        }
        var url = 'comment/insertStoryComment.ajax';
        if (type == 4) {
            url = 'schoolstory/addComment.ajax';
        }
        canComment = false;
        $service.get(url, params, function(ret, err) {
            canComment = true;
            if (ret) {
                uploadImgVue.list = [{}];
                uploadUrls = '';
                fnResetInput();
                if (ret.ok == 1) {
                    // document.body.scrollTop = document.getElementById("topic-wrap").offsetTop - 60;
                    api.toast({
                        msg : '评论成功',
                        location : 'middle',
                        duration : 2000
                    });
                    $api.dom('.comment_input').value = '';
                    api.writeFile({
                        path : api.boxDir + '/comment_content_'+ storageUserId + '_' + topicId + '.txt',
                        data : ''
                    });
                    $api.dom('.comment_input').style.height = '32px';
                    oldInputValue = null;
                    //（开始）先把这一条放到数据里 再去请求最新的数据替换  为了解决bug14438
                    commentsVue.commentsList.unshift(params);
                    setTimeout(function(){
                        var h;
                        if(type == 3){
                            h = $('#topic-wrap').offset().top - 214;
                        }else{
                            h = $('#topic-wrap').offset().top - 60;
                        }
                        $("body,html").scrollTop(h);
                        commentsPageIndex = 1;
                        fnGetComments();
                        // alert(JSON.stringify(commentsVue.commentsList));
                    },500);
                    //结束
                    fnSetDisplay('.comment_div', true);
                    fnSetDisplay('.no_comment_div', false);
                    fnSetTxt('.comment_num', ++topicDetailsVue.topicDetails.commentNumber);
                    if (commentId) {
                        replyVue.comment.replyNumber++;
                        replyIndex = 1;
                        $api.dom('.reply_content').scrollTop = 0;
                        fnGetAllReply(commentId);
                        fnSetDisplay('.small_money_img', false);
//<<<<<<< .mine
//                      }else {
//                          $api.rmStorage('comment_content_'+ storageUserId + '_' + topicId);
                        // $api.rmStorage('comment_content_'+ storageUserId + '_' + topicId);
                    }
                } else {
                    if (ret.data.content == '需要登录') {
                        return;
                    }
                    $api.dom('.comment_input').value = '';
                    $api.dom('.comment_input').style.height = '32px';
                    fnToast(ret.data.content, 'middle', '3000');
                }
            } else {
                fnToast(err.msg, 'middle')
            }
        }, true)
    }

    //表情评论
    function fnExprComment(el) {
        var comment = el.src;
        var params = {
            storyId : topicDetailsVue.topicDetails.id,
            commentToUserCode : topicDetailsVue.topicDetails.userCode,
            commentToCode : topicDetailsVue.topicDetails.userCode,
            topicId : topicDetailsVue.topicDetails.topicId,
            comment : '',
            commentImgs : comment
        }
        if (replyVue.isReply) {
            params.commentId = replyVue.comment.id;
        }
        var url = 'comment/insertStoryComment.ajax';
        if (type == 4) {
            url = 'schoolstory/addComment.ajax';
        }
        $service.get(url, params, function(ret, err) {
            if (ret) {
                uploadImgVue.list = [{}];
                uploadUrls = '';
                fnResetInput();
                if (ret.ok == 1) {
                    // document.body.scrollTop = document.getElementById("topic-wrap").offsetTop - 60;
                    api.toast({
                        msg : '评论成功',
                        location : 'middle',
                        duration : 2000
                    });
                    $api.dom('.comment_input').value = '';
                    $api.dom('.comment_input').style.height = '32px';
                    oldInputValue = null;
                    //（开始）先把这一条放到数据里 再去请求最新的数据替换  为了解决bug14438
                    commentsVue.commentsList.unshift(params);
                    setTimeout(function(){
                        var h = $('#topic-wrap').offset().top - 60;
                        $("body,html").scrollTop(h);
                        fnGetComments();
                    },500);
                    //结束
                    fnSetDisplay('.comment_div', true);
                    fnSetDisplay('.no_comment_div', false);
                    fnSetTxt('.comment_num', ++topicDetailsVue.topicDetails.commentNumber);
                    fnSetDisplay('.expression_div', false);
                    fnHideInputOtherOperation();
                    if (replyVue.isReply) {
                        replyVue.comment.replyNumber++;
                        replyIndex = 1;
                        $api.dom('.reply_content').scrollTop = 0;
                        fnGetAllReply(replyVue.comment.id);
                        fnSetDisplay('.input_operations', false);
                    }
                } else {
                    if (ret.data.content == '需要登录') {
                        return;
                    }
                    $api.dom('.comment_input').value = '';
                    $api.dom('.comment_input').style.height = '32px';
                    fnToast(ret.data.content, 'middle', '3000');
                }
            } else {
                fnToast(err.msg, 'middle')
            }
        }, true)
    }

    // //打开所有评论列表界面
    function fnOpenAllComment() {
        fnRemoveListener();
        fnOpenWin('topic_all_comment', null, {
            id : topicDetailsVue.topicDetails.id,
            type : type,
            sum : topicDetailsVue.topicDetails.commentNumber,
            topicDetails : topicDetailsVue.topicDetails,
            userId : storageUserId,
            winName : api.winName,
            frameName : api.frameName
        });
    }

    //初始化视频播放器
    var videoPlayer;
    var isPlayNoWifi = false;
    var isReady = false;
    function fnNewPlayer() {
        var url;
        if (topicDetailsVue.topicDetails.mediaInfo && topicDetailsVue.topicDetails.mediaInfo.length > 0) {
            url = topicDetailsVue.topicDetails.mediaInfo[0].url;
        } else {
            url = 'https://sg-video.oss-cn-beijing.aliyuncs.com/story/video/2018/01/0093d08a7fc04b12bb9bf0816b0a164d.mp4';
        }
        if (videoPlayer) {
            videoPlayer.loadByUrl(url);
        } else {
            videoPlayer = new Aliplayer({
                id : 'video_play',
                width : '100%',
                height : '214px',
                x5_type : 'h5',
                autoplay : true,
                x5_orientation : 'portraint',
                useH5Prism : true,
                playsinline : true,
                x5_video_position : 'center',
                x5_fullscreen : true,
                source : url,
                preload : true,
                skinLayout : false,
                showBuffer : true,
                // cover: topicDetailsVue.topicDetails.storyImgs
            }, function(player) {
                player.on('ready', function(e) {
                    var duration = player.getDuration();
                    fnSetTxt('.video_duration', fnDuration(duration));
                    fnUploadPlay();
                    player.play();
                });
                var isPublisShare = api.readFile({
                    sync : true,
                    path : api.boxDir + '/isPublisShare.txt'
                });
                player.on('play', function(e) {
                    fnSetBackgroundUrl('.video_control_play_pause', '../../image/edit_topic/pause.png');
                    fnSetDisplay('.video_no_wifi', false);
                });
                player.on('pause', function(e) {
                    isVideoPlaying = false;
                    fnSetBackgroundUrl('.video_control_play_pause', '../../image/edit_topic/play.png');
                });
                player.on('waiting', function(e) {
                    fnLogStr('loading');
                    fnSetBackgroundUrl('.video_play_btn', '../../image/loading.png');
                    fnAddCls('.video_play_btn', 'rotate');
                });
                player.on('error', function(e) {
//						fnToast('网络较差，请切换网络','middle');
                });
                player.on('requestFullScreen', function(e) {
                });
                player.on('timeupdate', function(e) {
                    if (fnIsNoNet() || fnIsNoWifi()) {
                        isCanPlay = false;
                        return;
                    }
                    isReady = true;
                    if(!isCanPlay) {
                        player.pause();
                        fnSetDisplay('.video_inner', true);
                        fnSetDisplay('.video_control', false);
                        fnSetDisplay('.video_control_play_pause', false);
                    }
                    isVideoPlaying = true;
                    isCanPlay = true;
                    var time = parseInt(e.paramData);
                    if (time > 1000) {
                        fnSetDisplay('.video_inner', false);
                    }
                    var currentTime = player.getCurrentTime();
                    fnSetTxt('.current_time', fnDuration(currentTime));
                    fnUpdateProgressBarWidth(player);
                });
                player.on('ended', function() {
                    isVideoPlaying = false;
                    fnSetBackgroundUrl('.video_play_btn', '../../image/edit_topic/play.png');
                    fnRmCls('.video_play_btn', 'rotate');
                    if (!isFullscreen && !isCloseWin) {
                        fnSetDisplay('.video_inner', true);
                        fnSetDisplay('.video_control', false);
                        fnSetDisplay('.video_control_play_pause', false);
                    }
                    isEnd = true;
                });
            });
        }
    }

    function fnIsNoWifi() {
        var connectionType = api.connectionType;
        if (connectionType == 'wifi') {
            isPlayNoWifi = false;
        }
        if (!isPlayNoWifi) {
            var connectionType = api.connectionType;
            if (connectionType !== 'wifi') {
                if (videoPlayer) {
                    isCustomPause = true;
                    videoPlayer.pause();
                }
                fnSetDisplay('.video_inner', true);
                fnSetDisplay('.video_play_btn', false);
                fnSetDisplay('.video_no_wifi', true);
                fnSetDisplay('.video_control_play_pause', false);
                fnSetTxt('.no_wifi_toast', '当前已处于2G/3G/4G网络自动播放已暂停');
                return true;
            }
        }
        return false;
    }

    var isCanPlay = true;
    function fnIsNoNet() {
        var connectionType = api.connectionType;
        if (connectionType == 'none') {
            if (videoPlayer) {
                isCustomPause = false;
                videoPlayer.pause();
            }
            fnSetDisplay('.video_inner', false);
            fnSetDisplay('.video_play_btn', false);
            // fnSetDisplay('.video_control_play_pause', false);
            fnSetDisplay('.video_no_wifi', true);
            fnSetDisplay('.video_control_play_pause', false);
            fnSetTxt('.no_wifi_toast', '当前无网络,自动播放已暂停');
            isCanPlay = false;
            return true;
        }
        return false;
    }

    function fnUploadPlay() {
        $service.get('story/play.ajax', {
            storyId : topicDetailsVue.topicDetails.id
        }, function(ret, err) {
        }, true);
    }

    //更新视频播放进度条
    function fnUpdateProgressBarWidth(player) {
        var width = api.systemType === 'android' ? api.frameWidth * (player.getCurrentTime() / player.getDuration()) : api.winWidth * (player.getCurrentTime() / player.getDuration());
        $api.dom('.progress_bar').style.width = width + 'px';
        $api.dom('.progress_outer').style.left = width - 10 + 'px';
    }
    //播放视频
    var isEnd = false;
    function fnPlay(event) {
        fnCancelBubble(event);
        if (!videoPlayer)
            return;
        if (videoPlayer.getStatus() == 'ready' || videoPlayer.getStatus() == 'ended') {
            isPlayNoWifi = true;
            videoPlayer.play();
        }
    }

    function fnContinuePlay(){
        isCanPlay = true;
        if(isCustomPause) {
            return;
        }
        if (!videoPlayer)
            return;
        isPlayNoWifi = true;
        if(isReady){
            videoPlayer.play();
        }
    }

    function fnPlayNoWifi(event) {
        isPlayNoWifi = true;
        fnCancelBubble(event);
        if (!videoPlayer)
            return;
        if (!isCanPlay) {
            isCanPlay = true;
            var connectionType = api.connectionType;
            if (connectionType == 'none') {
                fnToast('当前无网络，无法继续播放', 'middle');
                return;
            }
        }

        videoPlayer.play();
    }

    //视频全屏
    var isFullscreen = false;
    var videoHeight
    var videoWidth
    function fnFullscreen() {
        var extJson = JSON.parse(topicDetailsVue.topicDetails.mediaInfo[0].ext||"{}");
        videoHeight = extJson.height || 1;
        videoWidth = extJson.width || 0;
        if (!videoPlayer)
            return;
        if (isFullscreen) {
            isFullscreen = false;
            if (videoHeight <= videoWidth) {
                api.sendEvent({
                    name : 'APICloudCallNaviteMethod',
                    extra : {
                        type : 10, // type=10代表横竖屏功能
                        canCallBack : 0, // 不需要回调
                        command : ['1'],            // command是个数组,在type=10时,’1’表示竖屏, '2'表示横屏
                    }
                });
            }
            videoPlayer.setPlayerSize(frameWidth + 'px', '214px');
            $api.dom('.video_inner').style.height = '214px';
            $api.dom('.video_control_play_pause').style.marginTop = 80 + 'px';
            $api.dom('.video_control').style.paddingBottom = 0 + 'px';
            fnSetDisplay('.chat_div', true);
            fnSetDisplay('.video_header_bg', true);
        } else {
            var height;
            var width;
            isFullscreen = true;
            if (videoHeight > videoWidth) {
                // api.sendEvent({
                // 	name : 'APICloudCallNaviteMethod',
                // 	extra : {
                // 		type : 10, // type=10代表横竖屏功能
                // 		canCallBack : 0, // 不需要回调
                // 		command : ['1'],            // command是个数组,在type=10时,’1’表示竖屏, '2'表示横屏
                // 	}
                // });
                height = api.frameHeight;
                videoPlayer.setPlayerSize('100%', height + 'px');
                fnSetDisplay('.chat_div', false);
                fnSetDisplay('.video_header_bg', false);
                $api.dom('.video_control_play_pause').style.marginTop = api.frameHeight / 2 - 30 + 'px';
                $api.dom('.video_control').style.paddingBottom = api.safeArea.bottom + 'px';
                $api.dom('.video_inner').style.height = api.frameHeight + 'px';
            } else {
                api.sendEvent({
                    name : 'APICloudCallNaviteMethod',
                    extra : {
                        type : 10, // type=10代表横竖屏功能
                        canCallBack : 0, // 不需要回调
                        command : ['2'],            // command是个数组,在type=10时,’1’表示竖屏, '2'表示横屏
                    }
                });
                height = api.systemType === 'android' ? api.frameHeight + 25 : api.frameHeight;
                width = api.systemType === 'android' ? api.frameWidth : api.winWidth;
                videoPlayer.setPlayerSize(height + 'px', width + 'px');
                fnSetDisplay('.chat_div', false);
                fnSetDisplay('.video_header_bg', false);
                $api.dom('.video_control_play_pause').style.marginTop = api.frameWidth / 2 - 30 + 'px';
                // $api.dom('.video_control').style.paddingBottom = api.safeArea.bottom + 'px';
                $api.dom('.video_inner').style.height = api.frameWidth + 'px';
            }
        }
        api.execScript({
            winName : api.winName,
            script : 'fnChangeFullscreen(' + isFullscreen + ');'
        });
        api.setFullScreen({
            fullScreen: true
        });
    }

    //监听当前界面滚动事件
    function fnScrollListener() {
        $(document).scroll(function(e) {
            var scrollTop = $(this).scrollTop();
            //在名为winName的window中执行jsfun脚本
            api.execScript({
                name: api.winName,
                frameName:'topic_details_frm1',
                script: 'fnScroll("'+ scrollTop +'","'+ type + '","'+ noImgs +'")'
            })
            var scrollHeight = $(document).height();//html页面高度 整个页面高度
            mScrollHeight = scrollTop;//滚动高度
            var frameHeight = api.frameHeight;
            if (scrollTop + frameHeight == scrollHeight) {
                fnScrollBottom();
                isBottom = true;
            }
        });

        $('.reply_content').scroll(function(e) {
            var h = $(this).height();
            var sh = $(this)[0].scrollHeight;
            var st = $(this)[0].scrollTop;
            if (h + st >= sh - 1) {
                replyIndex++;
                fnGetAllReply(replyVue.comment.id);
            }
        });
    }

    //当滚动到底部时，加载更多相关话题列表
    function fnScrollBottom() {
        if (replyVue.isReply) {
            return;
        }
        if (type == 4) {
            return;
        }

        if (noMoreData) {
            return;
        }
        if(type == 4 ) {
            return;
        }
        // if(topicVue.relativeTopicList.length == 0) {
        //     return;
        // }
        // fnGetRelativeTopic(true, false);
        if(commentsVue.commentsList.length == 0) {
            return;
        }
        if(commentsVue.hasMoreComments){
            commentsPageIndex++;
            fnGetComments(true);
        }
    }

    //当点击视频播放器时，控制视频控制器的显示和隐藏
    function fnClickVideo(e) {
        e = e || window.event;
        if (e.preventDefault)
            e.preventDefault();
        e.returnValue = false;
        if (!videoPlayer)
            return;
        if (videoPlayer.getStatus() == 'playing' || videoPlayer.getStatus() == 'pause' || videoPlayer.getStatus() == 'ready' || videoPlayer.getStatus() == 'ended') {
            if( videoPlayer.getStatus() == 'ended') {
                fnSetBackgroundUrl('.video_play_btn', 'none');
            }
            if (!fnGetDisplay('.video_control')) {
                fnSetDisplay('.video_control', true);
                if (isCanPlay) {
                    fnSetDisplay('.video_control_play_pause', true);
                }
            }else{
                fnSetDisplay('.video_control', false);
                fnSetDisplay('.video_control_play_pause', false);
            }
        }
    }

    var isCustomPause = false;
    //暂停播放
    function fnClickPlayPause(event) {
        fnCancelBubble(event);
        if (!videoPlayer)
            return;
        if (videoPlayer.getStatus() == 'playing' || videoPlayer.getStatus() == 'ready') {
            isCustomPause = true;
            videoPlayer.pause();
        } else {
            isCustomPause = false;
            videoPlayer.play();
        }
    }

    //从视频列表跳转过来时，要暂停上一个界面的视频播放
    function fnPausePreWinVideo() {
        if (api.pageParam.preWinName) {
            api.execScript({
                name : api.pageParam.preWinName,
                frameName : api.pageParam.preFrameName,
                script : 'fnPauseOnDisappear();'
            });
        }
    }

    //对视频时长进行转换
    function fnDuration(duration) {
        if (duration) {
            duration = parseInt(duration);
            var second = parseInt(duration) % 60;
            var min = parseInt(duration / 60);
            if (min < 10) {
                min = '0' + min;
            }
            if (second < 10) {
                second = '0' + second;
            }
            return min + ":" + second;
        }
        return '00:00';
    }

    //监听视频进度触摸事件
    function fnAddProgressBarListener() {
        var x;
        $('.progress_outer').on('touchstart', function(e) {
            x = e.originalEvent.targetTouches[0].pageX;
            if (!videoPlayer)
                return;
            videoPlayer.pause();
        });
        $('.progress_outer').on('touchend', function(e) {
            if (!videoPlayer)
                return;
            var currentTime = parseInt($api.dom('.progress_bar').style.width) / api.winWidth * videoPlayer.getDuration();
            videoPlayer.seek(currentTime);
            videoPlayer.play();
        });
        var touchY = 0;
        var lastTouchY = 0;
        $('.progress_outer').on('touchmove', function(e) {
            if (!videoPlayer)
                return;
            var tmpX = e.originalEvent.targetTouches[0].pageX;
            $api.dom('.progress_bar').style.width = tmpX + 'px';
            $api.dom('.progress_outer').style.left = tmpX - 10 + 'px';
        });
    }

    fnAddChatCloseDivTouchEvent();
    function fnAddChatCloseDivTouchEvent() {
        $('.chat_close_div').on('touchstart', function(e) {
            fnHideInputOtherOperation();
            $api.dom('.comment_input').blur();
        });
//			$('.comment_other_operation').on('touchstart', function(e) {
//				$api.dom('.comment_input').blur();
//			});
        $('.reply_more_operation_div').on('touchend', function(e) {
            fnCloseReplyMoreOperation();
        });
        $('.reward_div').on('touchmove', function(e) {
            e.preventDefault();
        });
        $('.reply_div').on('touchmove', function(e) {
            if(api.systemType == 'ios'){
                $api.addCls($api.dom('body'), 'overfolw_hidden');//TODO
                $api.addCls($api.dom('html'), 'overfolw_hidden');
            }
        });


    }


    //点击“去评论”按钮
    function fnGoComment() {
        var isAndroid = (/android/gi).test(navigator.appVersion);
        var token = api.readFile({
            sync : true,
            path : api.boxDir + '/token.txt'
        });
        if (isAndroid) {
            setTimeout(function() {
                if (fnIsEmpty(token) || token.indexOf('#') == -1) {
                    fnOpenLogin();
                }else{
                    $api.dom('.comment_input').focus();
                }
            }, 300);
        } else {
            if (fnIsEmpty(token) || token.indexOf('#') == -1) {
                fnOpenLogin();
            }else{

                    $api.dom('#login_input').focus();
                    setTimeout(function () {
                        $api.dom('#login_input').focus();

                    },500)
                $api.dom('#login_input').focus();

                // fnOnkeyup($api.dom('.comment_input'));
                    // fnOnInputFocus($api.dom('#login_input'));
            }
        }
    }

    //评论输入框获取焦点事件
    var isEdit = false;
    var isVideoPlaying = false;
    function fnOnInputFocus(el) {
        if(isDelayShowInput){
            $api.dom('.chat_div').style.left = 1000 + 'px';
            setTimeout(function(){
                $api.dom('.chat_div').style.left = 0 + 'px';
            },300);
        }
        if (api.systemType == 'ios') {
            $api.dom('.chat_div').style.position = 'absolute';
        } else {
            if (!isEdit) {
                $api.val($api.dom('.comment_input'), '');
                el.innerHTML = '';
            }
            if(!replyVue.isReply){
                // var saveComment = $api.getStorage('comment_content_'+ storageUserId + '_' + topicId);
                var saveComment = api.readFile({//获取当前用户信息，作为分享使用
                    sync : true,
                    path : api.boxDir + '/comment_content_'+ storageUserId + '_' + topicId + '.txt'
                });
                if(!fnIsEmpty(saveComment)) {
                    // el.innerHTML = saveComment;
                    $api.val($api.dom('.comment_input'), saveComment);
                }
            }
            if (oldInputValue) {
                el.innerHTML = oldInputValue;
                $api.addCls($api.dom('.send_div'), 'active');
                $api.addCls($api.dom('.comment_input'), 'active');
                isEdit = true;
            } else if(imgNum == 0){
                $api.removeCls($api.dom('.send_div'), 'active');
            }
            fnSetDisplay('.input_operations', false);
            $api.css($api.dom(".input_div_inner"),'width:80%');
            fnSetDisplay('.send_div', true);
            fnShowInputOtherOperation();
        }
        if (isFocusLogin) {
            var token = api.readFile({
                sync : true,
                path : api.boxDir + '/token.txt'
            });
            if (fnIsEmpty(token) || token.indexOf('#') == -1) {
                $api.dom('.comment_input').blur();
                if(isVideoPlaying){
                    videoPlayer.pause();
                }
                isNeedLogin = true;
                $api.dom('.chat_div').style.position = 'fixed';
                $api.dom('.chat_div').style.bottom = 0;
                setTimeout(function(){
                    api.sendEvent({
                        name : 'APICloudCallNaviteMethod',
                        extra : {
                            type : 1,
                            canCallBack : 1,
                            toPageName : 'Login'
                        }
                    });
                },1000);
                return;
            }
        }
        isFocusLogin = true;
        if (api) {
            api.readFile({
                path : api.boxDir + '/isBlackAndFocus.txt',
            }, function(ret, err) {
                if (ret.value == -200) {
                    fnToast('您已经被禁言，不能进行该操作');
                    $api.dom('.comment_input').blur();
                    return;
                }
            });
        }
        if(api.systemType == 'ios'){
            setTimeout(function() {
                if (!isEdit) {
                    el.innerHTML = '';
                }
                if(!replyVue.isReply){
                    // var saveComment = $api.getStorage('comment_content_'+ storageUserId + '_' + topicId);
                    var saveComment = api.readFile({//获取当前用户信息，作为分享使用
                        sync : true,
                        path : api.boxDir + '/comment_content_'+ storageUserId + '_' + topicId + '.txt'
                    });
                    if(!fnIsEmpty(saveComment)){
                        el.innerHTML = saveComment;
                    }
                }
                if (oldInputValue) {
                    el.innerHTML = oldInputValue;
                    $api.addCls($api.dom('.send_div'), 'active');
                    $api.addCls($api.dom('.comment_input'), 'active');
                    isEdit = true;
                } else if(imgNum == 0){
                    $api.removeCls($api.dom('.send_div'), 'active');
                }
                fnSetDisplay('.input_operations', false);
                $api.css($api.dom(".input_div_inner"),'width:80%');

                fnSetDisplay('.send_div', true);
                fnShowInputOtherOperation();
            }, 100);
        }
        fnSetDisplay('.hide_keyboard', false);
        fnSetDisplay('.expression_div', false);
        isExpression = false;
    }

    function fnAfterSelectImgs() {
        if (oldInputValue) {
            $api.dom('.comment_input').value = oldInputValue;
            $api.addCls($api.dom('.send_div'), 'active');
            $api.addCls($api.dom('.comment_input'), 'active');
            isEdit = true;
        } else {
            $api.removeCls($api.dom('.send_div'), 'active');
        }
        fnSetDisplay('.input_operations', false);
        $api.css($api.dom(".input_div_inner"),'width:80%');
        fnSetDisplay('.send_div', true);
        // fnShowInputOtherOperation();
    }

    //显示输入框下方布局
    function fnShowInputOtherOperation() {
        fnSetFlex('.comment_other_operation', true);
        fnSetDisplay('.chat_close_div', true);
        fnSetDisplay('.select_expression', true);
        if($api.dom('.reply_div_inner')){
            $api.dom('.reply_div_inner').style.paddingBottom = '50px';
        }
    }

    //隐藏输入框下方布局
    function fnHideInputOtherOperation() {
        fnSetDisplay('.comment_other_operation', false);
        fnSetDisplay('.chat_close_div', false);
        fnSetDisplay('.expression_div', false);
        if($api.dom('.reply_div_inner')){
            $api.dom('.reply_div_inner').style.paddingBottom = '50px';
        }
    }

    //重置评论输入框状态
    function fnResetInput() {
        fnSetFlex('.input_operations', true);
        $api.dom('.comment_input').blur();
        $api.css($api.dom(".input_div_inner"),'width:80%');
        fnSetDisplay('.send_div', false);
        // fnSetValue('.comment_input', '来说点什么吧…');
        $api.val($api.dom('.comment_input'), '');
        $api.dom('.comment_input').style.height = '32px';
        $api.removeCls($api.dom('.comment_input'), 'active');
        isEdit = false;
        if (replyVue.isReply) {
            fnSetDisplay('.input_operations', false);
            // $api.css($api.dom(".input_div_inner"),'width:80%');

        } else {
            fnSetFlex('.input_operations', true);
            // $api.css($api.dom(".input_div_inner"),'width:60%');
        }
    }

    var oldInputValue;
    //评论输入框失去焦点事件
    function fnOnInputBlur(el) {
        $api.dom('.chat_div').style.position = 'fixed';
        setTimeout(function() {
            if (replyVue.isReply) {
                fnSetDisplay('.input_operations', false);
                $api.css($api.dom(".input_div_inner"),'width:80%');

            } else {
                fnSetFlex('.input_operations', true);
                $api.css($api.dom(".input_div_inner"),'width:60%');

            }
            //          if (isClickSend) {
            //              isClickSend = false;
            //              return;
            //          }
            var txt = fnGetValue('.comment_input');
            if (fnIsEmpty(txt)) {
                // fnSetFlex('.input_operations', true);
                fnSetDisplay('.send_div', false);
                // fnSetTxt('.comment_input', '来说点什么吧…');
                // $api.val($api.dom('.comment_input'),'');
                $api.removeCls($api.dom('.comment_input'), 'active');
            } else {
                oldInputValue = txt;
                // fnSetFlex('.input_operations', true);
                fnSetDisplay('.send_div', false);
                // fnSetTxt('.comment_input', '来说点什么吧…');
                // $api.val($api.dom('.comment_input'),'');
                $api.removeCls($api.dom('.comment_input'), 'active');
            }
        }, 100);
        setTimeout(function() {
            if (!isClickExPression) {
                fnSetDisplay('.comment_other_operation', false);
            }
            isClickExPression = false;
        }, 300);
    }

    //输入框获取焦点期间，键盘点击事件
    function fnOnkeyup(el) {
        var txt = fnGetValue('.comment_input');
        if (fnIsEmpty(txt) && imgNum == 0) {
            $api.removeCls($api.dom('.send_div'), 'active');
            $api.removeCls($api.dom('.comment_input'), 'active');
            isEdit = false;
        } else {
            $api.addCls($api.dom('.send_div'), 'active');
            $api.addCls($api.dom('.comment_input'), 'active');
            isEdit = true;
        }
    }

    function fnSaveComment(txt) {
        // $api.setStorage('comment_content_'+ storageUserId + '_' + topicId, txt);
        api.writeFile({
            path : api.boxDir + '/comment_content_'+ storageUserId + '_' + topicId + '.txt',
            data : txt
        });
    }

    $('.comment_input').bind('input propertychange', function() {
        var txt = fnGetValue('.comment_input');
        if(!replyVue.isReply) {
            fnSaveComment(txt);
        }
        if ($api.val($api.dom('.comment_input')) != '') {
            $api.addCls($api.dom('.send_div'), 'active');
        }else if(imgNum == 0){
            $api.removeCls($api.dom('.send_div'), 'active');
        }
    });

    //打开选择相片界面
    function fnOpenSelectPicture() {
        setTimeout(function() {
            // $api.dom('.comment_input').focus();
            $api.dom('.comment_input').blur();
        }, 300);
        if (api.systemType === 'android') {
            api.sendEvent({
                name : 'APICloudCallNaviteMethod',
                extra : {
                    type : 9, // 权限管理
                    tag:api.winName,
                    canCallBack : 1, // 返回1时，说明有权限，可进行下一步操作
                    command : ['android.permission.WRITE_EXTERNAL_STORAGE', 'android.permission.READ_EXTERNAL_STORAGE', 'android.permission.CAMERA'] // 需要哪些权限就在数组中传过来
                }
            });
        } else {
            if (uploadImgVue.list.length == 10) {
                fnToast('最多只能选择9张图片', 'middle');
                return;
            }
            fnOpenWin("select_picture", null, {
                winName: api.winName,
                frameName: api.frameName,
                canSelectNum: 10 - uploadImgVue.list.length
            });
        }
    }

    //去标签
    function onPaste(context) {
        setTimeout(function() {
            context.value = context.value.replace(/<("[^"]*"|'[^']*'|[^'">])*>/g, '');
            // fnReplaceComment(context.value)
        }, 0)
    }

    //填充评论上传图片列表，并关闭选择相片界面
    function fnGetSelectedImgs() {
        fnAppendData();
        api.closeToWin({
            name : api.winName
        });
//			$api.dom('.comment_input').focus();
        fnAfterSelectImgs();
    }

    //填充评论上传图片列表
    var imgNum = 0;
    function fnAppendData() {
        setTimeout(function() {
            var data = JSON.parse(api.readFile({
                sync : true,
                path : api.boxDir + '/selectedImgs.txt'
            }));
            fnLog(data);
            if (data && data.length > 0) {
                imgNum = 1;
                $api.addCls($api.dom('.send_div'), 'active');
                for (var i = 0; i < data.length; i++) {
                    uploadImgVue.list.splice(uploadImgVue.list.length - 1, 0, data[i]);
                }
            }else{
                $api.removeCls($api.dom('.send_div'), 'active');
            }
        }, 300);
    }

    //转换话题发表时间
    function formatDateTime(datetime) {
        if (!datetime)
            return "";
        var current_date = new Date().getTime();
        var mul = current_date - datetime;
        var time = parseInt(mul / 1000);
        if (time < 60) {
            return "刚刚";
        } else if (time < 3600) {
            return parseInt(time / 60) + " 分钟前";
        } else if (time < 86400) {
            return parseInt(time / 3600) + " 小时前";
        } else if (time < 604800) {
            return parseInt(time / 86400) + " 天前";
        } else if (time < 2592000) {
            return parseInt(time / 604800) + " 周前";
        } else if (time < 31536000) {
            return parseInt(time / 2592000) + " 个月前";
        } else {
            return parseInt(time / 31536000) + " 年前";
        }
        return datetime;
    }

    //
    $(function() {
        var currYear = (new Date()).getFullYear();
        var opt = {};
        opt.date = {
            preset : 'date'
        };
        opt.datetime = {
            preset : 'datetime'
        };
        opt.time = {
            preset : 'time'
        };
        opt.default = {
            theme : 'android-ics light', //皮肤样式
            display : 'modal', //显示方式
            mode : 'scroller', //日期选择模式
            dateFormat : 'yyyy年mm月dd日',
            lang : 'zh',
            //				showNow : true,
            //				nowText : "今天",
            startYear : currYear, //开始年份
            endYear : currYear + 10 //结束年份
        };
        $("#start_date_time").mobiscroll($.extend(opt['date'], opt['default']));
        $("#end_date_time").mobiscroll($.extend(opt['date'], opt['default']));
    });
    function fnGetShareUrl() {
        var memberId = storageUserId;
        if (fnIsEmpty(memberId)) {
            memberId = topicDetailsVue.topicDetails.userCode;
        }
        var params = {
            type : type,
            id : topicId,
            memberId : memberId
        };
        return new Base64().encode(JSON.stringify(params));
    }

    function fnCopy() {
        var clipBoard = api.require('clipBoard');
        clipBoard.set({
            value : SHARE_HOST + '/topic_details_frame.html?' + fnGetShareUrl()
        }, function(ret, err) {
            if (ret && ret.status) {
                api.closeFrame({
                    name: 'topic_detail_share_frame'
                });
                fnToast('复制成功', 'middle');
            } else {
                fnToast('复制失败', 'middle');
            }
        });
    }

    function fnReplaceComment(comment) {
        if (!fnIsEmpty(comment)) {
            comment = comment.replace(new RegExp(/(<div>)/g), '\n');
            comment = comment.replace(new RegExp(/(<\/div>)/g), '');
            comment = comment.replace(new RegExp(/(<span>)/g), '');
            comment = comment.replace(new RegExp(/(<\/span>)/g), '');
            comment = comment.replace(new RegExp(/(<p>)/g), '\n');
            comment = comment.replace(new RegExp(/(<\/p>)/g), '');
            comment = comment.replace(new RegExp(/(&nbsp;)/g), ' ');
            comment = comment.replace(new RegExp(/(<br>)/g), '\n');
            comment = comment.replace(/<br\s*\/?>/gi, "\r\n");
            comment = comment.replace(/<[^>]+>/g, "");
            fnLogStr(comment);
            return comment;
        }
        return '';
    }

    function fnShareNative(platformType) {
        isShareing = true;
        var url = SHARE_HOST + '/topic_details_frame.html?' + fnGetShareUrl();
        fnLogStr(url);
        var storyContent = fnReplaceComment(topicDetailsVue.topicDetails.storyContentNostyle);
        var title = topicDetailsVue.topicDetails.storyName ? topicDetailsVue.topicDetails.storyName : topicDetailsVue.topicDetails.userName;
        //分享标题
        // var content = storyContent+'\n邀您关注';
        var content = storyContent;
        // if(platformType == 2){
        if(content.length > 30){
            content = content.substring(0,30);
        }
//				content += ' '+url;
// 			}
        var pic;
        if(fnIsEmpty(topicDetailsVue.topicDetails.mainImg)){
            var storyImgs = topicDetailsVue.topicDetails.storyImgs;
            if(storyImgs && storyImgs.length > 0){
                pic = storyImgs[0] ? storyImgs[0] : 'http://www.ehaier.com/mstatic/wd/v2/img/sg.png';
            }
        }else{
            pic = topicDetailsVue.topicDetails.mainImg.indexOf('../') == '-1' ? topicDetailsVue.topicDetails.mainImg : 'http://www.ehaier.com/mstatic/wd/v2/img/sg.png';
        }
        if(fnIsEmpty(pic)) {
            pic = 'http://www.ehaier.com/mstatic/wd/v2/img/sg.png';
        }
        api.showProgress();
        //分享图片，写绝对路径  是否后台获取
        api.sendEvent({
            name : 'APICloudCallNaviteMethod',
            extra : {
                type : 3,
                canCallBack : 1,
                command : [title, content, pic, url, 0, platformType]
            }
        });
    }

    function fnSetFlex(target) {
        if (target.indexOf(".") >= 0) {
            $api.dom(target).style.display = 'flex';
            $api.dom(target).style.display = '-webkit-flex';
        } else {
            $api.byId(target).style.display = 'flex';
            $api.byId(target).style.display = '-webkit-flex';
        }
    }
</script>
</html>
